# Detemine the formatting of the log that will be print to the access.log file
log_format testlog '$remote_addr - $remote_user [$time_local] '
               '"$request" $status $bytes_sent '
               '"$http_referer" $http_user_agent $request_body $gzip_ratio '
               '"$request_time $upstream_connect_time $upstream_header_time $upstream_response_time ';

# Define the upstreams for image proxy service and actual chat web app
upstream image-proxy {
    server imageproxy:8080;
}

# Determine where to output the log
# access_log /var/log/nginx/access.log;

proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header Host $http_host;
proxy_set_header X-Forwarded-Proto $scheme;

include snippets/ssl-params.conf;

#Redirect to SSL
server {
    listen 80;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    #listen 80;
    listen 443 ssl;

    server_name local.actual.chat;

    location / {
        proxy_pass http://local.actual.chat:7080;

        # additional setting to support Server-Side Blazor
        # https://www.indie-dev.at/2021/07/18/nginx-blazor-server-side/
        proxy_read_timeout 1d;
        proxy_connect_timeout 4;
        proxy_send_timeout 1d;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }
}

server {
    #listen 80;
    listen 443 ssl;

    server_name cdn.local.actual.chat;

    location / {
        proxy_pass http://local.actual.chat:7080/api/content/;
    }
}

server {
    #listen 80;
    listen 443 ssl;

    server_name media.local.actual.chat;

    location / {
        proxy_pass http://image-proxy;
    }
}
