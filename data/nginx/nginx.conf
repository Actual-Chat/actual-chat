# Detemine the formatting of the log that will be print to the access.log file
log_format testlog '$remote_addr - $remote_user [$time_local] '
               '"$request" $status $bytes_sent '
               '"$http_referer" $http_user_agent $request_body $gzip_ratio '
               '"$request_time $upstream_connect_time $upstream_header_time $upstream_response_time ';

# Define the upstreams for image proxy service and actual chat web app
upstream actaul-chat-app {
    server host.docker.internal:7080;
}

upstream image-proxy {
    server imageproxy:8080;
}

#Redirect to SSL
# server {
#     listen 80;
#
#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

server {
    # Determine where to output the log
    # access_log /var/log/nginx/access.log;

    listen 80;
    listen 443 ssl;
    include snippets/ssl-params.conf;

    server_name local.actual.chat;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://actaul-chat-app;
    }
}

server {
    # Determine where to output the log
    # access_log /var/log/nginx/access.log;

    listen 80;
    listen 443 ssl;
    include snippets/ssl-params.conf;

    server_name cdn.local.actual.chat;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://actaul-chat-app/api/content/;
    }
}

server {
    # Determine where to output the log
    # access_log /var/log/nginx/access.log;

    listen 80;
    listen 443 ssl;
    include snippets/ssl-params.conf;

    server_name media.local.actual.chat;

    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://image-proxy;
    }
}
