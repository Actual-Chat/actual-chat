services:
  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1,opensearch-node2 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9201:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - opensearch-net # All of the containers will join the same Docker bridge network
  opensearch-node2:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch-node2
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node2
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data2:/usr/share/opensearch/data
    networks:
      - opensearch-net
  opensearch-ml1:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch-ml1
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-ml1
      - node.roles=ml
      - discovery.seed_hosts=opensearch-node1,opensearch-node2
      - cluster.initial_cluster_manager_nodes=opensearch-node1,opensearch-node2
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-ml1:/usr/share/opensearch/data
    networks:
      - opensearch-net

  # OpenSearch requires pandas v2.0.3.
  # So we stick with python 3.9 because it is the only python version
  # having prebuilt wheel (*.whl) file for pandas 2.0.3,
  # as prebuilt *.whl drastically reduces package installation time.
  # See https://www.piwheels.org/project/pandas/ for possible python/pandas combos.
  opensearch-config:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.9
        RUN pip install pandas==2.0.3 deprecated opensearch-py opensearch-py-ml requests
        WORKDIR /workdir
        CMD python ./opensearch-setup.py
    environment:
      OPENSEARCH_CLUSTER_URL: 'http://opensearch-node1:9200'
      OPENSEARCH_ML_MODEL_GROUP: 'NLP_model_group'
      SLEEP_ON_FAILURE_SECONDS: 5
      TORCHSCRIPT_MODEL_PATH: /ml_model/sentence-transformers_paraphrase-MiniLM-L3-v2-1.0.1-torch_script.zip
      TORCHSCRIPT_MODEL_CONFIG_PATH: /ml_model/config.json
    volumes:
      - type: bind
        source: ./ml_model
        target: /ml_model
      - type: bind
        source: ./opensearch-setup.py
        target: /workdir/opensearch-setup.py
    networks:
      - opensearch-net
    depends_on:
      - opensearch-ml1
      - opensearch-node1
      - opensearch-node2
    restart: on-failure

  opensearch-dashboards:
    build:
      context: .
      dockerfile: opensearch-dashboard-no-security.dockerfile
    container_name: opensearch-dashboards
    ports:
      - 5602:5601 # Map host port 5601 to container port 5601
    expose:
      - "5602" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      ml_commons_dashboards.enabled: true
      OPENSEARCH_HOSTS: '["http://opensearch-node1:9200","http://opensearch-node2:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
      DISABLE_SECURITY_PLUGIN: true
    networks:
      - opensearch-net

volumes:
  opensearch-data1:
  opensearch-data2:
  opensearch-ml1:

networks:
  opensearch-net:
