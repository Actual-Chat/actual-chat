@page "/login"
@page "/login/{RedirectTo}"
@page "/login/{Reason}/{RedirectTo}"

<MainHeader>Sign in to Actual.chat</MainHeader>

You must sign in @(Reason.NullIfEmpty() ?? "to use this page").

<AuthorizeView>
    <NotAuthorized>
        <SignInDropdown/>
    </NotAuthorized>
    <Authorized>
    </Authorized>
</AuthorizeView>

@code {
    [Inject] private NavigationManager Nav { get; init; } = null!;

    [CascadingParameter] public Task<AuthState> AuthStateTask { get; set; } = null!;
    [Parameter] public string? Reason { get; set; }
    [Parameter] public string? RedirectTo { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthStateTask.ConfigureAwait(true);
        if (authState.User != null)
            Nav.NavigateTo(RedirectTo.NullIfEmpty() ?? "/");
    }
}
