@inherits ComputedStateComponent<ComputeStateTestComponent.Model>
@{
    var mParent = ParentModel;
    var m = State.ValueOrDefault;
}


<h3>@mParent.Value</h3>
<h2>Own state value is</h2>
<h3>@m.Value</h3>

@code {
    [Inject] ComputeStateTestService TestService { get; init; } = null!;

    [CascadingParameter] ComputeStateTestComponent.Model ParentModel { get; init; }

    protected override ComputedState<ComputeStateTestComponent.Model>.Options GetStateOptions()
        => ComputedStateComponent.GetStateOptions(GetType(),
            static t => new ComputedState<ComputeStateTestComponent.Model>.Options() {
                InitialValue = ComputeStateTestComponent.Model.None,
                Category = ComputedStateComponent.GetStateCategory(t),
            });

    protected override async Task<ComputeStateTestComponent.Model> ComputeState(CancellationToken cancellationToken) {

        var value = await TestService.State.Use(cancellationToken).ConfigureAwait(false);
        return new(value);
    }
}
