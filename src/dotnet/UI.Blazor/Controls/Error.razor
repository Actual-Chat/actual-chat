@if (!_isClosed) {
    <div class="@Class @(_typeClass ??= CssClasses.Default[GetType()]) w-full shadow-md absolute flex flex-col relative justify-center my-1 py-1 px-3 rounded-md text-secondary bg-red-200 z-50">
        <div class="flex flex-row w-full mb-1">
            <div class="bg-red-200 w-5 h-5 text-red-700 justify-center flex items-center mb-0.5">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 fill-red-500" viewBox="0 -2 26 26"><path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-1.351 6.493c-.08-.801.55-1.493 1.351-1.493s1.431.692 1.351 1.493l-.801 8.01c-.029.282-.266.497-.55.497s-.521-.215-.55-.498l-.801-8.009zm1.351 12.757c-.69 0-1.25-.56-1.25-1.25s.56-1.25 1.25-1.25 1.25.56 1.25 1.25-.56 1.25-1.25 1.25z"/></svg>
            </div>
            <div class="flex flex-1 float-left w-full font-medium text-sm px-2">@Title</div>
            <button class="flex float-right mt-0.5"@onclick="Close">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="-4 -4 32 32" class="w-4 h-4 fill-current"><path d="M23.954 21.03l-9.184-9.095 9.092-9.174-2.832-2.807-9.09 9.179-9.176-9.088-2.81 2.81 9.186 9.105-9.095 9.184 2.81 2.81 9.112-9.192 9.18 9.1z"/></svg>
            </button>
        </div>
        <div class="text-sm flex py-1">@ChildContent</div>
    </div>
}

@code {
    private static string? _typeClass;
    private bool _isClosed;

    [Parameter]
    public string Class { get; set; } = "";
    [Parameter]
    public string Title { get; set; } = "Error:";
    [Parameter]
    public EventCallback Dismissed { get; set; }
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private Task Close()
    {
        _isClosed = true;
        return Dismissed.InvokeAsync(null);
    }

    private async Task AutoClose() {
        await Task.Delay(5000).ConfigureAwait(true);
        if (!_isClosed)
            await Close().ConfigureAwait(true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender)
            _ = AutoClose();
    }

}
