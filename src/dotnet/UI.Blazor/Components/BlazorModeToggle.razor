@namespace ActualChat.UI.Blazor.Components
@using System.Reflection
@inject BlazorModeHelper BlazorModeHelper
@inject BlazorCircuitContext CircuitContext
@{
    string GetButtonClass(bool isActive)
        => isActive ? "on bg-accent -disabled" : "bg-accent hover:bg-primary";

    var serverClass = $"btn-xs !rounded-r-none !border-r !border-r-primary {GetButtonClass(IsServerSideBlazor)}";
    var wasmClass = $"btn-xs !rounded-l-none {GetButtonClass(!IsServerSideBlazor)}";
}

<div class="flex-x rounded-sm overflow-hidden w-max">
    <Button Class="@serverClass" Click="_ => BlazorModeHelper.ChangeMode(true)" IsDisabled="@IsServerSideBlazor">Server</Button>
    <Button Class="@wasmClass" Click="_ => BlazorModeHelper.ChangeMode(false)" IsDisabled="@(!IsServerSideBlazor)">WASM</Button>
</div>

@code {
    private bool IsServerSideBlazor { get; set; } = BlazorModeHelper.IsServerSideBlazor;
}
