@namespace ActualChat.UI.Blazor.Components
@using System.Reflection
@inject BlazorModeHelper _blazorModeHelper
@inject BlazorCircuitContext _circuitContext

<span class="@(_class ??= this.DefaultClass()) select-none cursor-pointer transition duration-500 ease-in-out group"
     @onclick="@(() => _blazorModeHelper.ChangeMode(!IsServerSideBlazor))">
    @if (_circuitContext.IsPrerendering) {
        <span>"Loading..."</span>
    } else {
        <span class="hover-item">Blazor: <b>@(ModeNames[IsServerSideBlazor ? 1 : 0])</b></span>
        <span class="hover-item alt">Switch to <b>@(ModeNames[IsServerSideBlazor ? 0 : 1])</b></span>
    }
</span>

@code {
    private static readonly string[] ModeNames = { "WASM", "Server" };
    private static string? _class;

    private bool IsServerSideBlazor { get; set; } = BlazorModeHelper.IsServerSideBlazor;

    private string GetActiveText(bool isServerSideBlazor)
        => isServerSideBlazor ? "Blazor Server" : "Blazor WASM";

    private string GetInactiveText(bool isServerSideBlazor)
        => isServerSideBlazor ? "Switch to WASM" : "Switch to Server";
}
