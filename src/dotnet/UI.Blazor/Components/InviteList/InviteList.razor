@using ActualChat.Invite
@using ActualChat.UI.Blazor.Services
@namespace ActualChat.UI.Blazor.Components

@if (Invites.Length > 0) {
    @foreach (var invite in Invites) {
        var link = GetLink(invite);

        <div class="flex-y w-full p-2 pt-1 pr-1 rounded hover:bg-02">

            <CopyToClipboard
                Class="flex-auto"
                Caption="@invite.Id"
                Text="@link.AbsoluteUrl"/>
            <div class="flex-auto text-xxs">
                @if (invite.Remaining > 1) {
                    <span><b>@(invite.Remaining)</b> activations remaining, </span>
                }
                <span>
                    exp. <LiveTimeDeltaText Moment="@invite.ExpiresOn"/>
                </span>

            </div>
        </div>
    }
}

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private ClipboardUI ClipboardUI { get; init; } = null!;
    [Inject] private UrlMapper UrlMapper { get; init; } = null!;

    [Parameter, EditorRequired] public ImmutableArray<Invite> Invites { get; set; } = ImmutableArray<Invite>.Empty;
    [Parameter, EditorRequired] public string LinkFormat { get; set; } = "";

    private DisplayUrl GetLink(Invite invite)
        => Links.Invite(LinkFormat, invite.Id).ToDisplayUrl(UrlMapper);
}
