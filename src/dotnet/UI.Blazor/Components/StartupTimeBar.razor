@using ActualChat.UI.Blazor.Services
@using Cysharp.Text
@using ActualChat.Hosting
@namespace ActualChat.UI.Blazor.Components
@{
    if (HostInfo.HostKind.IsServer())
        return;
    if (UrlMapper.IsActualChat && AccountUI.OwnAccount.ValueOrDefault?.IsAdmin != true)
        return;

    var appBuildTime = (int)LoadingUI.AppBuildTime.TotalMilliseconds;
    var appCreationTime = (int)LoadingUI.AppCreationTime.TotalMilliseconds;
    var loadTime = (int)LoadingUI.LoadTime.TotalMilliseconds;
    var renderTime = (int)LoadingUI.RenderTime.TotalMilliseconds;
    var chatListLoadedTime = (int)LoadingUI.ChatListLoadTime.TotalMilliseconds;
    if (loadTime <= 0)
        return;

    string tooltip;
    using (var tooltipBuilder = ZString.CreateStringBuilder()) {
        if (appBuildTime > 0)
            tooltipBuilder.AppendLine($"App build time: {appBuildTime}ms");
        tooltipBuilder.AppendLine($"App creation time: {appCreationTime}ms");
        tooltipBuilder.AppendLine($"App load time: {loadTime}ms");
        tooltipBuilder.AppendLine($"Render duration: {renderTime-loadTime}ms");
        tooltipBuilder.Append($"Chat list load time: {chatListLoadedTime}ms");
        tooltip = tooltipBuilder.ToString();
    }
}

<div
    class="blazor-mode-toggle px-1"
    data-tooltip="@tooltip"
    data-tooltip-position="@(FloatingPosition.Top.ToPositionString())">
    @if (appBuildTime > 0) {
        @(appBuildTime + "/")
    }
    @($"{appCreationTime}/{loadTime}+{renderTime-loadTime}/{chatListLoadedTime}ms")
</div>

@code {
    [Inject] HostInfo HostInfo { get; init; } = null!;
    [Inject] UrlMapper UrlMapper { get; init; } = null!;
    [Inject] AccountUI AccountUI { get; init; } = null!;
    [Inject] LoadingUI LoadingUI { get; init; } = null!;
}
