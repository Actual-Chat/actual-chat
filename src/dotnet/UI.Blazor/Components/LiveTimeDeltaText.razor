@using ActualChat.UI.Blazor.Services
@inherits ComputedStateComponent<string>
@{
    var m = State.Value;
    var tooltip = "";
    if (Moment.HasValue) {
        var localTime = Hub.DateTimeConverter.ToLocalTime(Moment.GetValueOrDefault());
        tooltip = $"{localTime.ToLongDateString()} at {localTime.ToShortTimeString()}";
    }
}

<span class="@Class live-time-text" title="@tooltip">@m</span>

@code {
    [Inject] private UIHub Hub { get; init; } = null!;

    [Parameter] public string Class { get; set; } = "";
    [Parameter, EditorRequired] public Moment? Moment { get; set; }
    [Parameter] public string NullText { get; set; } = "n/a";

    protected override ComputedState<string>.Options GetStateOptions() {
        var initialValue = Moment.HasValue ? Hub.LiveTime.GetDeltaText(Moment.Value) : NullText;
        return new () {
            InitialValue = initialValue,
            Category = GetStateCategory(),
        };
    }

    protected override Task<string> ComputeState(CancellationToken cancellationToken)
        => Moment.HasValue
            ? Hub.LiveTime.GetDeltaText(Moment.Value, cancellationToken)
            : Task.FromResult(NullText);
}
