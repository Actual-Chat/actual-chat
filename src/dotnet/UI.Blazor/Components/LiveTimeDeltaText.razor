@using ActualChat.UI.Blazor.Services
@inherits ComputedStateComponent<string>
@{
    var m = State.ValueOrDefault;
    var tooltip = Tooltip;
    if (tooltip == null) {
        var timeZoneConverter = LiveTime.TimeZoneConverter;
        var localTime = timeZoneConverter.ToLocalTime(Moment.GetValueOrDefault());
        tooltip = Moment.HasValue ? $"{localTime.ToLongDateString()} at {localTime.ToShortTimeString()}" : NullText;
    }
}

<span class="@Class live-time-text" title="@tooltip">@m</span>

@code {
    [Inject] private ILiveTime LiveTime { get; init; } = null!;

    [Parameter] public string Class { get; set; } = "";
    [Parameter] public Moment? Moment { get; set; }
    [Parameter] public string? Tooltip { get; set; }
    [Parameter] public string NullText { get; set; } = "n/a";

    protected override async Task OnInitializedAsync()
        => await LiveTime.WhenInitialized.ConfigureAwait(false);

    protected override Task<string> ComputeState(CancellationToken cancellationToken)
        => Moment.HasValue ? LiveTime.GetDeltaText(Moment.Value, cancellationToken) : Task.FromResult(NullText);
}
