.toggle {
    @apply flex-1 flex-x justify-end items-center gap-x-2;
    @apply overflow-hidden;
}
.toggle:hover {
    @apply opacity-90;
}
.toggle input {
    /* The actual input is hidden */
    @apply absolute z-minus;
    @apply flex-none;
    @apply w-0 h-0;
    @apply overflow-hidden;
    @apply invisible;
}
.toggle > .c-label {
    @apply flex-1 flex-x items-center;
    @apply overflow-hidden;
}
.toggle > .c-label > .c-text {
    @apply flex-1;
    @apply truncate;
}

/* "Dash" and "O" styling */
.toggle > .dash {
    @apply relative;
    @apply flex-none self-center;
    @apply my-2 h-3.5 w-8;
    @apply rounded-3xl;
    @apply bg-toggle;
    @apply text-sm;
    transition: .2s;
}
.toggle > .dash > .o {
    @apply absolute -left-0 -top-[3px];
    @apply w-5 h-5;
    @apply bg-toggle-circle border-[1.5px] border-toggle rounded-full;
    transition: .15s;
}

.toggle[data-input-checked] > .dash {
    @apply bg-toggle-on;
}
.toggle[data-input-checked] > .dash > .o {
    @apply bg-toggle-circle border-toggle-on;
    @apply translate-x-3;
}

/* Hover */
.toggle:not([data-input-disabled]) > .dash > .o {
    @apply cursor-pointer;
}

/* Active/Focus - impossible, coz input is invisible */
/*
.toggle:has(input:not(:disabled):active) > .dash > .o,
.toggle:has(input:not(:disabled):focus) > .dash > .o {
    @apply animate-checkbox-active-on;
}
.toggle:has(input:not(:disabled):checked:active) > .dash > .o,
.toggle:has(input:not(:disabled):checked:focus) > .dash > .o {
    @apply animate-checkbox-active-off;
}
*/

/* Disabled */
.toggle[data-input-disabled] > .dash {
    @apply border-toggle;
    filter: grayscale(60%);
}
.toggle[data-input-disabled] > .dash > .o {
    @apply bg-05;
}

/* Small toggle */

.toggle.toggle-sm > .dash {
    @apply h-2.5 w-6;
}

.toggle.toggle-sm > .dash > .o {
    @apply h-4 w-4;
}
.toggle.toggle-sm[data-input-checked] > .dash > .o {
    @apply translate-x-2;
}
