@namespace ActualChat.UI.Blazor.Components

<label class="@Class toggle">
    <input type="checkbox" id="@Id" checked="@CurrentValue" @onchange="OnChange" disabled="@IsDisabled">
    <span class="dash"><span class="o">&nbsp;</span></span>
    @if (LabelContent != null) {
        <div class="c-label">@LabelContent</div>
    } else if (!Label.IsNullOrEmpty()) {
        <div class="c-label"><span class="c-text">@Label</span></div>
    }
</label>

@code {
    [Parameter] public string Id { get; set; } = "";
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public string Label { get; set; } = "";
    [Parameter] public RenderFragment? LabelContent { get; set; }
    [Parameter] public bool IsDisabled { get; set; }
    [Parameter] public bool IsChecked { get; set; }
    [Parameter] public EventCallback<bool> IsCheckedChanged { get; set; }

    public bool CurrentValue { get; set; }

    protected override void OnParametersSet()
        => CurrentValue = IsChecked;

    private void OnChange(ChangeEventArgs eventArgs) {
        CurrentValue = eventArgs.Value is true;
        IsCheckedChanged.InvokeAsync(CurrentValue);
    }
}
