@namespace ActualChat.UI.Blazor.Components
@using ActualChat.Users
@inherits ComputedStateComponent<AccountView.Model>

@{
    var m = State.LatestNonErrorValue;
}

<UserAuthorBadge
    UserId="@m.UserId"
    Size="SquareSize.Size8"
    ShowsPresence="true"
    TextClass="leading-5 font-medium text-primary" />

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IAuth Auth { get; init; } = null!;

    protected override ComputedState<Model>.Options GetStateOptions()
        => new () { InitialValue = Model.None };

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var user = await Auth.GetUser(Session, cancellationToken).ConfigureAwait(false);
        return new Model() {UserId = user.Id};
    }

    public sealed record Model {
        public static Model None => new ();
        public Symbol UserId { get; init; } = null!;
    }
}
