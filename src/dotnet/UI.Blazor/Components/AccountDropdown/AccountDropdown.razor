@namespace ActualChat.UI.Blazor.Components
@using ActualChat.Users
@using ActualChat.UI.Blazor.Events
@inherits ComputedStateComponent<AccountFull>
@{
    var account = State.LatestNonErrorValue;
    if (ReferenceEquals(account, AccountFull.Loading))
        return;

    if (!account.IsGuest) {
        <button class="account-btn btn-square" @onclick="@OnSettingsClick">
            <AccountView/>
        </button>
    } else {
        <SignInMenu ButtonType="SignInMenu.MenuButton.Round" />
    }
}

@code {
    [Inject] Session Session { get; init; } = null!;
    [Inject] IAccounts Accounts { get; init; } = null!;
    [Inject] private UIEventHub UIEventHub { get; init; } = null!;

    protected override ComputedState<AccountFull>.Options GetStateOptions()
        => new() { InitialValue = AccountFull.Loading };

    protected override Task<AccountFull> ComputeState(CancellationToken cancellationToken)
        => Accounts.GetOwn(Session, cancellationToken);

    private void OnSettingsClick()
        => _ = UIEventHub.Publish(new ShowSettingsEvent());
}
