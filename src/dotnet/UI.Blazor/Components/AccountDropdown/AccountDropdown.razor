@namespace ActualChat.UI.Blazor.Components
@using ActualChat.Users
@using ActualChat.UI.Blazor.Events
@inherits ComputedStateComponent<ActualChat.Users.Account?>
@{
    var account = State.LatestNonErrorValue;
    if (account != null) {
        <button class="account-btn btn-square" onclick="@OnSettingsClick">
            <AccountView/>
        </button>
    } else {
        <SignInMenu ButtonType="SignInMenu.MenuButton.Round" />
    }
}

@code{
    [Inject] Session Session { get; init; } = null!;
    [Inject] IAccounts Accounts { get; init; } = null!;
    [Inject] private UIEventHub UIEventHub { get; init; } = null!;

    protected override ComputedState<Account?>.Options GetStateOptions()
        => new() { UpdateDelayer = FixedDelayer.Instant };

    protected override Task<Account?> ComputeState(CancellationToken cancellationToken)
        => Accounts.Get(Session, cancellationToken);


    private void OnSettingsClick()
        => _ = UIEventHub.Publish(new ShowSettingsEvent());
}
