@namespace ActualChat.UI.Blazor.Components
@using ActualChat.UI.Blazor.Services
@using ActualChat.Users
@inherits ComputedStateComponent<AccountFull>
@implements IModalView<SignInModal.Model>
@{
    if (!State.Value.IsGuestOrNone)
        Modal.Close(true);
}

<DialogFrame
    Class="sign-in-modal"
    HasHeader="false"
    NarrowViewSettings="DialogFrameNarrowViewSettings.Stretch">
    <Body>
        <SignInWizard Reason="@ModalModel.Reason" />
    </Body>
</DialogFrame>

@code {
    [CascadingParameter] public Modal Modal { get; set; } = null!;
    [Parameter] public Model ModalModel { get; set; } = null!;

    [Inject] UIHub Hub { get; init; } = null!;
    private AccountUI AccountUI => Hub.AccountUI;

    protected override void OnInitialized() {
        AccountUI.PostponeOnSignInWorkflow(Modal.Ref.WhenClosed);
        base.OnInitialized();
    }

    protected override ComputedState<AccountFull>.Options GetStateOptions()
        => new() {
            InitialValue = AccountUI.OwnAccount.Value,
            UpdateDelayer = FixedDelayer.NextTick,
            Category = ComputedStateComponent.GetStateCategory(GetType()),
        };

    protected override Task<AccountFull> ComputeState(CancellationToken cancellationToken)
        => AccountUI.OwnAccount.Use(cancellationToken).AsTask();

    // Nested types

    public sealed record Model(string Reason = "");
}
