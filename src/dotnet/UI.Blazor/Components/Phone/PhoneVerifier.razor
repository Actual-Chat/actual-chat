@using ActualChat.Users
@using ActualChat.UI.Blazor.Services
@namespace ActualChat.UI.Blazor.Components

<div class="phone-verifier @Class">
    @if (_phoneUnderVerification == Phone) {
        <TotpVerifier
            @ref="_totpVerifier"
            Purpose="TotpPurpose.VerifyPhone"
            Phone="@Phone"
            Class="c-totp-verifier"
            Verified="Verified"/>
    } else {
        <div class="c-verify">
            <Button Class="btn-outline c-verify-btn" Click="OnVerifyPhoneClick">Verify by SMS</Button>
            <p class="c-description">Verify your phone number to be able to sign in with it.</p>
        </div>
    }
</div>

@code {
    private TotpVerifier? _totpVerifier;
    private Phone? _phoneUnderVerification;

    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IAccounts Accounts { get; init; } = null!;
    [Inject] private ComponentIdGenerator ComponentIdGenerator { get; init; } = null!;
    [Inject] private UICommander UICommander { get; init; } = null!;
    [Inject] private MomentClockSet Clocks { get; init; } = null!;

    [Parameter, EditorRequired] public string Phone { get; set; } = "";
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public EventCallback Verified { get; set; }

    protected override void OnParametersSet() {
        if (_phoneUnderVerification != Phone)
            _phoneUnderVerification = null!;
    }

    private Task OnVerifyPhoneClick() {
        _phoneUnderVerification = new Phone(Phone);
        return _totpVerifier?.Focus().AsTask() ?? Task.CompletedTask;
    }
}
