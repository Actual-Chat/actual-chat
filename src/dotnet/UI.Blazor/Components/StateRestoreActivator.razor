@using Blazored.SessionStorage
@using ActualChat.UI.Blazor.Services

@code {
    [Inject] private IServiceProvider Services { get; set; } = null!;
    [Inject] private ISessionStorageService SessionStorage { get; set; } = null!;
    [Inject] private ILogger<StateRestoreActivator> Log { get; set; } = null!;

    protected override async Task OnInitializedAsync() {
        try {
            var handlers = Services.GetRequiredService<IEnumerable<IStateRestoreHandler>>();
            foreach (var handler in handlers.OrderBy(c => c.Priority))
                await handler.Restore().ConfigureAwait(true);
        }
        catch (Exception e) {
            Log.LogWarning(e, "An error occurred on state restore");
        }
    }
}
