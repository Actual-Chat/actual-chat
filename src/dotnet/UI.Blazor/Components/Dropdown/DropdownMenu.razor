@using ActualChat.UI.Blazor.Components
@using ActualChat.UI.Blazor.Components.Dropdown
@namespace ActualChat.UI.Blazor.Components

<div class="dropdown-menu @Class @MenuStatus()" name="@Name">
    <div class="menu-body relative @(IsOpen ? "" : "hidden")">
        <div class="select-none flex @MenuDirection()">
            <CascadingValue Value="@this" IsFixed="true">
                @ChildContent
            </CascadingValue>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsOpen { get; set; }
    [Parameter]
    public string Class { get; set; } = "";
    [Parameter]
    public string ItemClass { get; set; } = "";
    [Parameter]
    public string Title { get; set; } = "";
    [Parameter]
    public string Icon { get; set; } = "";
    [Parameter]
    public Orientation Orientation { get; set; } = Orientation.Vertical;
    [Parameter]
    public IconPosition IconPosition { get; set; } = IconPosition.Right;
    [Parameter]
    public TooltipPosition TooltipPosition { get; set; } = TooltipPosition.Top;
    [Parameter]
    public string Name { get; set; } = "";
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private string MenuStatus()
        => IsOpen ? "menu-opened" : "menu-closed";

    private string MenuDirection()
        => Orientation == Orientation.Vertical ? "flex-col" : "flex-row";
}
