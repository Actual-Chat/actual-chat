@namespace ActualChat.UI.Blazor.Components

@if (!_isDismissed) {
    <div class="@Class info-toast">
        @if (!Icon.IsNullOrEmpty()) {
            <div class="toast-icon">
                <i class="@Icon text-xl"></i>
            </div>
        }
        <div class="toast-content">@Text</div>
        @if (ActionClick != null) {
            <div class="toast-action">
                <Button
                    Class="btn-transparent btn-sm"
                    Click="@(_ => Act())">
                    @ActionText
                </Button>
            </div>
        }
    </div>
}

@code {
    private bool _isDismissed;

    [Parameter] public string Class { get; set; } = "";
    [Parameter] public string Icon { get; set; } = "";
    [Parameter] public string ActionText { get; set; } = "";
    [Parameter] public double? AutoDismissDelay { get; set; }
    [Parameter] public string Text { get; set; } = "";
    [Parameter] public Action? Dismissed { get; set; }
    [Parameter] public Action? ActionClick { get; set; }

    protected override void OnInitialized() {
        if (AutoDismissDelay is { } autoDismissDelay)
            _ = AutoDismiss(TimeSpan.FromSeconds(autoDismissDelay));
    }

    private void Act() {
        Dismiss();
        ActionClick?.Invoke();
    }

    private void Dismiss() {
        if (_isDismissed)
            return;
        _isDismissed = true;
        Dismissed?.Invoke();
    }

    private async Task AutoDismiss(TimeSpan delay) {
        await Task.Delay(delay);
        Dismiss();
    }
}
