<div class="flex-x items-center form-switch">
    @if (!string.IsNullOrEmpty(Label)) {
        <label class="inline-block text-secondary mr-2" for="@Id">@Label</label>
    }
    <input class="form-check-input appearance-none w-9 rounded-full h-5 bg-no-repeat bg-contain bg-gray-300 focus:outline-none cursor-pointer shadow-sm"
           type="checkbox" role="switch" id="@Id" checked="@_isOn" @onchange="OnChange">
    @if (!string.IsNullOrEmpty(IsOnText) || !string.IsNullOrEmpty(IsOffText)) {
        var statusText = _isOn ? IsOnText : IsOffText;
        <label class="inline-block text-secondary ml-2" for="@Id">@statusText</label>
    }
</div>

@code {
    private bool _isOn;

    [Parameter] public string Id { get; set; } = "";
    [Parameter] public bool IsOn { get; set; }
    [Parameter] public EventCallback<bool> IsOnChanged { get; set; }
    [Parameter] public string Label { get; set; } = "";
    [Parameter] public string IsOnText { get; set; } = "";
    [Parameter] public string IsOffText { get; set; } = "";

    protected override void OnParametersSet() {
        base.OnParametersSet();
        _isOn = IsOn;
    }

    private void OnChange(ChangeEventArgs eventArgs) {
        var boolValue = (bool)eventArgs.Value;
        _isOn = boolValue;
        IsOnChanged.InvokeAsync(boolValue);
    }
}
