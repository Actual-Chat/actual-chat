@namespace ActualChat.UI.Blazor.Components
@using ActualChat.UI.Blazor.Components

@{
    var leftContainerClass = "flex-auto float-left mx-1 h-full";
    var rightContainerClass  = "flex-auto float-right mx-1 h-full";
}

<div class="relative">
    @if (IsHorizontal()) {
        <button @onclick="OnClick" tooltip="@Title" flow="@TooltipFlow()" class="menu-item flex h-8 w-full text-secondary @GetCss()" name="@Name">
            <div class="icon-container horizontal-item relative flex-auto mx-1 h-full">
                <div class="rounded-sm text-xxs relative">@Icon</div>
            </div>
        </button>
    } else {
        <button @onclick="OnClick" class="menu-item p-1.5 flex h-8 w-full text-secondary @GetCss()" name="@Name">
            @if (IsIconOnLeft()) {
                <div class="w-8 @leftContainerClass">
                    <div class="flex">@Icon</div>
                </div>
                <div class="w-full @rightContainerClass">
                    <div class="flex">@Title</div>
                </div>
            } else {
                <div class="w-full @rightContainerClass">
                    <div class="flex">@Title</div>
                </div>
                <div class="w-10 @leftContainerClass">
                    <div class="flex">@Icon</div>
                </div>
            }
        </button>
    }
</div>

@code {
    [Parameter]
    public EventCallback OnItemClick { get; set; }
    [Parameter]
    public string Title { get; set; } = "";
    [Parameter]
    public RenderFragment? Icon { get; set; }
    [Parameter]
    public string Class { get; set; } = "";
    [Parameter]
    public string Name { get; set; } = "";
    [CascadingParameter]
    public Menu? Menu { get; set; }

    private string GetCss()
        => $"{Class} {Menu?.ItemClass}";

    private bool IsIconOnLeft()
        => Menu?.IconPosition == IconPosition.Left;

    private string TooltipFlow()
        => Menu?.TooltipPosition.ToString()?.ToLower() ?? "top";

    private bool IsHorizontal()
        => Menu?.Orientation == Orientation.Horizontal;

    private async Task OnClick() {
        if (Menu != null)
            await Menu.OnItemClick(this).ConfigureAwait(true);
        await OnItemClick.InvokeAsync().ConfigureAwait(true);
    }
}
