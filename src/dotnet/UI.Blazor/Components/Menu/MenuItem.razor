@namespace ActualChat.UI.Blazor.Components
@using ActualChat.UI.Blazor.Components
@{
    var cls = $"{Class} {Menu.ItemClass}";
    var leftContainerClass = "flex-auto float-left h-full";
    var rightContainerClass  = "flex-auto float-right h-full";
    var tooltipFlow = Menu.TooltipPosition.ToString().ToLower();
}

<div class="relative !pl-0.5">
    @if (Menu.Orientation == MenuOrientation.Horizontal) {
        <button @onclick="OnClick" tooltip="@Title" flow="@tooltipFlow" disabled="@Disabled"
                class="menu-item flex h-8 w-full text-secondary @cls" name="@Name">
            <div class="icon-container horizontal-item relative flex-auto mx-1 h-full">
                <div class="rounded-sm text-xxs relative">@Icon</div>
            </div>
        </button>
    } else {
        <button @onclick="OnClick" disabled="@Disabled"
                class="menu-item p-1.5 flex h-8 w-full text-secondary gap-x-6 @cls" name="@Name">
            @if (Menu.IconPosition == MenuIconPosition.Left) {
                @if (Icon != null) {
                    <div class="w-6 @leftContainerClass">
                        <div class="flex">@Icon</div>
                    </div>
                }
                <div class="w-full @rightContainerClass">
                    <div class="flex">@Title</div>
                </div>
            } else {
                <div class="w-full @rightContainerClass">
                    <div class="flex">@Title</div>
                </div>
                @if (Icon != null) {
                    <div class="w-6 @leftContainerClass">
                        <div class="flex">@Icon</div>
                    </div>
                }
            }
        </button>
    }
</div>

@code {
    [CascadingParameter] public IMenu Menu { get; set; } = null!;

    [Parameter] public string Title { get; set; } = "";
    [Parameter] public RenderFragment? Icon { get; set; }
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public string Name { get; set; } = "";
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public EventCallback Click { get; set; }

    private async Task OnClick() {
        await Menu.OnItemClick(this).ConfigureAwait(true);
        await Click.InvokeAsync().ConfigureAwait(true);
    }
}
