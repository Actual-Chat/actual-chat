@namespace ActualChat.UI.Blazor.Components
@typeparam TState where TState : notnull
@typeparam TMenuContent
@inherits ComputedStateComponent<TState?>
@implements IMenu
@{
    var m = State.Value;
    if (m == null)
        return; // Nothing to render yet
}

<CascadingValue Value="@m">
    <DynamicComponent Type="typeof(TMenuContent)"/>
</CascadingValue>

@code {
    [Parameter] public string Id { get; set; } = "";
    [Parameter] public string[] Arguments { get; set; } = Array.Empty<string>();

    [CascadingParameter] public MenuHost Host { get; set; } = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (State.Value != null)
            await Host.Position(this);
    }

    protected override Task<TState?> ComputeState(CancellationToken cancellationToken)
        => throw new NotImplementedException("This method must be overriden in descendant!");
}
