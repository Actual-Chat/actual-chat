@using Stl.Extensibility
@using ActualChat.UI.Blazor.Services
@implements IModalView<ImagePreviewModal.Model>
@namespace ActualChat.UI.Blazor.Components
@attribute [MatchFor(typeof(Model), typeof(IModalView))]

<DialogFrame HasCloseButton="true" Class="image-preview-modal">
    <Body>
        <div class="flex flex-y w-full h-full justify-center">
            <img class="hidden" width="@ModalModel.Width" height="@ModalModel.Height" src="@ModalModel.Url" alt="@(ModalModel.AltText.NullIfEmpty() ?? "image")"
                 onload="document.getElementById('@_cachedImgElementId').remove(); this.classList.remove('hidden')"/>
            <img id="@_cachedImgElementId" width="@ModalModel.Width" height="@ModalModel.Height" src="@ModalModel.CachedImageUrl" alt="@(ModalModel.AltText.NullIfEmpty() ?? "image")"/>
            <a class="show-original-button" href="@ModalModel.Url" target="_blank">Show original</a>
        </div>
    </Body>
</DialogFrame>

@code {
    private string _cachedImgElementId = "";
    [Inject] private ComponentIdGenerator IdGenerator { get; init; } = null!;
    [Parameter] public Model ModalModel { get; set; } = null!;

    protected override void OnInitialized() {
        _cachedImgElementId = IdGenerator.Next("image-preview-modal-cached-image");
    }

    public sealed record Model(string Url, string? CachedImageUrl, string? AltText, int Width = 0, int Height = 0);

}
