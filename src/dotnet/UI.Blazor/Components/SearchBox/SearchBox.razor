@namespace ActualChat.UI.Blazor.Components

<div class="@Class search-box">
    <label>
        <ButtonRound Click="OnSearchButtonClick">
            <i class="icon-search text-2xl font-medium"></i>
        </ButtonRound>
        <input type="text" class="w-full" placeholder="Search" value="@Text" @oninput="OnInput" @onkeyup="OnKeyUp"/>
    </label>
</div>

@code {
    private string _text = "";

    [Parameter] public string Class { get; set; } = "";
    [Parameter] public EventCallback<string> TextChanged { get; set; }
    [Parameter] public EventCallback<string> Triggered { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    public string Text {
        get => _text;
        set {
            if (value == null)
                throw new ArgumentNullException(nameof(value));
            if (value == _text)
                return;

            _text = value;
            TextChanged.InvokeAsync(value);
            StateHasChanged();
        }
    }

    private async Task OnInput(ChangeEventArgs e) {
        _text = e.Value?.ToString() ?? "";
        await TextChanged.InvokeAsync(_text).ConfigureAwait(false);
    }

    private async Task OnKeyUp(KeyboardEventArgs e) {
        if (e.Key == "Enter" && e.HasNoModifier())
            await Triggered.InvokeAsync(Text).ConfigureAwait(false);
    }

    private Task OnSearchButtonClick()
        => Triggered.InvokeAsync(Text);
}
