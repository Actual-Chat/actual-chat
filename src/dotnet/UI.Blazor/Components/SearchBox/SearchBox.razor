@using ActualChat.UI.Blazor.Module
@using ActualChat.UI.Blazor.Services
@namespace ActualChat.UI.Blazor.Components

<div class="@Class search-box">
    <label>
        <i class="icon-search text-2xl"></i>
        <input
            @ref="_inputRef"
            value="@_text"
            type="text"
            class="w-full dialog-unstyled"
            placeholder="@Placeholder"
            maxlength="@MaxLength"
            @oninput="OnInput"/>
    </label>
</div>

@code {
    private string _text = "";
    private ElementReference _inputRef;

    [Inject] private IJSRuntime JS { get; init; } = null!;

    [Parameter] public string Class { get; set; } = "";
    [Parameter] public EventCallback<string> TextChanged { get; set; }
    [Parameter] public int? MaxLength { get; set; }
    [Parameter] public string Placeholder { get; set; } = "Search...";

    public ValueTask Focus()
        => _inputRef.FocusAsync();

    public void Cancel() {
        _text = "";
        StateHasChanged();
    }

    private async Task OnInput(ChangeEventArgs e) {
        _text = e.Value?.ToString() ?? "";
        await TextChanged.InvokeAsync(_text).ConfigureAwait(false);
    }
}
