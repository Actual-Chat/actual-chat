@namespace ActualChat.UI.Blazor.Components
@using ActualChat.Users
@using Microsoft.Toolkit.HighPerformance
@using ActualChat.UI.Blazor.Services
@inherits FusionComponentBase
@{
    var title = HasTooltip ? Avatar.Name : "";
}

<div class="avatar-circle">
    <div class="c-content">
        @if (ReferenceEquals(Avatar, Avatar.Loading)) {
            <div class="c-skeleton @_class"></div>
        } else {
            <img draggable="false"
                 class="c-avatar @_class"
                 crossorigin="anonymous"
                 src="@_pictureUrl"
                 alt="Avatar"
                 title="@title"
                 @onclick="@Click"/>
        }

        @BadgeContent
    </div>
</div>

@code {
    private string _class = "";
    private string _pictureUrl = "";

    [Inject] private UrlMapper UrlMapper { get; init; } = null!;

    [Parameter, EditorRequired] public Avatar Avatar { get; set; } = null!;
    [Parameter] public RenderFragment? BadgeContent { get; set; }
    [Parameter] public SquareSize Size { get; set; } = SquareSize.Size9;
    [Parameter] public bool HasTooltip { get; set; }
    [Parameter] public EventCallback Click { get; set; }

    protected override void OnParametersSet() {
        _class = GetSizeClass();
        if (Click.HasDelegate)
            _class += " cursor-pointer";
        _pictureUrl = UrlMapper.AvatarPicturePreview128Url(Avatar);
    }

    private string GetSizeClass() {
        var size = (int) Size;
        return $"pic-size-{size}";
    }
}
