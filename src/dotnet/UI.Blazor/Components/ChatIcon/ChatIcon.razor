@namespace ActualChat.UI.Blazor.Components.ChatIcon

@if (Picture.IsNullOrEmpty()) {
    <div class="chat-icon chat-icon-generated @_iconClass"
         style="@_iconStyle">
        @Title.Substring(0, 1)
    </div>
} else {
    <img class="chat-icon chat-icon-image @_iconClass"
         src="@Picture" />
}

@code {
    private string _iconClass = "";
    private string _iconStyle = "";

    [Parameter] public string Title { get; set; } = "";
    [Parameter] public string Picture { get; set; } = "";
    [Parameter] public ChatIconSize Size { get; set; } = ChatIconSize.Size9;
    [Parameter] public EventCallback<MouseEventArgs> Click { get; set; }

    protected override void OnParametersSet() {
        _iconClass = GetSizeClass();

        if (Click.HasDelegate)
            _iconClass += " cursor-pointer";

        if (Picture.IsNullOrEmpty())
            _iconStyle = $"background-color: {GenerateColor()}";
    }

    private string GenerateColor() {
        var hash = Title.Aggregate(0, (current, c) => c + ((current << 5) - current));
        var h = hash % 360;
        return $"hsl({h}, 30%, 80%)";
    }

    private string GetSizeClass() {
        var size = (int) Size;
        return $"h-{size} w-{size}";
    }
}
