.side-nav {
    @apply fixed md:static;
    @apply z-60 left-0;
    @apply h-full w-full;
    @apply text-02 bg-02;
    @apply top-0 bottom-0;
    transform: none;
    touch-action: manipulation;
    will-change: custom; /* Ensures its own composition layer */
}

.side-nav.animated {
    @apply transition-transform duration-200 ease-out;
}
.side-nav.animated > *:first-child {
    @apply transition-opacity duration-200 ease-out;
}
.side-nav.animated.pulling {
    @apply transition-none;
}
.side-nav.animated.pulling > *:first-child {
    @apply transition-none;
}

/* Left SideNav */
.side-nav.side-nav-left {
    @apply md:w-110;
}
body.wide .side-nav.side-nav-left[data-side-nav="closed"] {
    @apply hidden;
}
body.narrow .side-nav.side-nav-left[data-side-nav="closed"] {
    transform: translate3d(-100%, 0, 0);
}

/* Right SideNav */
.side-nav.side-nav-right {
    @apply md:w-80;
}
body.wide .side-nav.side-nav-right[data-side-nav="closed"] {
    @apply hidden;
}
body.narrow .side-nav.side-nav-right[data-side-nav="closed"] {
    transform: translate3d(100%, 0, 0);
}

/* If one SideNav is open, the other one should be hidden to prevent its pull */
body.narrow.side-nav-left-open .side-nav.side-nav-right {
    @apply hidden;
}
body.narrow.side-nav-right-open .side-nav.side-nav-left {
    @apply hidden;
}
/* This rule prioritizes left SideNav over the right one when both are open */
body.narrow.side-nav-right-open .side-nav.side-nav-left.open {
    @apply block;
}
