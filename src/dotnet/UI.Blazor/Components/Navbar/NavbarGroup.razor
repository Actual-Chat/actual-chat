@namespace ActualChat.UI.Blazor.Components
@implements IDisposable
@using ActualChat.UI.Blazor.Services

@{
    var isVisible = NavbarUI.ActiveGroupId == Id;
    var cls = isVisible ? "flex" : "hidden";
    var slotName = "NavbarGroupTitle-" + Id;
}

<div class="@Class navbar-menu-group flex-col space-y-2 @cls">
    <div class="hidden md:flex flex-row justify-between items-center mt-2
                text-secondary-muted text-sm font-medium">
        <RenderSlot Name="@slotName" />
    </div>
    @ChildContent
</div>

<RenderIntoSlot Name="@slotName">
    <span class="uppercase">@Title</span>
    @Icons
</RenderIntoSlot>

@code{
    [Inject] private NavbarUI NavbarUI { get; init; } = null!;
    private EventHandler? _onActiveGroupChanged;

    [Parameter] public string? Class { get; set; } = "";
    [Parameter, EditorRequired] public string Title { get; set; } = "";
    [Parameter] public RenderFragment? Icons { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter, EditorRequired] public string Id { get; set; } = "";

    protected override void OnInitialized() {
        _onActiveGroupChanged = (s, e) => StateHasChanged();
        NavbarUI.ActiveGroupChanged += _onActiveGroupChanged;
    }

    public void Dispose()
        => NavbarUI.ActiveGroupChanged -= _onActiveGroupChanged;
}
