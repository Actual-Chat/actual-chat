@namespace ActualChat.UI.Blazor.Components
@using ActualChat.UI.Blazor.Services
@implements IDisposable
@{
    if (Panel.ActiveTab != this)
        return;
}

<div class="@Class settings-tab">
    <div class="tab-inner">
        <div class="settings-tab-header">
            <SettingsHeader Title="@Title" OnArrowClick="@OnChangeView"/>
        </div>
        <div class="settings-tab-content">
            @ChildContent
        </div>
    </div>
</div>

@code {
    [CascadingParameter] public SettingsPanel Panel { get; set; } = null!;
    [Parameter] public string Id { get; set; } = "";
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public string IconTitle { get; set; } = "";
    [Parameter] public bool Separator { get; set; }
    [Parameter] public bool IsToggle { get; set; }
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public string ButtonClass { get; set; } = "";
    [Parameter] public int? TabIndex { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? TitleContent { get; set; }
    [Parameter] public EventCallback OnTabArrowClick { get; set; }

    protected override void OnInitialized() {
        if (Panel == null)
            throw StandardError.Constraint("<Tab> component must be nested into <TabPanel> component.");
        Panel.RegisterTab(this);
    }

    public void Dispose() {
        if (Panel == null)
            throw StandardError.Constraint("<Tab> component must be nested into <TabPanel> component.");
        Panel.UnregisterTab(this);
    }

    private void OnChangeView()
        => Panel.OnTabArrowClick();
}
