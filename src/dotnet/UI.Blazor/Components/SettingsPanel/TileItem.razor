@using System.Collections.ObjectModel
@namespace ActualChat.UI.Blazor.Components

@{
    var unselectedCls = IsHoverable ? "" : "unselected";
    var extraClass = Click.HasDelegate ? " clickable" : "";
}
<div class="tile-item @unselectedCls @extraClass group @Class"
     @attributes="@_resolvedAdditionalAttributes">
    <div class="tile-item-icon">
        @Icon
    </div>
    <div class="tile-item-body">
        <div class="tile-item-body-content">
            @Content
        </div>
        @if (Caption != null) {
            <div class="tile-item-body-caption">
                @Caption
            </div>
        }
    </div>
    <div class="tile-item-right">
        @Right
    </div>
</div>

@code {
    private IReadOnlyDictionary<string, object>? _resolvedAdditionalAttributes;

    [Parameter] public RenderFragment? Icon { get; set; }
    [Parameter] public RenderFragment? Right { get; set; }
    [Parameter] public RenderFragment? Content { get; set; }
    [Parameter] public RenderFragment? Caption { get; set; }
    [Parameter] public bool IsHoverable { get; set; } = true;
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public EventCallback Click { get; set; }
    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; set; }

    protected override void OnParametersSet() {
        _resolvedAdditionalAttributes = BlazorAttributesBuilder
            .New(AdditionalAttributes)
            .AddOnClick(this, Click).Result;
    }
}
