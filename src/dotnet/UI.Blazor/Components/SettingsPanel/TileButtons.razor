@namespace ActualChat.UI.Blazor.Components
@using ActualChat.Users
@inherits ComputedStateComponent<bool>

@{
    var m = State.LatestNonErrorValue;
    var cls = m ? "text-primary" : "text-icons-01";
}

@if (!HideSetDefaultButton) {
    <ButtonRound Class="tile-btn" Tooltip="Set default" TooltipPosition="TooltipPosition.Top"
                 Click="@OnSetDefaultAvatar">
        <i class="icon-star text-xl @cls"></i>
    </ButtonRound>
}
<ButtonRound Class="tile-btn" Tooltip="Edit" TooltipPosition="TooltipPosition.Top" Click="OnEditAvatarClick">
    <i class="icon-edit text-xl"></i>
</ButtonRound>

@code{
    [Inject] private IUserAvatars UserAvatars { get; init; } = null!;
    [Inject] private Session Session { get; init; } = null!;

    [Parameter] public bool HideSetDefaultButton { get; set; }
    [Parameter] public string AvatarId { get; set; } = "";
    [Parameter] public EventCallback OnEditAvatarClick { get; set; }
    [Parameter] public EventCallback OnSetDefaultAvatar { get; set; }

    protected override ComputedState<bool>.Options GetStateOptions()
        => new() { UpdateDelayer = FixedDelayer.Instant };

    protected override async Task<bool> ComputeState(CancellationToken cancellationToken)
        => AvatarId == await UserAvatars.GetDefaultAvatarId(Session, default);

}
