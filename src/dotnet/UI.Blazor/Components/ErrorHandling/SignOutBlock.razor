@using ActualChat.Users
@using ActualChat.UI.Blazor.Services
@namespace ActualChat.UI.Blazor.Components
@inherits ComputedStateComponent<AccountFull>
@{
    var account = State.Value;
    if (ReferenceEquals(account, AccountFull.Loading))
        return;

    if (account.IsGuestOrNone) {
        <SignInBlock/>
        return;
    }
}

<SignInLayout>
    <h1 class="text-02">Welcome to Actual Chat, @(account.User.Name)!</h1>
    <p class="text-02 my-5">
        @ChildContent
    </p>
    <div class="mt-5">
        <SignOutButton/>
    </div>
</SignInLayout>

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private AccountUI AccountUI { get; init; } = null!;

    [Parameter] public RenderFragment? ChildContent { get; set; }

    protected override ComputedState<AccountFull>.Options GetStateOptions()
        => new() {
            InitialValue = AccountUI.OwnAccount.Value,
            Category = GetStateCategory(),
        };

    protected override async Task<AccountFull> ComputeState(CancellationToken cancellationToken)
        => await AccountUI.OwnAccount.Use(cancellationToken);
}
