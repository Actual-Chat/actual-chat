@using ActualChat.UI.Blazor.Services
@inherits ComputedStateComponent<string>
@{
    var m = State.Value;
}

<span class="@Class live-time-text">@m</span>

@code {
    [Inject] private UIHub Hub { get; init; } = null!;

    [Parameter] public string Class { get; set; } = "";
    [Parameter, EditorRequired] public Moment Moment { get; set; }
    [Parameter] public TimeSpan UpdatePeriod { get; set; } = TimeSpan.FromSeconds(1);

    protected override ComputedState<string>.Options GetStateOptions() {
        return new () {
            InitialValue = GetText(Hub.Clocks().SystemClock.Now),
            Category = GetStateCategory(),
        };
    }

    protected override async Task<string> ComputeState(CancellationToken cancellationToken) {
        var now = await Hub.FusionTime.Now(UpdatePeriod);
        return GetText(now);
    }

    private string GetText(Moment now) {
        var delta = Moment - now;
        return delta <= TimeSpan.Zero
            ? "now"
            : $"in {delta.TotalSeconds.ToString("F0", CultureInfo.InvariantCulture)} seconds";
    }
}
