@implements IDisposable
@using ActualChat.UI.Blazor.Services
@{
    if (_slot != null) {
        _slot.NotifyChanged();
        return;
    }

    _slot = Hub.RenderVars.RenderSlot(Name);
    _slot.Value.Add(this);
    _slot.NotifyChanged();
}
@code {
    private RenderVar<List<RenderIntoSlot>>? _slot;

    [Inject] private UIHub Hub { get; init; } = null!;

    [Parameter, EditorRequired] public string Name { get; set; } = "";
    [Parameter] public RenderFragment? ChildContent { get; set; }

    public void Dispose() {
        if (_slot == null)
            return;

        if (!_slot.Value.Remove(this)) {
            var log = Hub.LogFor(GetType());
            log.LogWarning("Couldn't remove RenderIntoSlot with Name = '{Name}'", Name);
            return;
        }

        _slot.NotifyChanged();
    }
}
