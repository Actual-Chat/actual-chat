@using ActualChat.UI.Blazor.Services
@namespace ActualChat.UI.Blazor.Components

@if (ScreenSize.IsWide()) {
    <div class="modal-header">
        <h3 class="modal-title">@Title</h3>
        @if (HasCloseButton) {
            <HeaderButton Click="OnCloseClick">
                <i class="icon-close"></i>
            </HeaderButton>
        }
    </div>
} else {
    var settings = DialogFrame.NarrowViewSettings;
    var useInteractiveHeader = DialogFrame.NarrowViewSettings.IsSubmitDefined;
    if (useInteractiveHeader) {
        var submitText = settings.SubmitButtonText;
        if (submitText.IsNullOrEmpty())
            submitText = "Save";
        <DialogInteractiveHeader
            Title="@Title"
            CloseClick="OnCloseClick"
            SubmitButtonType="@settings.SubmitButtonType"
            SubmitButtonText="@submitText"
            SubmitClick="@settings.SubmitClick" />
    } else {
        <div class="modal-header">
            @if (IsMultiStep) {
                <HeaderButton Click="OnCloseClick">
                    <i class="icon-arrow-left"></i>
                </HeaderButton>
            }
            <div class="modal-title">
                @Title
            </div>
            @if (HasCloseButton) {
                <HeaderButton Click="OnCloseClick">
                    <i class="icon-close"></i>
                </HeaderButton>
            }
        </div>
    }
}

@code {
    [CascadingParameter] public Modal Modal { get; set; } = null!;
    [CascadingParameter] public ScreenSize ScreenSize { get; set; }

    // use explicit namespace - otherwise it doesn't compile on 7.0.302 SDK
    // ReSharper disable once RedundantNameQualifier
    [Parameter] public ActualChat.UI.Blazor.Components.DialogFrame DialogFrame { get; set; } = null!;
    [Parameter] public bool HasCloseButton { get; set; }
    [Parameter] public bool IsMultiStep { get; set; }
    [Parameter] public string Title { get; set; } = "";

    private void OnCloseClick()
        => _ = Modal.Close();
}
