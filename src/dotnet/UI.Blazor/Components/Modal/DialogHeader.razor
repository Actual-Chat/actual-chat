@using ActualChat.UI.Blazor.Services
@namespace ActualChat.UI.Blazor.Components

@if (ScreenSize.IsWide()) {
    if (WideViewTemplate != null) {
        @WideViewTemplate
    } else {
        <div class="modal-header">
            <h3 class="modal-title">@Title</h3>
            @if (HasCloseButton) {
                <div class="modal-close">
                    <ButtonX Class="btn-sm" Click="OnCloseClick"/>
                </div>
            }
        </div>
    }
} else {
    if (NarrowViewTemplate != null) {
        @NarrowViewTemplate
    } else {
        <div class="modal-header-mobile">
            @if (HasCloseButton) {
                <ButtonRound Click="OnCloseClick" Class="btn-sm transparent">
                    <i class="icon-arrow-left text-2xl"></i>
                </ButtonRound>
            }
            <div class="modal-title">
                @Title
            </div>
        </div>
    }
}

@code {
    [CascadingParameter] public Modal Modal { get; set; } = null!;
    [CascadingParameter] public ScreenSize ScreenSize { get; set; }

    [Parameter] public RenderFragment? WideViewTemplate { get; set; }
    [Parameter] public RenderFragment? NarrowViewTemplate { get; set; }
    [Parameter] public bool HasCloseButton { get; set; }
    [Parameter] public string Title { get; set; } = "";

    private void OnCloseClick()
        => _ = Modal.Close();
}
