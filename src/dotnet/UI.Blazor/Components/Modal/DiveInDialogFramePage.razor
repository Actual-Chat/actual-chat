@namespace ActualChat.UI.Blazor.Components

@code {
    private DialogFrameNarrowViewSettings? _narrowViewSettings;
    private DiveInModalPageContext _pageContext = null!;
    private RenderFragment _renderBody = null!;
    private RenderFragment? _renderButtons;

    [CascadingParameter] public DiveInDialogFrame Owner { get; set; } = null!;

    [Parameter, EditorRequired] public string Id { get; set; } = "";
    [Parameter] public bool IsStartPage { get; set; }
    [Parameter, EditorRequired] public RenderFragment<DiveInModalPageContext> Body { get; set; } = null!;
    [Parameter] public RenderFragment<DiveInModalPageContext>? Buttons { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public DialogFrameNarrowViewSettings? NarrowViewSettings { get; set; }
    [Parameter] public bool UseBackButton { get; set; }

    protected override void OnInitialized() {
        if (Owner == null)
            throw StandardError.Constraint("<DiveInDialogFramePage> component must be nested into <DiveInDialogFrame> component.");
        Owner.RegisterPage(this);
        _pageContext = new DiveInModalPageContext(Owner, Title, NarrowViewSettings);
        _renderBody = builder => Body(_pageContext).Invoke(builder);
        if (Buttons != null)
            _renderButtons = builder => Buttons(_pageContext).Invoke(builder);
    }

    internal RenderFragment RenderBody
        => _renderBody;
    internal RenderFragment? RenderButtons
        => _renderButtons;
    internal string? GetTitle()
        => _pageContext.Title;
    internal DialogFrameNarrowViewSettings? GetNarrowViewSettings()
        => _pageContext.NarrowViewSettings;
}
