@using ActualChat.Users
@namespace ActualChat.UI.Blazor.Components

@{
    RenderFragment? statusRenderFragment = null;
    var title = ShowTooltip ? Author.Name : "";

    if (Status == AuthorBadgeStatus.Recording) {
        statusRenderFragment =
            @<div class="text-inline-code animate-pulse">
                <svg class="w-5 h-5 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="-5 -4 32 32">
                    <circle cx="8" cy="9" r="6"/>
                </svg>
            </div>;
    }
    else if (Status == AuthorBadgeStatus.Online) {
        statusRenderFragment =
            @<div class="text-online">
                <svg class="w-5 h-5 fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="-5 -4 32 32">
                    <circle cx="8" cy="8" r="7"/>
                </svg>
            </div>;
    }
}

<div class="author-avatar-badge flex-x items-center rounded-full">
    <div class="relative">
        <img class="@_avatarCls rounded-full block @Class" @onclick="@OnClick"
             src="@Author.Picture" alt="avatar" title="@title"/>

        @if (statusRenderFragment != null) {
            <div class="absolute bg-secondary @_statusCls">
                @statusRenderFragment
            </div>
        }
    </div>
</div>

@code {
    private string _avatarCls = "";
    private string _statusCls = "";

    [Parameter] public AuthorBadgeSize Size { get; set; } = AuthorBadgeSize.Size9;
    [Parameter] public AuthorBadgeStatus Status { get; set; } = AuthorBadgeStatus.None;

    [Parameter] public IAuthorLike Author { get; set; } = null!;
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public bool ShowTooltip { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }

    protected override void OnParametersSet() {
        base.OnParametersSet();
        _avatarCls = GetSizeClass();
        if (OnClick.HasDelegate)
            _avatarCls += " cursor-pointer";
        _statusCls = GetStatusCls();
    }

    private string GetStatusCls() {
        return Status switch {
            AuthorBadgeStatus.None => "",
            _ => "right-0 bottom-0 w-4 h-4 rounded-full"
            };
    }

    private string GetSizeClass() {
        var size = (int) Size;
        return $"h-{size} w-{size}";
    }
}
