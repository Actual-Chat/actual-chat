@using System.ComponentModel.DataAnnotations
@using Stl.Fusion.Authentication.Commands
@using Stl.Reflection

<Form @ref="@_formRef" Model="@_form" OnSubmit="@OnSave" >
    <ValidationSummary />

    <FormSection InputId="@_form.NameFieldId" Label="Name" IsRequired="true">
        <TextBox @bind-Value="@_form.Name" Id="@_form.NameFieldId" Autofocus="true" />
    </FormSection>

    <FormButtons>
        <Button Type="@ButtonType.Submit" class="btn-primary my-2">Save</Button>
    </FormButtons>
</Form>

@code {
    private Form _formRef = null!;
    private FormModel _form = null!;

    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IAccounts Accounts { get; init; } = null!;
    [Inject] private ComponentIdGenerator ComponentIdGenerator { get; init; } = null!;
    [Inject] private UICommander UICommander { get; init; } = null!;

    protected override async Task OnInitializedAsync() {
        _form = new FormModel(ComponentIdGenerator).CopyToBase(); // Must be fully initialized in sync part
        var account = await Accounts.Get(Session, default);
        _form.Name = account?.User.Name ?? "";
        _form.CopyToBase();
    }

    private async void OnSave() {
        var command = new EditUserCommand(Session, _form.Name);
        await UICommander.Run(command);
    }

    public sealed class FormModel : FormModel<FormModel> {

        [Required, MinLength(4)]
        public string Name { get; set; } = "";
        public string NameFieldId { get; set; } = "";

        public FormModel(ComponentIdGenerator? componentIdGenerator)
            : base("user-name-editor", componentIdGenerator)
        { }
    }
}
