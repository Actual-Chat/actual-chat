<EditForm Model="@_model" OnValidSubmit="@OnSave" >
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="Name" class="block text-sm font-medium text-secondary">User name</label>
        <div class="mt-1">
            <TextBox @bind-Value="@_model.Name" id="Name" Autofocus="true"
                       class="w-full px-2 py-1 border rounded-md focus:outline-none focus:border-success" />
        </div>
    </div>

    <div class="mt-3 flex-x justify-end">
        <Button Type="@ButtonType.Submit" class="btn-success">Save</Button>
    </div>
</EditForm>

@code {
    private readonly Model _model = new();

    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IUserAvatars UserAvatars { get; init; } = null!;
    [Inject] private UICommandRunner Cmd { get; init; } = null!;

    [Parameter, EditorRequired] public string AvatarId { get; set; } = "";
    [Parameter] public Action? OnUpdated { get; set; } = default!;
    [Parameter] public Action? CancelRequested { get; set; } = default!;

    protected override async Task OnParametersSetAsync() {
        //var userAvatar = await UserAvatars.Get(Session, AvatarId, default);
        _model.Name = "NONAME"; // userAvatar?.Name ?? "";
    }

    private async void OnSave() {
        // var userAvatar = await UserAvatars.Get(Session, AvatarId, default).ConfigureAwait(false);
        // var command = new IUserAvatars.UpdateCommand(Session, AvatarId, _model.Name, userAvatar.Picture, userAvatar.Bio);
        // await Cmd.Run(command).ConfigureAwait(true);
        // OnUpdated?.Invoke();
    }

    public sealed class Model {
        public string Name { get; set; } = "";
    }
}
