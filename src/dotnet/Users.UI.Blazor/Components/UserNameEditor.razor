@using System.ComponentModel.DataAnnotations
@using Stl.Fusion.Authentication.Commands
@{
    var m = _model;
}
<Form Model="@m" OnValidSubmit="@OnSave" >
    <DataAnnotationsValidator />
    <ValidationSummary />

    <FormSection InputId="@m.NameId" Label="User name" IsRequired="true">
        <TextBox @bind-Value="@m.Name" id="@m.NameId" Autofocus="true" />
    </FormSection>

    <FormButtons>
        <Button Type="@ButtonType.Submit" class="btn-success">Save</Button>
    </FormButtons>
</Form>

@code {
    private Model _model = null!;

    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IAuth Auth { get; init; } = null!;
    [Inject] private UICommandRunner Cmd { get; init; } = null!;
    [Inject] private ComponentIdGenerator ComponentIdGenerator { get; init; } = null!;

    protected override async Task OnParametersSetAsync() {
        _model ??= new Model(ComponentIdGenerator);
        var user = await Auth.GetUser(Session, default).ConfigureAwait(true);
        _model.Name = user.Name;
    }

    private async void OnSave() {
        var command = new EditUserCommand(Session, _model.Name);
        await Cmd.Run(command).ConfigureAwait(true);
    }

    public sealed class Model {
        public string FormId { get; }
        public string NameId { get; }

        [Required, MinLength(4)]
        public string Name { get; set; } = "";

        public Model(ComponentIdGenerator componentIdGenerator) {
            FormId = componentIdGenerator.Next("user-name-editor");
            NameId = $"{FormId}-name";
        }
    }
}
