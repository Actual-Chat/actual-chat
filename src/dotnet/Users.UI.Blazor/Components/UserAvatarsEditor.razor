@using System.Text.Encodings.Web
@inherits ComputedStateComponent<string[]>

<ul class="user-avatar-editor">
    @foreach (var avatarId in State.LatestNonErrorValue) {
        <li class="user-avatar-editor-item" @onclick="@(() => EditAvatar(avatarId))">
            <UserAvatar AvatarId="@avatarId" ChatId="@ChatId" />
        </li>
    }
    <li class="user-avatar-editor-item" @onclick="OnAddNewAvatar">
        <UserAvatarAddTile />
    </li>
</ul>

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IUserAvatars UserAvatars { get; init; } = null!;
    [Inject] private IChatUserSettings ChatUserSettings { get; init; } = null!;
    [Inject] private ModalUI ModalUI { get; init; } = null!;
    [Inject] private UICommandRunner Cmd { get; init; } = null!;

    [Parameter] public string ChatId { get; set; } = "";

    protected override ComputedState<string[]>.Options GetStateOptions()
        => new () { InitialValue = Array.Empty<string>() };

    protected override Task<string[]> ComputeState(CancellationToken cancellationToken)
        => UserAvatars.GetAvatarIds(Session, cancellationToken);

    private async Task OnAddNewAvatar() {
        var command = new IUserAvatars.CreateCommand(Session);
        await Cmd.Run(command).ConfigureAwait(false);
    }

    private void EditAvatar(string avatarId) {
        ModalUI.Show(new UserAvatarEditorModal.Model(avatarId, ChatId));
    }
}
