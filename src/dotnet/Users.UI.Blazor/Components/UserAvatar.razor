@inherits ComputedStateComponent<UserAvatar.Model>

@{
    var state = State.LatestNonErrorValue ?? new Model();
}

<div class="bg-white font-semibold text-center rounded-3xl border shadow-lg p-3 w-80 max-w-xs @Class">
    @if (!@state.Picture.IsNullOrEmpty()) {
        <img class="mb-3 w-24 h-24 rounded-full shadow-lg mx-auto" src="@state.Picture" alt="avatar pic">
    } else {
        <svg class="mb-3 w-24 h-24 rounded-full shadow-lg mx-auto text-secondary-muted fill-current" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M12 0c6.623 0 12 5.377 12 12s-5.377 12-12 12-12-5.377-12-12 5.377-12 12-12zm8.127 19.41c-.282-.401-.772-.654-1.624-.85-3.848-.906-4.097-1.501-4.352-2.059-.259-.565-.19-1.23.205-1.977 1.726-3.257 2.09-6.024 1.027-7.79-.674-1.119-1.875-1.734-3.383-1.734-1.521 0-2.732.626-3.409 1.763-1.066 1.789-.693 4.544 1.049 7.757.402.742.476 1.406.22 1.974-.265.586-.611 1.19-4.365 2.066-.852.196-1.342.449-1.623.848 2.012 2.207 4.91 3.592 8.128 3.592s6.115-1.385 8.127-3.59zm.65-.782c1.395-1.844 2.223-4.14 2.223-6.628 0-6.071-4.929-11-11-11s-11 4.929-11 11c0 2.487.827 4.783 2.222 6.626.409-.452 1.049-.81 2.049-1.041 2.025-.462 3.376-.836 3.678-1.502.122-.272.061-.628-.188-1.087-1.917-3.535-2.282-6.641-1.03-8.745.853-1.431 2.408-2.251 4.269-2.251 1.845 0 3.391.808 4.24 2.218 1.251 2.079.896 5.195-1 8.774-.245.463-.304.821-.179 1.094.305.668 1.644 1.038 3.667 1.499 1 .23 1.64.59 2.049 1.043z"/></svg>
    }
    <h3 class="text-lg text-primary">@state.Name</h3>
    <p class="text-xs text-gray-400 mt-3">@state.Bio</p>
    @ActionsTemplate
</div>

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IUserAvatars UserAvatars { get; init; } = null!;

    [Parameter] public string Class { get; set; } = "";
    [Parameter] public string AvatarId { get; set; } = "";
    [Parameter] public RenderFragment ActionsTemplate { get; set; } = default!;

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var userAvatar = await UserAvatars.Get(Session, AvatarId, cancellationToken).ConfigureAwait(false);
        if (userAvatar == null)
            return new Model();
        return new Model {Name = userAvatar.Name, Picture = userAvatar.Picture, Bio = userAvatar.Bio};
    }

    public class Model {
        public string Name { get; set; } = "";
        public string Picture { get; set; } = "";
        public string Bio { get; set; } = "";
    }
}
