@inherits ComputedStateComponent<TestListItem>
@inject TestListService _listService

@{
    var item = State.ValueOrDefault ?? new(0, "Loading...");
}

<div style="font-size: @(item.FontSize)em">
    <div style="font-weight: bold">@item.Title</div>
    <div>@item.Description</div>
</div>

@code {
    [Parameter, ParameterComparer(typeof(ByValueParameterComparer))]
    public TestListItemRef ItemRef { get; set; } = null!;

    public override Task SetParametersAsync(ParameterView parameters)
        => this.HasChangedParameters(parameters) ? base.SetParametersAsync(parameters) : Task.CompletedTask;

    protected override Task<TestListItem> ComputeState(CancellationToken cancellationToken)
        => _listService.GetItem(ItemRef, cancellationToken);
}
