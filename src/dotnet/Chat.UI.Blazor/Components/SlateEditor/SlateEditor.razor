@namespace ActualChat.Chat.UI.Blazor.Components
@implements ISlateEditorBackend
@implements IAsyncDisposable
@using ActualChat.Chat.UI.Blazor.Module

<div @ref="EditorRef" class="slate-editor-root @Class"></div>

@code {
    private ElementReference EditorRef { get; set; }
    private IJSObjectReference JSRef { get; set; } = null!;
    private DotNetObjectReference<ISlateEditorBackend> BlazorRef { get; set; } = null!;

    [Inject] private IJSRuntime JS { get; init; } = null!;

    [Parameter]
    public string Class { get; set; } = "";
    [Parameter]
    public EventCallback<string> OnPost { get; set; }

    public async ValueTask DisposeAsync()
    {
        if (JSRef != null!)
            await JSRef.DisposeSilentlyAsync("dispose").ConfigureAwait(true);
        // ReSharper disable once ConstantConditionalAccessQualifier
        BlazorRef?.Dispose();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            BlazorRef = DotNetObjectReference.Create<ISlateEditorBackend>(this);
            JSRef = await JS.InvokeAsync<IJSObjectReference>(
                $"{ChatBlazorUIModule.ImportName}.SlateEditor.create",
                EditorRef, BlazorRef
                ).ConfigureAwait(true);
        }
    }

    public async Task<string> GetText()
        => await JSRef.InvokeAsync<string>("getText");

    [JSInvokable]
    public async Task Post(string? text = null) {
        await OnPost.InvokeAsync(text);
        await Clear();
    }

    public async Task Clear()
        => await JSRef.InvokeAsync<string>("clearText");

    [JSInvokable]
    public async Task MentionCmd(string? cmd = null) {
        if (cmd.IsNullOrEmpty())
            return;
        switch (cmd) {
            case "insert": {
                await InsertMention(new Mention("xXx", "Vasya Pupkin"));
                break;
            }
            default:
                break;
        }
    }

    private async Task InsertMention(Mention mention)
        => await JSRef.InvokeVoidAsync("insertMention", mention);

    public record Mention(string Id, string Name);
}
