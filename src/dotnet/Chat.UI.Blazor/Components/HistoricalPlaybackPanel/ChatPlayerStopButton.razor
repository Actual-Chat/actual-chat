@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<bool>
@using ActualChat.Chat.UI.Blazor.Services
@using ActualChat.MediaPlayback

@{
    var isPlaying = State.ValueOrDefault;
}

@if (isPlaying) {
    <button @onclick="Stop" class="@(_class ??= this.DefaultClass()) w-5 h-5">
        <svg xmlns="http://www.w3.org/2000/svg" class="text-secondary fill-current hover:transition hover:duration-300 hover:ease-in-out hover:scale-110" viewBox="0 0 24 24"><path d="M0 0h24v24h-24z"/></svg>
    </button>
}

@code {
    private static string? _class;

    [Parameter]
    public ChatPlayer Player { get; set; } = null!;

    protected override ComputedState<bool>.Options GetStateOptions()
        => new() { UpdateDelayer = UpdateDelayer.MinDelay };

    protected override async Task<bool> ComputeState(CancellationToken cancellationToken) {
        var playback = await Player.PlaybackState.Use(cancellationToken).ConfigureAwait(false);
        if (playback == null)
            return false;
        var isStopped = await playback.IsStoppedState.Use(cancellationToken).ConfigureAwait(false);
        return !isStopped;
    }

    private Task Stop()
        => Player.Stop();
}
