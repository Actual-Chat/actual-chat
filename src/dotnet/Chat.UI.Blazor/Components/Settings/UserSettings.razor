@using System.Security.Claims
@inherits ComputedStateComponent<User?>

@{
    var user = State.LatestNonErrorValue;
    if (user == null)
        return;
    var relativeUri = Links.UserPage(user.Id);
    var linkInfo = LinkInfoBuilder.GetFrom(relativeUri);
    user.Claims.TryGetValue(ClaimTypes.Email, out var email);
}

<Tile>
    @* <UserNameEditor/> *@
    <TileItem Unselected="true" Class="first-tile-item">
        <Icon>
            <UserAuthorBadge
                UserId="@(user?.Id ?? "")"
                Size="SquareSize.Size9"
                ShowPresence="false"
                TextClass="hidden" />
        </Icon>
        <Right>
            <TileButtons/>
        </Right>
        <Content>
            @user.Name
        </Content>
        <Caption>
            Username
        </Caption>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-at text-xl"></i>
        </Icon>
        <Content>
            @email
        </Content>
        <Caption>
            Identity
        </Caption>
        <Right>
            <CopyToClipboard InputClass="hidden" BtnClass="tile-hidden-btn" Text="@email" HideCopiedTag="true"/>
        </Right>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-phone text-xl"></i>
        </Icon>
        <Right>
            <CopyToClipboard InputClass="hidden" BtnClass="tile-hidden-btn" Text="+71234567890" HideCopiedTag="true"/>
        </Right>
        <Content>
            +7 123 456 78 90
        </Content>
        <Caption>
            Phone
        </Caption>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-info text-xl"></i>
        </Icon>
        <Content>
            actual.chat developer
        </Content>
        <Caption>
            Bio
        </Caption>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-status text-xl"></i>
        </Icon>
        <Content>
            This nothings's more than matter
        </Content>
        <Caption>
            Status
        </Caption>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-link-2 text-xl"></i>
        </Icon>
        <Right>
            <CopyToClipboard InputClass="hidden" BtnClass="tile-hidden-btn" Text="@linkInfo.CopyLink" HideCopiedTag="true"/>
        </Right>
        <Content>
            <div class="user-page-link flex-x justify-start items-center gap-x-1">
                <div class="flex-none">
                    <a class="text-02" href="@linkInfo.NavigateLink">@linkInfo.ShortDisplayLink</a>
                </div>
            </div>
        </Content>
        <Caption>
            Link
        </Caption>
    </TileItem>
</Tile>


<TileTopic Topic="My avatars"/>

@* <Tile> *@
@*     <UserAvatarsEditor /> *@
@* </Tile> *@

@code {
    [Inject] public Session Session { get; init; } = null!;
    [Inject] public IAuth Auth { get; init; } = null!;
    [Inject] private LinkInfoBuilder LinkInfoBuilder { get; init; } = null!;

    protected override ComputedState<User?>.Options GetStateOptions()
        => new() { UpdateDelayer = FixedDelayer.Instant };

    protected override Task<User?> ComputeState(CancellationToken cancellationToken)
        => Auth.GetUser(Session, default);
}
