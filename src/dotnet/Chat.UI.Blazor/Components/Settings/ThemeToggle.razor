@inherits ComputedStateComponent<Theme>
@{
    var m = State.Value;
    var isDark = m is Theme.Dark;
}

<Toggle IsChecked="@isDark" IsCheckedChanged="OnThemeChanged" Class="toggle-sm"/>

@code {
    [Inject] ThemeUI ThemeUI { get; init; } = null!;

    protected override ComputedState<Theme>.Options GetStateOptions()
        => new() {
            InitialValue = ThemeUI.Theme.Value,
            UpdateDelayer = FixedDelayer.Instant,
        };

    protected override async Task<Theme> ComputeState(CancellationToken cancellationToken)
        => await ThemeUI.Theme.Use(cancellationToken);

    private void OnThemeChanged()
        => ThemeUI.Theme.Set(r => r.Value switch {
            Theme.Light => Theme.Dark,
            _ => Theme.Light,
        });
}
