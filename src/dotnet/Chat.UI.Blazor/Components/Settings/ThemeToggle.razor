@inherits ComputedStateComponent<Theme>
@{
    var m = State.Value;
    var isDark = m is Theme.Dark;
}

<Toggle IsChecked="@isDark" IsCheckedChanged="OnThemeChanged" Class="toggle-sm"/>

@code {
    [Inject] ThemeUI ThemeUI { get; init; } = null!;

    protected override ComputedState<Theme>.Options GetStateOptions()
        => new() {
            InitialValue = ThemeUI.Theme,
            UpdateDelayer = FixedDelayer.Instant,
            Category = GetStateCategory(),
        };

    protected override async Task<Theme> ComputeState(CancellationToken cancellationToken) {
        var themeSettings = await ThemeUI.Settings.Use(cancellationToken);
        return themeSettings.Theme;
    }

    private void OnThemeChanged()
        => ThemeUI.Theme = ThemeUI.Theme switch {
            Theme.Light => Theme.Dark,
            _ => Theme.Light,
        };
}
