@using System.Security.Claims
@inherits ComputedStateComponent<AccountFull>
@{
    var account = State.LatestNonErrorValue;
    if (ReferenceEquals(account, AccountFull.Loading))
        return;

    var user = account.User;
    var avatar = account.Avatar;
    var link = Links.User(account.Id).ToDisplayUrl(UrlMapper);
    user.Claims.TryGetValue(ClaimTypes.Email, out var email);
    user.Claims.TryGetValue(ClaimTypes.MobilePhone, out var mobilePhone);
    var phone = !string.IsNullOrEmpty(mobilePhone) ? mobilePhone : "+1 234 567 89 00";
}

<Tile>
    <TileItem Unselected="true" Class="first-tile-item">
        <Icon>
            <AccountBadge
                UserSid="@account.Id"
                Size="SquareSize.Size9"
                ShowPresence="false"
                NameClass="hidden" />
        </Icon>
        <Right>
            <TileButtons HideSetDefaultButton="true" OnEditClick="@EditAccount"/>
        </Right>
        <Content>
            @account.User.Name
        </Content>
        <Caption>
            Username
        </Caption>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-at text-xl"></i>
        </Icon>
        <Content>
            @email
        </Content>
        <Caption>
            Identity
        </Caption>
        <Right>
            <CopyToClipboard InputClass="hidden" ButtonClass="tile-hidden-btn" Text="@email" HideCopiedTag="true"/>
        </Right>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-phone text-xl"></i>
        </Icon>
        <Right>
            <CopyToClipboard InputClass="hidden" ButtonClass="tile-hidden-btn" Text="+71234567890" HideCopiedTag="true"/>
        </Right>
        <Content>
            @phone
        </Content>
        <Caption>
            Phone
        </Caption>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-info text-xl"></i>
        </Icon>
        <Content>
            @avatar.Bio
        </Content>
        <Caption>
            Bio
        </Caption>
    </TileItem>

    <TileItem>
        <Icon>
            <i class="icon-link-2 text-xl"></i>
        </Icon>
        <Right>
            <CopyToClipboard
                InputClass="hidden"
                ButtonClass="tile-hidden-btn"
                Text="@link.ShortLocalUrl"
                CopyText="@link.AbsoluteUrl"
                HideCopiedTag="true"/>
        </Right>
        <Content>
            <div class="user-page-link flex-x justify-start items-center gap-x-1">
                <div class="flex-none">
                    <a class="text-02" href="@link.AbsoluteUrl">@link.ShortAbsoluteUrl</a>
                </div>
            </div>
        </Content>
        <Caption>
            Link
        </Caption>
    </TileItem>
</Tile>

<TileTopic Topic="My avatars"/>

<OwnAvatarList Account="@account"/>

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IAccounts Accounts { get; init; } = null!;
    [Inject] private IAvatars Avatars { get; init; } = null!;
    [Inject] private ModalUI ModalUI { get; init; } = null!;
    [Inject] private UrlMapper UrlMapper { get; init; } = null!;

    protected override ComputedState<AccountFull>.Options GetStateOptions()
        => new() { InitialValue = AccountFull.Loading };

    protected override Task<AccountFull> ComputeState(CancellationToken cancellationToken)
        => Accounts.GetOwn(Session, cancellationToken);

    private void EditAccount()
        => ModalUI.Show(OwnAccountEditorModal.Model.Default);
}
