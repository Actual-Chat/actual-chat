@using ActualChat.Hosting
@using ActualChat.UI.Blazor.Services
@using ActualChat.Users
@namespace ActualChat.Chat.UI.Blazor.Components
@inherits OwnAccountComponentBase
@{
    var m = State.Value;
}

@if (m.IsActive()) {
    <NavbarButton
        Tooltip="Create"
        data-bubble="@(BubbleRef.New<CreateChatBubble>())"
        data-bubble-priority="201"
        data-bubble-placement="@(FloatingPosition.RightStart.ToPositionString())"
        data-menu="@(MenuRef.New<CreateMenu>().ToString())"
        data-menu-trigger="@MenuTrigger.Primary"
        data-menu-placement="@(FloatingPosition.RightStart.ToPositionString())">
        <i class="icon-plus text-2xl font-medium"></i>
    </NavbarButton>
}

<NavbarGroupSelectionButton
    Id="@NavbarGroupIds.Chats"
    Title="@NavbarGroupIds.ChatsTitle"
    Tooltip="Chats">
    <ChildContent>
        <i class="icon-message-ellipse text-2xl font-medium"></i>
    </ChildContent>
    <BadgeContent>
        <ChatsNavbarButtonBadge PlaceSid="@PlaceId.None" />
    </BadgeContent>
</NavbarGroupSelectionButton>

<NavbarPlaceButtons />

@if (m.IsAdmin) {
    <NavbarGroupSelectionButton
        Title="Administration"
        Id="@NavbarGroupIds.Administration"
        Tooltip="Administration">
        <i class="icon-adminx-1 text-2xl font-medium"></i>
    </NavbarGroupSelectionButton>
}
@if (HostInfo.IsDevelopmentInstance) {
    <NavbarGroupSelectionButton
        Title="Test Pages"
        Id="@NavbarGroupIds.TestPages"
        Tooltip="Test Pages">
        <i class="icon-alert-triangle text-2xl font-medium"></i>
    </NavbarGroupSelectionButton>

    @if (m.IsAdmin) {
        <NavbarButton
            Class="mt-auto"
            Tooltip="Reload UI"
            Click="@OnReloadUIClick">
            <i class="icon-refresh text-2xl font-medium"></i>
        </NavbarButton>
    }
}

@code {
    [Inject] private ModalUI ModalUI { get; init; } = null!;

    private Task OnCreateChatClick()
        => ModalUI.Show(new NewChatModal.Model());

    private void OnReloadUIClick()
        => Services.GetRequiredService<ReloadUI>().Reload();
}
