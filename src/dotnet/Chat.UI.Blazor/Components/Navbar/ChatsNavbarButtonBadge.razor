@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<ChatsNavbarButtonBadge.Model>
@{
    var m = State.Value;
    _rendered = m;
    if (m.Count <= 0)
        return;
}

<Badge>@m.Count</Badge>

@code {
    private Model? _rendered;

    [Inject] private ChatListUI ChatListUI { get; init; } = null!;

    [Parameter, EditorRequired] public PlaceId PlaceId { get; set; }

    protected override ComputedState<Model>.Options GetStateOptions() {
        return new() {
            InitialValue = new(),
            UpdateDelayer = FixedDelayer.Zero,
            Category = GetStateCategory(),
        };
    }

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var count = await ChatListUI.GetUnmutedUnreadChatCount(PlaceId, cancellationToken);
        return new Model(count);
    }

    protected override bool ShouldRender()
        => State.HasError || State.Value != _rendered;

    public record struct Model(Trimmed<int> Count = default);
}
