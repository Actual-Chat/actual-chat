@using ActualChat.Notification.UI.Blazor
@namespace ActualChat.Chat.UI.Blazor.Components
@{
    var activeClass = IsSelected ? "active" : "inactive";
}

<div class="@Class @activeClass navbar-item group" @attributes="@Attributes">
    @if (Url.IsNullOrEmpty()) {
        <div class="navbar-item-content">
            @ChildContent
        </div>
    } else {
        <div class="navbar-item-content" data-href="@Url">
            @ChildContent
        </div>
    }
    <div class="navbar-item-ending">
        @Ending
    </div>
</div>

@code {
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public bool IsSelected { get; set; }
    [Parameter] public string Url { get; set; } = "";
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? Ending { get; set; }
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> Attributes { get; set; } = new();
}
