@using ActualChat.Notification.UI.Blazor
@namespace ActualChat.Chat.UI.Blazor.Components
@{
    var activeClass = IsSelected ? "active" : "inactive";
    var isCurrent = History.LocalUrl.Value == Url;
}

@if (Url.IsNullOrEmpty()) {
    <div class="@Class @activeClass navbar-item group" @attributes="@Attributes">
        <div class="navbar-item-content">
            @ChildContent
        </div>
        <div class="navbar-item-ending">
            @Ending
        </div>
    </div>
} else if (isCurrent) {
    <div class="@Class @activeClass navbar-item group" @attributes="@Attributes" @onclick="@OnCurrentClick">
        <div class="navbar-item-content">
            @ChildContent
        </div>
        <div class="navbar-item-ending">
            @Ending
        </div>
    </div>
} else {
    <div
     class="@Class @activeClass navbar-item group"
     @attributes="@Attributes"
     data-href="@Url"
     data-href-tune="select-navbar-item"
     data-replace-on-prefix="@ReplaceOnPrefix">
        <div class="navbar-item-content">
            @ChildContent
        </div>
        <div class="navbar-item-ending">
            @Ending
        </div>
    </div>
}

@code {
    [Inject] private IServiceProvider Services { get; init; } = null!;
    [Inject] private History History { get; init; } = null!;

    [Parameter] public string Class { get; set; } = "";
    [Parameter] public bool IsSelected { get; set; }
    [Parameter] public string Url { get; set; } = "";
    [Parameter] public string ReplaceOnPrefix { get; set; } = "";
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? Ending { get; set; }
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> Attributes { get; set; } = new();

    private void OnCurrentClick() {
        // Navigation doesn't happen when we click on the current URL,
        // but we still need to pretend it is happening.
        var panelsUI = Services.GetRequiredService<PanelsUI>();
        panelsUI.HidePanels();
        var tuneUI = Services.GetRequiredService<TuneUI>();
        _ = tuneUI.Play("select-navbar-item");
    }
}
