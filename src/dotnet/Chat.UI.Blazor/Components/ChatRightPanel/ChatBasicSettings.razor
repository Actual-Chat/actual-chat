@namespace ActualChat.Chat.UI.Blazor.Components
@using System.ComponentModel.DataAnnotations

<Form Model="@_form" OnValidSubmit="@OnSave">
    <DataAnnotationsValidator/>

    <FormSection Label="Chat title" InputId="@_form.TitleId" IsRequired="true">
        <TextBox @bind-Value="@_form.Title" id="@_form.TitleId" tabIndex="1" Autofocus="true" Class="right-panel-chat-title"/>
    </FormSection>

    <FormSection Label="Picture" InputId="@_form.PictureId">
        <TextBox @bind-Value="@_form.Picture" id="@_form.PictureId" />
    </FormSection>

    <FormSection>
        <ToggleEdit Id="@_form.IsPublicId" Label="Public chat &ndash; anyone can join" @bind-Value="_form.IsPublic"/>
    </FormSection>

    <div class="mt-3 flex-x justify-end">
        <Button Type="@ButtonType.Submit" IsDisabled="@(!context.Validate())">Save</Button>
    </div>
</Form>


@code {
    private FormModel _form = null!;

    [CascadingParameter] public Chat Chat { get; set; } = null!;

    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IChats Chats { get; init; } = null!;
    [Inject] private UICommandRunner Cmd { get; init; } = null!;
    [Inject] private ComponentIdGenerator ComponentIdGenerator { get; init; } = null!;

    protected override Task OnParametersSetAsync() {
        _form ??= new(ComponentIdGenerator);
        _form.Title = Chat.Title;
        _form.Picture = Chat.Picture;
        _form.IsPublic = Chat.IsPublic;
        return Task.CompletedTask;
    }

    private async Task OnSave() {
        var newChat = Chat with {
            Title = _form.Title,
            IsPublic = _form.IsPublic,
            Picture = _form.Picture,
        };
        await Cmd.Run(new IChats.UpdateChatCommand(Session, newChat));
    }

    public sealed class FormModel
    {
        [Required] public string Title { get; set; } = "";
        public string Picture { get; set; } = "";
        public bool IsPublic { get; set; }

        public string FormId { get; }
        public string TitleId { get; }
        public string PictureId { get; }
        public string IsPublicId { get; }

        public FormModel(ComponentIdGenerator componentIdGenerator) {
            FormId = componentIdGenerator.Next("new-chat-form");
            TitleId = $"{FormId}-title";
            PictureId = $"{FormId}-picture";
            IsPublicId = $"{FormId}-is-public";
        }
    }
}
