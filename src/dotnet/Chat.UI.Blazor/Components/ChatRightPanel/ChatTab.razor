@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<ChatAuthorPermissions>
@{
    var m = State.LatestNonErrorValue;
}

<div class="flex-y text-secondary">
    @if (m.CanEditProperties) {
        <ChatBasicSettings/>
    }
    @if (m.CanInvite) {
        <ChatInviteSettings/>
    }
</div>

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IChats Chats { get; init; } = null!;
    [CascadingParameter] public Chat Chat { get; set; } = null!;

    protected override ComputedState<ChatAuthorPermissions>.Options GetStateOptions()
        => new() {
            InitialValue = ChatAuthorPermissions.None,
            UpdateDelayer = UpdateDelayer.MinDelay,
        };

    protected override Task<ChatAuthorPermissions> ComputeState(CancellationToken cancellationToken)
        => Chats.GetPermissions(Session, Chat.Id, default);
}
