@namespace ActualChat.Chat.UI.Blazor.Components

@{
    RenderFragment RenderContent() =>
        @<div class="flex-x overflow-hidden hover:bg-round-hover rounded-lg @Class">
            <div class="flex min-w-12 min-h-12 mr-3 items-center justify-center">
                <i class="text-2xl @Icon"></i>
            </div>
            <div class="flex-y min-w-0 self-center grow">
                <div class="@ContentClass text-headline-1 truncate">
                    @Content
                </div>
                @if (Hint != null) {
                    <div class="text-03 text-caption-2">
                        @Hint
                    </div>
                }
            </div>
            @if (Right != null) {
                <div class="flex-x self-center">
                    @Right
                </div>
            }
        </div>;
}

@if (Click.HasDelegate) {
    <div class="cursor-pointer"
         @onclick="@Click"
         @onclick:preventDefault="true">
        @RenderContent()
    </div>
} else {
    <div>
        @RenderContent()
    </div>
}

@code {
    [Parameter] public string Class { get; set; } = "";
    [Parameter] public EventCallback Click { get; set; }
    [Parameter] public string Icon { get; set; } = "";
    [Parameter] public string Content { get; set; } = "";
    [Parameter] public string ContentClass { get; set; } = "text-01";
    [Parameter] public string? Hint { get; set; }
    [Parameter] public RenderFragment? Right { get; set; }
}
