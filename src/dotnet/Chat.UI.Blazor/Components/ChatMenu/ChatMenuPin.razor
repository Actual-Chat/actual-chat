@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<bool>

@{
    var isPinned = State.ValueOrDefault;
}

@if (!isPinned) {
    <ContextMenuItem OnClick="@Toggle"
                     Icon="icon-pin"
                     Text="Pin">
    </ContextMenuItem>
} else {
    <ContextMenuItem OnClick="@Toggle"
              Icon="icon-pin"
              Text="Unpin">
    </ContextMenuItem>
}

@code {
    [Inject] private ChatUI ChatUI { get; init; } = null!;

    [CascadingParameter] public Chat Chat { get; set; } = null!;

    protected override ComputedState<bool>.Options GetStateOptions()
        => new() { UpdateDelayer = FixedDelayer.Instant };

    protected override Task<bool> ComputeState(CancellationToken cancellationToken)
        => ChatUI.IsPinned(Chat.Id);

    private void Toggle()
        => _ = ChatUI.SetPinState(Chat.Id, !State.ValueOrDefault);
}
