@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<ChatMenuContent.Model>
@using BlazorContextMenu
@{
    var m = State.LatestNonErrorValue;
}

<ChatMenuRecord/>
<ChatMenuPin/>
<ChatMenuPlayback/>
@if (m.CanLeaveChat) {
    <Seperator/>
    <ChatMenuLeave/>
}

@code{
    [Inject] private IChats Chats { get; init; } = null!;
    [Inject] private Session Session { get; init; } = null!;

    [CascadingParameter] public Chat Chat { get; set; } = null!;

    protected override ComputedState<Model>.Options GetStateOptions() {
        return new ComputedState<Model>.Options() {
            InitialValue = Model.None
        };
    }

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken)
    {
        var rules = await Chats.GetRules(Session, Chat.Id, cancellationToken).ConfigureAwait(false);
        var canLeave = rules.CanLeave();
        return new Model { CanLeaveChat = canLeave };
    }

    public record Model {
        public static readonly Model None = new Model();

        public bool CanLeaveChat { get; init; }
    }
}
