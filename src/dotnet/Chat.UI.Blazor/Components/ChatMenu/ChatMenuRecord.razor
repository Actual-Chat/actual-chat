@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<bool>

@{
    var isRecording = State.Value;
    var cls = "important-item " + (isRecording ? "on" : "off");
}

@if (isRecording) {
    <ContextMenuItem OnClick="@(_ => ChatUI.SetRecordingChatId(Symbol.Empty))"
                     Class="@cls"
                     Icon="icon-Stop-fill"
                     Text="Stop talking">
    </ContextMenuItem>
} else {
    <ContextMenuItem OnClick="@(_ => ChatUI.SetRecordingChatId(Chat.Id))"
                     Class="@cls"
                     Icon="icon-mic"
                     Text="Start talking">
    </ContextMenuItem>
}

@code {
    [Inject] private ChatUI ChatUI { get; init; } = null!;

    [CascadingParameter] public Chat Chat { get; set; } = null!;

    protected override ComputedState<bool>.Options GetStateOptions()
        => new() { UpdateDelayer = FixedDelayer.Instant };

    protected override Task<bool> ComputeState(CancellationToken cancellationToken)
        => ChatUI.IsRecording(Chat.Id);
}
