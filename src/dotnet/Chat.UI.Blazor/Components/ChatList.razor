@using ActualChat.Users
@using BlazorContextMenu
@namespace ActualChat.Chat.UI.Blazor.Components

@if (Chats == null || Chats.Count == 0) {
    return;
}
<div class="@GetCss(Kind)">
    @foreach (var chat in Chats) {
        <ChatListItem @key="chat" Chat="@chat" ListKind="@Kind" IsActive="@(ActiveChatId == chat.Id)"/>
    }
</div>
@if (Kind == ChatListKind.Pinned) {
    <div class="mx-4 mb-2 border-b border-bg-04"></div>
}

@code {
    [Parameter, EditorRequired] public ChatListKind Kind { get; set; } = ChatListKind.Listening;
    [Parameter, EditorRequired] public List<Chat>? Chats { get; set; }
    [Parameter] public string ActiveChatId { get; set; } = "";

    private string GetCss(ChatListKind kind)
        => kind switch {
            ChatListKind.Pinned => "pinned-chats",
            ChatListKind.Unpinned => "unpinned-chats custom-scrollbar",
            ChatListKind.Listening => "flex-y gap-y-0.5",
            _ => throw new ArgumentOutOfRangeException(nameof(kind)),
        };
}
