@namespace ActualChat.Chat.UI.Blazor.Components
@using ActualChat.Notification
@using ActualChat.Users.UI.Blazor.Services
@inherits ComputedStateComponent<ChatSettingsToggle.Model>
@{
    var isRightPanelShown = State.Value.IsRightPanelShown;
}

<ButtonSquare OnClick="OnClick"
              Class="@(isRightPanelShown ? "on" : "off")"
              Title="@(isRightPanelShown ? "Hide settings" : "Show settings")">
    <svg xmlns="http://www.w3.org/2000/svg" class="w-8 h-8 fill-current" viewBox="-4 -4 32 32">
        <path d="M12 18c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3zm0-9c1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3 1.343-3 3-3z"/>
    </svg>
</ButtonSquare>

@code {
    [Inject] private UserSettings UserSettings { get; init; } = null!;

    protected override ComputedState<Model>.Options GetStateOptions()
        => new() { InitialValue = Model.None };

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var isRightPanelShown = await UserSettings.IsRightPanelShown.Use(cancellationToken);
        return new() {
            IsRightPanelShown = isRightPanelShown,
        };
    }

    private void OnClick()
        => UserSettings.IsRightPanelShown.Value = !State.Value.IsRightPanelShown;

    public class Model {
        public static Model None { get; } = new();
        public bool IsRightPanelShown { get; init; }
    }
}
