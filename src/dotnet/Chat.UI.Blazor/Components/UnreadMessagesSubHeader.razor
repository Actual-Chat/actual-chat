@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<UnreadMessagesSubHeader.Model>
@{
    var m = State.ValueOrDefault ?? Model.None;
    if (m.Count == 0)
        return;
}

<div class="unread-messages-sub-header" @onclick="Click">
    @m.Count unread @PluralizeMessage(m.Count)
</div>

@code {
    [Inject] private UnreadMessages UnreadMessages { get; init; } = null!;
    [Inject] private Session Session { get; init; } = null!;

    [CascadingParameter] public Chat Chat { get; set; } = null!;
    [Parameter] public EventCallback Click { get; set; }

    protected override ComputedState<Model>.Options GetStateOptions() {
        return new() {
            InitialValue = Model.None,
        };
    }

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var count = await UnreadMessages.GetUnreadMessageCount(Session, Chat.Id, cancellationToken).ConfigureAwait(true);
        if (!count.HasValue)
            return Model.None;

        return new() {
            Count = count.Value,
        };
    }

    private string PluralizeMessage(int count) {
        return count switch {
            1 => "message",
            _ => "messages",
        };
    }

    public sealed record Model {
        public static readonly Model None = new();

        public int Count { get; init; }
    }
}
