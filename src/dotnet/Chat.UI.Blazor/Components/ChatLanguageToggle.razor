@inherits ComputedStateComponent<ChatUserSettings?>
@inject Session _session
@inject IChatUserSettings _chatUserSettings
@inject UICommandRunner _cmd

@{
    var language = State.LatestNonErrorValue.LanguageOrDefault();
}
<ButtonSquare Class="chat-language-toggle z-10 w-10"
        OnClick="OnClick">
    <ChildContent>
        <span class="w-9 h-9 m-2">
            @language.Shortcut
        </span>
    </ChildContent>
</ButtonSquare>

@code {
    [CascadingParameter] public Chat Chat { get; set; } = null!;

    protected override ComputedState<ChatUserSettings?>.Options GetStateOptions()
        => new() { UpdateDelayer = UpdateDelayer.MinDelay };

    protected override async Task<ChatUserSettings?> ComputeState(CancellationToken cancellationToken)
        => await _chatUserSettings.Get(_session, Chat.Id, cancellationToken);

    private async Task OnClick()
    {
        var settings = State.Value ?? new() { Language = LanguageId.Default };
        settings = settings with { Language = settings.LanguageOrDefault().Next() };
        var command = new IChatUserSettings.SetCommand(_session, Chat.Id, settings);
        await _cmd.Run(command).ConfigureAwait(true);
    }
}
