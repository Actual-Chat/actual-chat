@inherits ComputedStateComponent<ChatUserSettings?>
@{
    var language = State.LatestNonErrorValue.LanguageOrDefault();
}

<ButtonRound
    Class="chat-language-toggle"
    Click="OnClick">
    <span class="w-8 h-8 m-1">
        @language.Shortcut
    </span>
</ButtonRound>

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IChatUserSettings ChatUserSettings { get; init; } = null!;
    [Inject] private UICommander UICommander { get; init; } = null!;

    [CascadingParameter] public Chat Chat { get; set; } = null!;

    protected override ComputedState<ChatUserSettings?>.Options GetStateOptions()
        => new() { UpdateDelayer = UpdateDelayer.ZeroDelay };

    protected override Task<ChatUserSettings?> ComputeState(CancellationToken cancellationToken)
        => ChatUserSettings.Get(Session, Chat.Id, cancellationToken);

    private async Task OnClick()
    {
        var settings = State.Value ?? new() { Language = LanguageId.Default };
        settings = settings with { Language = settings.LanguageOrDefault().Next() };
        var command = new IChatUserSettings.SetCommand(Session, Chat.Id, settings);
        await UICommander.Run(command);
    }
}
