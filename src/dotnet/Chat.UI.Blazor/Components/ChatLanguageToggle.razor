@inherits ComputedStateComponent<ChatUserSettings?>
@inject Session _session
@inject IChatUserSettings _chatUserSettings
@inject UICommandRunner _cmd

@{
    var language = State.LatestNonErrorValue.LanguageOrDefault();
}
<button class="chat-language-toggle relative h-8 w-8 p-1 rounded-full text-md font-semibold text-secondary hover:text-toggle-on"
        @onclick="Toggle">
        @language.Shortcut
</button>

@code {
    [CascadingParameter]
    public Chat Chat { get; set; } = null!;

    protected override ComputedState<ChatUserSettings?>.Options GetStateOptions()
        => new() { UpdateDelayer = UpdateDelayer.MinDelay };

    protected override async Task<ChatUserSettings?> ComputeState(CancellationToken cancellationToken)
        => await _chatUserSettings.Get(_session, Chat.Id, cancellationToken);

    private async Task Toggle()
    {
        var settings = State.Value ?? new() { Language = LanguageId.Default };
        settings = settings with { Language = settings.LanguageOrDefault().Next() };
        var command = new IChatUserSettings.SetCommand(_session, Chat.Id, settings);
        await _cmd.Run(command).ConfigureAwait(true);
    }
}
