@using ActualChat.Search
@using SearchUI = ActualChat.Chat.UI.Blazor.Services.SearchUI
@inherits ComputedStateComponent<SearchMatch>

<SearchMatchHighlighter Match="@State.Value"/>

@code {
    private static IUpdateDelayer UpdateDelayer { get; } = FixedDelayer.Get(0.333);

    [Inject] private SearchUI SearchUI { get; init; } = null!;

    [Parameter, EditorRequired] public Chat Chat { get; set; } = null!;

    protected override ComputedState<SearchMatch>.Options GetStateOptions()
        => new() {
            InitialValue = SearchMatch.New(Chat.Title),
            UpdateDelayer = UpdateDelayer, // De-bounces the re-renders
            Category = ComputedStateComponent.GetStateCategory(GetType()),
        };

    protected override async Task<SearchMatch> ComputeState(CancellationToken cancellationToken) {
        var searchMatch = await SearchUI.GetSearchMatch(Chat.Id);
        return !searchMatch.IsEmpty ? searchMatch : SearchMatch.New(Chat.Title);
    }
}
