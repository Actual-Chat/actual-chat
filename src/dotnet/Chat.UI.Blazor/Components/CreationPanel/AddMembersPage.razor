@namespace ActualChat.Chat.UI.Blazor.Components
@using ActualChat.Contacts

<div class="creation-panel">
    <div class="header add-members">
        <ButtonRound Class="transparent" Click="OnPreviousPageClick">
            <i class="icon-arrow-left text-2xl"></i>
        </ButtonRound>
        <div class="w-full px-2 text-xl md:text-lg font-semibold md:font-medium">@Title</div>
        <ButtonRound Class="transparent" Click="OnCloseClick">
            <i class="icon-close text-2xl md:text-xl font-medium"></i>
        </ButtonRound>
    </div>
    <div class="flex-x flex-wrap gap-x-2 w-full px-2">
        @foreach (var contact in SelectedContacts) {
            <div class="selected-contact">
                @contact.Account?.Avatar.Name
            </div>
        }
    </div>
    <div class="px-2">
        <SearchBox
            @ref="SearchBox"
            Class="mt-1"
            Placeholder="Type the username"
            MaxLength="@Constants.Chat.MaxSearchFilterLength"
            TextChanged="@OnFilter"/>
    </div>
</div>

@code{
    [Inject] private SearchUI SearchUI { get; init; } = null!;

    [Parameter] public string Title { get; set; } = "";
    [Parameter] public Contact[] AllContacts { get; set; } = null!;
    [Parameter] public Contact[] SelectedContacts { get; set; } = null!;
    [Parameter] public Contact[] FilteredContacts { get; set; } = null!;
    [Parameter] public EventCallback OnCloseClick { get; set; }
    [Parameter] public EventCallback OnNextPageClick { get; set; }
    [Parameter] public EventCallback OnPreviousPageClick { get; set; }
    [Parameter] public EventCallback<Contact> OnAddContact { get; set; }
    [Parameter] public SearchBox SearchBox { get; set; } = null!;

    private void OnFilter(string filter) {
        FilteredContacts = string.IsNullOrWhiteSpace(filter)
            ? AllContacts.ToArray()
            : AllContacts
                .Where(x => x.Account != null && x.Account.Avatar.Name.OrdinalIgnoreCaseContains(filter))
                .ToArray();
    }
}
