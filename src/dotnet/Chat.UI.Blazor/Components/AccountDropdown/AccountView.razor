@namespace ActualChat.Chat.UI.Blazor.Components
@using ActualChat.Users
@using ActualChat.UI.Blazor.Services
@inherits ComputedStateComponent<Account>
@{
    var account = State.Value;
    if (account == AccountFull.Loading)
        return;
}

<AvatarBadge
    Avatar="@account.Avatar"
    Size="@SquareSize.Size9"
    NameClass="hidden">
    <BadgeContent>
        <AccountPresenceIndicator UserSid="@account.Id" />
    </BadgeContent>
</AvatarBadge>

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private AccountUI AccountUI { get; init; } = null!;

    protected override ComputedState<Account>.Options GetStateOptions()
        => new() {
            InitialValue = AccountUI.OwnAccount.Value,
            Category = GetStateCategory(),
        };

    protected override async Task<Account> ComputeState(CancellationToken cancellationToken)
        => await AccountUI.OwnAccount.Use(cancellationToken);
}
