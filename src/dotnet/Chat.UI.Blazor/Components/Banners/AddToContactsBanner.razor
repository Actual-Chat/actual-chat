@namespace ActualChat.Chat.UI.Blazor.Components
@using ActualChat.Contacts
@inherits ComputedStateComponent<AddToContactsBanner.Model>
@{
    var m = State.Value;
    if (ReferenceEquals(m, Model.Loading))
        return;
}

<Banner IsVisible="@m.CanAddToContacts" Severity="BannerSeverity.Warning" ShowDismissButton="true">
    <Body>
        This user is not in your contact list
    </Body>
    <Buttons>
        <Button Class="btn-transparent on" Click="@OnAddClick">Add to contacts</Button>
    </Buttons>
</Banner>

@code {
    private Session Session => ChatContext.Session;
    private Chat Chat => ChatContext.Chat;
    private IContacts Contacts => ChatContext.Contacts;
    private UICommander UICommander => ChatContext.UICommander();

    [Parameter, EditorRequired] public ChatContext ChatContext { get; set; } = null!;

    protected override ComputedState<Model>.Options GetStateOptions()
        => new() {
            InitialValue = Model.Loading,
            Category = GetStateCategory(),
        };

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var contact = await Contacts.GetForChat(Session, Chat.Id, cancellationToken);
        return new(contact);
    }

    private async Task OnAddClick() {
        var contact = State.Value.Contact!;
        var command = new Contacts_Change(Session, contact.Id, null, new Change<Contact> {
            Create = contact,
        });
        await UICommander.Run(command);
    }

    public sealed record Model(Contact? Contact = null) {
        public  static readonly Model Loading = new();

        public bool CanAddToContacts => Contact is { ChatId.Kind: ChatKind.Peer } && !Contact.IsStored();
    }
}
