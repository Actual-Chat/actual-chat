@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<Banners.ComputedModel>
@{
    var m = State.Value;
}

<ReconnectBanner/>
@foreach (var banner in m.Banners.Take(MaxCount)) {
    @banner.View
}
<AddToContactsBanner ChatContext="@ChatContext"/>
<AddChatMembersBanner ChatContext="@ChatContext"/>
<PermissionBannerSwitch/>

@code {
    private const int MaxCount = 2;

    private BannerUI BannerUI => ChatContext.Hub.BannerUI;

    [Parameter, EditorRequired] public ChatContext ChatContext { get; set; } = null!;

    protected override ComputedState<ComputedModel>.Options GetStateOptions()
        => new() {
            InitialValue = ComputedModel.None,
            UpdateDelayer = FixedDelayer.Instant,
            Category = GetStateCategory(),
        };

    protected override async Task<ComputedModel> ComputeState(CancellationToken cancellationToken) {
        var bannerRefs = await BannerUI.Banners.Use(cancellationToken);
        return new(bannerRefs);
    }

    public sealed record ComputedModel(ImmutableList<BannerDef> Banners) {
        public static readonly ComputedModel None = new(ImmutableList<BannerDef>.Empty);
    }
}
