@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<Banners.ComputedModel>
@{
    var m = State.Value;
}
@foreach (var banner in m.BannerInstances.Take(MaxCount)) {
    @banner.View
}
<AddToContactsBanner/>
<GrantNotificationPermissionBanner/>

@code {
    private const int MaxCount = 2;
    [Inject] private BannerUI BannerUI { get; init; } = null!;

    protected override ComputedState<ComputedModel>.Options GetStateOptions()
        => new() {
            InitialValue = ComputedModel.None,
            Category = GetStateCategory(),
        };

    protected override async Task<ComputedModel> ComputeState(CancellationToken cancellationToken) {
        var bannerInstances = await BannerUI.BannerInstances.Use(cancellationToken);
        return new(bannerInstances);
    }

    public sealed record ComputedModel(ImmutableList<BannerInstance> BannerInstances) {
        public static readonly ComputedModel None = new(ImmutableList<BannerInstance>.Empty);
    }
}
