@using System.ComponentModel.DataAnnotations
@using Stl.Extensibility
@implements IModalView<NewChatModal.Model>
@attribute [MatchFor(typeof(Model), typeof(IModalView))]

<Form Model="@_form" OnValidSubmit="@OnCreate">
    <DataAnnotationsValidator/>
    <DialogFrame Title="New chat">
        <Body>
            <FormSection Label="Chat title" InputId="@_form.TitleId" IsRequired="true">
                <TextBox @bind-Value="@_form.Title" id="@_form.TitleId" tabIndex="1" Autofocus="true"/>
            </FormSection>
        </Body>
        <Buttons>
            <div class="btn-group">
                <Button Type="@ButtonType.Button" Click="OnCancel" Class="btn-cancel-outline">Cancel</Button>
                <Button Type="@ButtonType.Submit" Class="btn-success" IsDisabled="@(!context.Validate())">Create</Button>
            </div>
        </Buttons>
    </DialogFrame>
</Form>

@code {
    private FormModel _form = null!;

    [Inject] private Session Session { get; init; } = null!;
    [Inject] private UICommandRunner Cmd { get; init; } = null!;
    [Inject] private NavigationManager Nav { get; init; } = null!;
    [Inject] private ComponentIdGenerator ComponentIdGenerator { get; init; } = null!;

    [CascadingParameter] public BlazoredModalInstance ModalInstance { get; set; } = null!;
    [Parameter] public Model ModalModel { get; set; } = null!;

    protected override void OnInitialized()
        => _form = new(ComponentIdGenerator);

    private async Task OnCreate()
    {
        var command = new IChats.CreateChatCommand(Session, _form.Title);
        var result = await Cmd.Run(command, default);
        if (!result.CommandEvent.IsCompletedSuccessfully)
            return;
        await ModalInstance.CancelAsync();
        var chatId = result.Result.Id;
        Nav.NavigateTo($"/chat/{chatId}");
    }

    private void OnCancel()
        => ModalInstance.CancelAsync();

    public class FormModel
    {
        [Required] public string Title { get; set; } = "";

        public string FormId { get; }
        public string TitleId { get; }

        public FormModel(ComponentIdGenerator componentIdGenerator) {
            FormId = componentIdGenerator.Next("new-chat-form");
            TitleId = $"{FormId}-title";
        }
    }

    public sealed record Model;
}
