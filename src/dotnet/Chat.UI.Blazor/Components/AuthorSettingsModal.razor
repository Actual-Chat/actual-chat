@using Stl.Extensibility
@implements IModalView<AuthorSettingsModal.Model>
@attribute [MatchFor(typeof(Model), typeof(IModalView))]

<DialogFrame Title="Author Settings" Class="author-settings-modal">
    <Body>
        <section>
            <UserNameEditor/>
        </section>

        <h4 class="section"></h4>
        <Button class="btn-error-outline mt-3" Click="OnLeaveChatClicked">Leave chat</Button>

        <h4 class="section">User avatars</h4>
        <div class="mt-2">
            <UserAvatarsEditor ChatId="@ModalModel.Chat.Id"/>
        </div>
    </Body>
</DialogFrame>


@code {
    [Inject] private ComponentIdGenerator ComponentIdGenerator { get; init; } = null!;
    [Inject] private ModalUI ModalUI { get; init; } = null!;
    [CascadingParameter] public BlazoredModalInstance ModalInstance { get; set; } = null!;
    [Parameter] public Model ModalModel { get; set; } = null!;

    public sealed record Model(Chat Chat);

    private void OnLeaveChatClicked() {
        _ = ModalInstance.CloseAsync();
        _ = ModalUI.Show(new LeaveChatConfirmationModal.Model(ModalModel.Chat));
    }
}
