@namespace ActualChat.Chat.UI.Blazor.Components

@{
    var attachment = Attachment;
    var url = UrlMapper.ContentUrl(Attachment.ContentId);
    //var previewUrl = attachment.ProxyUrl;
    // var absUrl = Nav.ToAbsoluteUri(url);
    // var correctedUrl = absUrl.ToString().Replace("localhost", "192.168.1.3", StringComparison.OrdinalIgnoreCase);
    //var previewUrl = "http://localhost:8080/400,fit/" + correctedUrl;
    //var previewUrl = "https://media.local.actual.chat/400,fit/" + correctedUrl;
    var previewUrl = UrlMapper.ResizedImageUrl(url);
    var imgStyle = "max-width: 400px; max-height: 300px";
    if (attachment.Height > 0 && attachment.Width > 0) {
        var width = attachment.Width;
        var height = attachment.Height;
        if (width > 400 || height > 300) {
            var ratio = Math.Min(400d / width, 300d / height);
            width = (int)Math.Round(ratio * width);
            height = (int)Math.Round(ratio * height);
        }
        imgStyle = $"width: {width}px; height: {height}px";
        // TODO(DF): setup correct preview url to image proxy endpoint
        //previewUrl += $"?width={width}&height={height}";
    }
}
<div class="message-attachment-image mt-1">
    <a class="cursor-pointer" href="@url"
       role="button" @onclick="_ => ImagePreviewUI.Show(url)" @onclick:preventDefault="true">
        <img class="inline" style="@imgStyle" src="@previewUrl" alt="image" />
    </a>
</div>

@code {
    [Inject] private ImagePreviewUI ImagePreviewUI { get; set; } = null!;
    [Inject] private NavigationManager Nav { get; set; } = null!;
    [Inject] private UrlMapper UrlMapper { get; set; } = null!;

    [Parameter, EditorRequired]
    public TextEntryAttachment Attachment { get; set; } = null!;
}
