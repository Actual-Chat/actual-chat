@namespace ActualChat.Chat.UI.Blazor.Components
@using ActualChat.Media
@inherits FusionComponentBase
@{
    var m = Model;
    var chat = m.Chat!;
    var entry = m.Entry!;
}

@if (chat.Kind == ChatKind.Place) {
    <div class="link-preview our-link place-link unfocusable">
        <div class="image-wrapper">
            @if (m.Place != null) {
                <Pic
                    Picture="@m.Place.Background.ToPicture()"
                    Size="SquareSize.SizeFull"
                    IsSquare="@true"
                    HideTitle="@true"
                    IsBlurred="@false"
                    AvatarKind="@AvatarKind.Marble"
                    AvatarKey="@m.Place.Id.Value"/>
            } else {
                <Pic
                    Picture="@chat.Picture.ToPicture()"
                    Size="SquareSize.Size24"
                    IsSquare="@true"
                    HideTitle="@true"
                    IsBlurred="@false"
                    AvatarKind="@AvatarKind.Marble"
                    AvatarKey="@chat.Id.Value"/>
            }
        </div>
        <div class="c-info">
            <div class="c-top">
                @if (m.Author != null) {
                    <div class="c-author-header">
                        <AuthorName AuthorSid="@m.Author.Id" Class="chat-message-author-name"/>
                        <LiveTimeDeltaText Class="chat-message-timestamp min-w-fit" Moment="@entry.BeginsAt"/>
                    </div>
                }
                <a class="c-description" href="@m.Uri">@entry.Content</a>
            </div>
            <span class="c-domain">
                in <a class="text-primary" href="@Links.Chat(chat.Id)">@chat.Title</a>
            </span>
        </div>
        <div class="incut"></div>
    </div>
} else {
    <div class="link-preview our-link unfocusable">
        <div class="c-chat-icon">
            <ChatIcon Chat="@chat" Size="SquareSize.Size8"/>
        </div>
        <div class="c-info">
            <div class="c-top">
                @if (m.Author != null) {
                    <div class="c-author-header">
                        <AuthorName AuthorSid="@m.Author.Id" Class="chat-message-author-name"/>
                        <LiveTimeDeltaText Class="chat-message-timestamp min-w-fit" Moment="@entry.BeginsAt"/>
                    </div>
                }
                <a class="c-description" href="@m.Uri">@entry.Content</a>
            </div>
            <span class="c-domain">
                in <a class="text-primary" href="@Links.Chat(chat.Id)">@chat.Title</a>
            </span>
        </div>
        <div class="incut"></div>
    </div>
}

@code {
    [Parameter, EditorRequired] public LinkPreviewView.Model Model { get; set; } = null!;
    [CascadingParameter] public ScreenSize ScreenSize { get; set; }
}
