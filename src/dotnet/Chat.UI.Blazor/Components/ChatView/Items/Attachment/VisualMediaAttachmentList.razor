@namespace ActualChat.Chat.UI.Blazor.Components

<div class="message-image-attachments">
    @foreach (var item in GetOptimizedGallery(ImageList)) {
        <VisualMediaAttachmentLine
            ImageLine="@item.Line"
            ChatEntry="@ChatEntry"
            IsFull="@item.IsFull"
            ImageSize="@item.ImageSize"/>
    }
</div>

@code {
    [Parameter, EditorRequired]
    public List<TextEntryAttachment> ImageList { get; set; } = null!;
    [Parameter] public ChatEntry? ChatEntry { get; set; }

    private List<ImageItem> CreateImageItemList(List<TextEntryAttachment> imageList) {
        var imageItemList = new List<ImageItem>();
        foreach (var image in imageList) {
            var ratio = (float) image.Media.Width / image.Media.Height;
            var crop = (double) ratio;
            if (ratio <= 0.75)
                crop = 0.333;
            else if (ratio > 0.75 && ratio <= 1.25)
                crop = 0.667;
            else if (ratio > 1.25 && ratio <= 2)
                crop = 1.5;
            var imageItem = new ImageItem(image, crop);
            imageItemList.Add(imageItem);
        }
        return imageItemList;
    }

    private List<ImageLine> GetGallery(List<TextEntryAttachment> list) {
        var imageItemList = CreateImageItemList(list);
        var orderedList = imageItemList
            .OrderByDescending(item => (float) item.Attachment.Media.Width / item.Attachment.Media.Height)
            .ToList();

        var gallery = new List<ImageLine>();
        var imageList = new List<ImageItem>();
        var imageType = ImageSize.ExtraLarge;
        for (var i = 0; i < orderedList.Count; i++) {
            var item = orderedList[i];
            ImageLine imageLine;
            if (item.Crop > 1.5) {
                imageList.Add(item);
                imageLine = new ImageLine(imageType, true, imageList);
                gallery.Add(imageLine);
                imageList = new List<ImageItem>();
            } else if (Math.Abs(item.Crop - 1.5) < 0.001) {
                imageType = ImageSize.Large;
                if (imageList.Count == 2) {
                    imageLine = new ImageLine(imageType, true, imageList);
                    gallery.Add(imageLine);
                    imageList = new List<ImageItem>();
                }
                imageList.Add(item);
            } else if (Math.Abs(item.Crop - 0.667) < 0.001) {
                if (imageType != ImageSize.Medium) {
                    if (imageList.Count > 0) {
                        imageLine = new ImageLine(ImageSize.Large, imageList.Count == 2, imageList);
                        gallery.Add(imageLine);
                    }
                    imageList = new List<ImageItem>();
                    imageType = ImageSize.Medium;
                }
                if (imageList.Count == 3) {
                    imageLine = new ImageLine(imageType, true, imageList);
                    gallery.Add(imageLine);
                    imageList = new List<ImageItem>();
                }
                imageList.Add(item);
            } else {
                if (imageType != ImageSize.Small) {
                    if (imageList.Count > 0) {
                        imageLine = new ImageLine(ImageSize.Medium, imageList.Count == 3, imageList);
                        gallery.Add(imageLine);
                    }
                    imageList = new List<ImageItem>();
                    imageType = ImageSize.Small;
                }
                if (imageList.Count == 4) {
                    imageLine = new ImageLine(imageType, true, imageList);
                    gallery.Add(imageLine);
                    imageList = new List<ImageItem>();
                }
                imageList.Add(item);
            }
            if (i != orderedList.Count - 1 || imageList.Count <= 0) continue;
            imageLine = new ImageLine(imageType, imageList.Count == 4, imageList);
            gallery.Add(imageLine);
            imageList = new List<ImageItem>();
        }
        return gallery;
    }

    private List<ImageLine> GetOptimizedGallery(List<TextEntryAttachment> list) {
        var gallery = GetGallery(list);
        var newGallery = new List<ImageLine>();
        foreach (var line in gallery) {
            if (line.IsFull)
                newGallery.Add(line);
        }
        var mixedList = new List<ImageItem>();
        ImageLine mixedLine;
        foreach (var line in gallery) {
            if (line is not { IsFull: false,Line: not null }) continue;
            if (line.ImageSize == ImageSize.Large) {
                line.IsFull = true;
                newGallery.Add(line);
                continue;
            }
            foreach (var item in line.Line) {
                mixedList.Add(item);
                if (mixedList.Count != 3) continue;
                mixedLine = new ImageLine(ImageSize.Mixed, true, mixedList);
                newGallery.Add(mixedLine);
                mixedList = new List<ImageItem>();
            }
        }
        if (mixedList.Count <= 0) return newGallery;
        mixedLine = new ImageLine(ImageSize.Mixed, true, mixedList);
        newGallery.Add(mixedLine);
        return newGallery;
    }

    public record ImageItem {
        public TextEntryAttachment Attachment { get; set; } = null!;
        public double Crop { get; set; }

        public ImageItem(TextEntryAttachment attachment, double crop) {
            Attachment = attachment;
            Crop = crop;
        }
    }

    public record ImageLine {
        public ImageSize ImageSize { get; set; }
        public bool IsFull { get; set; }
        public List<ImageItem>? Line { get; set; }

        public ImageLine(ImageSize imageSize, bool isFull, List<ImageItem> line) {
            ImageSize = imageSize;
            IsFull = isFull;
            Line = line;
        }
    }

}
