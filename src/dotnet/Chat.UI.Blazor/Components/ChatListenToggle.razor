@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<ChatMediaState>
@{
    var m = State.LatestNonErrorValue;
    var playingHistoricalClass = m.IsPlayingHistorical ? "opacity-60" : "";
    var cls = $"play {(m.IsListening ? "on" : "off")} {playingHistoricalClass}";
}

<ButtonRound Class="@cls" Click="@OnListenClick">
    <i class="icon-listen text-2xl"></i>
</ButtonRound>

@code {
    [Inject] private ChatUI ChatUI { get; init; } = null!;

    [Parameter, EditorRequired] public ChatId ChatId { get; set; }

    protected override ComputedState<ChatMediaState>.Options GetStateOptions()
        => new() {
            InitialValue = ChatMediaState.None,
            UpdateDelayer = FixedDelayer.Instant,
        };

    protected override Task<ChatMediaState> ComputeState(CancellationToken cancellationToken)
        => ChatUI.GetMediaState(ChatId);

    private void OnListenClick()
        => _ = ChatUI.SetListeningState(ChatId, !State.LatestNonErrorValue.IsListening);
}
