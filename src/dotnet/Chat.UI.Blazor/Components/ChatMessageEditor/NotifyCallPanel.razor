@namespace ActualChat.Chat.UI.Blazor.Components
@{
    var panelCls = _panelState switch {
        PanelState.Closed => "",
        PanelState.Open => "panel-open",
        _ => "",
    };
}

@if (_enableIncompleteUI) {
    <ButtonRound
        Class="post-panel-btn notify-call-btn btn-transparent hidden"
        Click="OnClick">
        <i class="icon-at text-2xl"></i>
    </ButtonRound>
    <div class="@panelCls notify-call-panel">
        <div class="notify-call-content">
            <div class="actions">
                <button class="notify-btn">
                    <i class="icon-at text-2xl"></i>
                    <p>Notify all</p>
                </button>
                <button class="call-btn">
                    <i class="icon-phone text-2xl"></i>
                    <p>Call all</p>
                </button>
            </div>
            <ButtonRound Class="post-panel-btn btn-transparent close-btn" Click="OnClick">
                <i class="icon-close text-2xl"></i>
            </ButtonRound>
        </div>
    </div>
}

@code {
    enum PanelState {
        Closed = 0,
        Open,
    }

    private bool _enableIncompleteUI;
    private PanelState _panelState = PanelState.Closed;

    [Inject] private Features Features { get; init; } = null!;

    protected override async Task OnInitializedAsync() {
        _enableIncompleteUI = await Features.Get<Features_EnableIncompleteUI, bool>(CancellationToken.None);
    }

    public void Close() {
        _panelState = PanelState.Closed;
        StateHasChanged();
    }

    private void OnClick() {
        _panelState = _panelState switch {
            PanelState.Closed => PanelState.Open,
            _ => PanelState.Closed,
        };
    }
}
