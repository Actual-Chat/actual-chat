@namespace ActualChat.Chat.UI.Blazor.Components
@implements IChatMessageEditorBackend
@using ActualChat.Chat.UI.Blazor.Services
@using ActualChat.Audio.UI.Blazor.Components
@using ActualChat.Chat.UI.Blazor.Module
@implements IAsyncDisposable
@inject IChats _chatService
@inject Session _session
@inject UICommandRunner _cmd
@inject IJSRuntime _js
@inject MomentClockSet _clocks

<div @ref="EditorRef" class="@(_class ??= this.DefaultClass()) chat-message-editor initial sticky bottom-0 self-end bg-secondary w-full p-2">
    <div class="flex flex-row justify-between px-1">
        <div class="block flex flex-row justify-center items-center justify-items-center outline-none bg-accent rounded-md w-full overflow-hidden mr-3">
            <button class="attach-button sticky flex outline-none text-secondary hover:cursor-pointer text-primary px-3 py-2">
                <svg class="fill-current h-6 w-6 text-secondary hover:text-primary" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                    <path d="M11 9h4v2h-4v4H9v-4H5V9h4V5h2v4zm-1 11a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16z"/>
                </svg>
            </button>
            <div class="message-input flex-1 overflow-y-auto max-h-36 md:max-h-72 break-words py-2 md:mx-2 outline-none hover:cursor-text text-primary"
                 autocomplete="off" autocorrect="off" spellcheck="true" aria-expanded="false" aria-autocomplete="list"
                 aria-multiline="true" aria-label="Message" dir="auto" contenteditable="true" role="textbox" data-text="#@(Chat.Title)">
            </div>
            <div class="audio-wave block flex-auto w-full py-2 pr-2 outline-none">
                <svg class="h-6 w-full fill-current" xmlns="http://www.w3.org/2000/svg" viewBox="1.5 3.4 45 3.6">
                    <path d="M 0.817 5.474 L 0.658 5.474 L 0.658 5.226 L 0.817 5.226 L 0.817 5.474 Z M 4.324 5.226 L 4.164 5.226 L 4.164 5.474 L 4.324 5.474 L 4.324 5.226 Z M 1.136 4.978 L 0.977 4.978 L 0.977 5.723 L 1.136 5.723 L 1.136 4.978 Z M 4.005 4.978 L 3.845 4.978 L 3.845 5.723 L 4.005 5.723 L 4.005 4.978 Z M 1.774 4.978 L 1.614 4.978 L 1.614 5.723 L 1.774 5.723 L 1.774 4.978 Z M 3.367 4.729 L 3.208 4.729 L 3.208 5.971 L 3.367 5.971 L 3.367 4.729 Z M 1.455 4.729 L 1.295 4.729 L 1.295 5.971 L 1.455 5.971 L 1.455 4.729 Z M 3.686 4.481 L 3.527 4.481 L 3.527 6.22 L 3.686 6.22 L 3.686 4.481 Z M 2.092 4.481 L 1.933 4.481 L 1.933 6.22 L 2.092 6.22 L 2.092 4.481 Z M 2.411 3.984 L 2.252 3.984 L 2.252 6.468 L 2.411 6.468 L 2.411 3.984 Z M 3.049 3.984 L 2.889 3.984 L 2.889 6.468 L 3.049 6.468 L 3.049 3.984 Z M 2.73 3.487 L 2.57 3.487 L 2.57 6.965 L 2.73 6.965 L 2.73 3.487 Z" style=""/>
                    <path d="M 4.33 5.473 L 4.171 5.473 L 4.171 5.225 L 4.33 5.225 L 4.33 5.473 Z M 7.837 5.225 L 7.677 5.225 L 7.677 5.473 L 7.837 5.473 L 7.837 5.225 Z M 4.649 4.977 L 4.49 4.977 L 4.49 5.722 L 4.649 5.722 L 4.649 4.977 Z M 7.518 4.977 L 7.358 4.977 L 7.358 5.722 L 7.518 5.722 L 7.518 4.977 Z M 5.287 4.977 L 5.127 4.977 L 5.127 5.722 L 5.287 5.722 L 5.287 4.977 Z M 6.88 4.728 L 6.721 4.728 L 6.721 5.97 L 6.88 5.97 L 6.88 4.728 Z M 4.968 4.728 L 4.808 4.728 L 4.808 5.97 L 4.968 5.97 L 4.968 4.728 Z M 7.199 4.48 L 7.04 4.48 L 7.04 6.219 L 7.199 6.219 L 7.199 4.48 Z M 5.605 4.48 L 5.446 4.48 L 5.446 6.219 L 5.605 6.219 L 5.605 4.48 Z M 5.924 3.983 L 5.765 3.983 L 5.765 6.467 L 5.924 6.467 L 5.924 3.983 Z M 6.562 3.983 L 6.402 3.983 L 6.402 6.467 L 6.562 6.467 L 6.562 3.983 Z M 6.243 3.486 L 6.083 3.486 L 6.083 6.964 L 6.243 6.964 L 6.243 3.486 Z" style=""/>
                    <path d="M 7.838 5.469 L 7.679 5.469 L 7.679 5.221 L 7.838 5.221 L 7.838 5.469 Z M 11.345 5.221 L 11.185 5.221 L 11.185 5.469 L 11.345 5.469 L 11.345 5.221 Z M 8.157 4.973 L 7.998 4.973 L 7.998 5.718 L 8.157 5.718 L 8.157 4.973 Z M 11.026 4.973 L 10.866 4.973 L 10.866 5.718 L 11.026 5.718 L 11.026 4.973 Z M 8.795 4.973 L 8.635 4.973 L 8.635 5.718 L 8.795 5.718 L 8.795 4.973 Z M 10.388 4.724 L 10.229 4.724 L 10.229 5.966 L 10.388 5.966 L 10.388 4.724 Z M 8.476 4.724 L 8.316 4.724 L 8.316 5.966 L 8.476 5.966 L 8.476 4.724 Z M 10.707 4.476 L 10.548 4.476 L 10.548 6.215 L 10.707 6.215 L 10.707 4.476 Z M 9.113 4.476 L 8.954 4.476 L 8.954 6.215 L 9.113 6.215 L 9.113 4.476 Z M 9.432 3.979 L 9.273 3.979 L 9.273 6.463 L 9.432 6.463 L 9.432 3.979 Z M 10.07 3.979 L 9.91 3.979 L 9.91 6.463 L 10.07 6.463 L 10.07 3.979 Z M 9.751 3.482 L 9.591 3.482 L 9.591 6.96 L 9.751 6.96 L 9.751 3.482 Z" style=""/>
                    <path d="M 11.349 5.47 L 11.19 5.47 L 11.19 5.222 L 11.349 5.222 L 11.349 5.47 Z M 14.856 5.222 L 14.696 5.222 L 14.696 5.47 L 14.856 5.47 L 14.856 5.222 Z M 11.668 4.974 L 11.509 4.974 L 11.509 5.719 L 11.668 5.719 L 11.668 4.974 Z M 14.537 4.974 L 14.377 4.974 L 14.377 5.719 L 14.537 5.719 L 14.537 4.974 Z M 12.306 4.974 L 12.146 4.974 L 12.146 5.719 L 12.306 5.719 L 12.306 4.974 Z M 13.899 4.725 L 13.74 4.725 L 13.74 5.967 L 13.899 5.967 L 13.899 4.725 Z M 11.987 4.725 L 11.827 4.725 L 11.827 5.967 L 11.987 5.967 L 11.987 4.725 Z M 14.218 4.477 L 14.059 4.477 L 14.059 6.216 L 14.218 6.216 L 14.218 4.477 Z M 12.624 4.477 L 12.465 4.477 L 12.465 6.216 L 12.624 6.216 L 12.624 4.477 Z M 12.943 3.98 L 12.784 3.98 L 12.784 6.464 L 12.943 6.464 L 12.943 3.98 Z M 13.581 3.98 L 13.421 3.98 L 13.421 6.464 L 13.581 6.464 L 13.581 3.98 Z M 13.262 3.483 L 13.102 3.483 L 13.102 6.961 L 13.262 6.961 L 13.262 3.483 Z" style=""/>
                    <path d="M 14.849 5.47 L 14.69 5.47 L 14.69 5.222 L 14.849 5.222 L 14.849 5.47 Z M 18.356 5.222 L 18.196 5.222 L 18.196 5.47 L 18.356 5.47 L 18.356 5.222 Z M 15.168 4.974 L 15.009 4.974 L 15.009 5.719 L 15.168 5.719 L 15.168 4.974 Z M 18.037 4.974 L 17.877 4.974 L 17.877 5.719 L 18.037 5.719 L 18.037 4.974 Z M 15.806 4.974 L 15.646 4.974 L 15.646 5.719 L 15.806 5.719 L 15.806 4.974 Z M 17.399 4.725 L 17.24 4.725 L 17.24 5.967 L 17.399 5.967 L 17.399 4.725 Z M 15.487 4.725 L 15.327 4.725 L 15.327 5.967 L 15.487 5.967 L 15.487 4.725 Z M 17.718 4.477 L 17.559 4.477 L 17.559 6.216 L 17.718 6.216 L 17.718 4.477 Z M 16.124 4.477 L 15.965 4.477 L 15.965 6.216 L 16.124 6.216 L 16.124 4.477 Z M 16.443 3.98 L 16.284 3.98 L 16.284 6.464 L 16.443 6.464 L 16.443 3.98 Z M 17.081 3.98 L 16.921 3.98 L 16.921 6.464 L 17.081 6.464 L 17.081 3.98 Z M 16.762 3.483 L 16.602 3.483 L 16.602 6.961 L 16.762 6.961 L 16.762 3.483 Z" style=""/>
                    <path d="M 18.355 5.47 L 18.196 5.47 L 18.196 5.222 L 18.355 5.222 L 18.355 5.47 Z M 21.862 5.222 L 21.702 5.222 L 21.702 5.47 L 21.862 5.47 L 21.862 5.222 Z M 18.674 4.974 L 18.515 4.974 L 18.515 5.719 L 18.674 5.719 L 18.674 4.974 Z M 21.543 4.974 L 21.383 4.974 L 21.383 5.719 L 21.543 5.719 L 21.543 4.974 Z M 19.312 4.974 L 19.152 4.974 L 19.152 5.719 L 19.312 5.719 L 19.312 4.974 Z M 20.905 4.725 L 20.746 4.725 L 20.746 5.967 L 20.905 5.967 L 20.905 4.725 Z M 18.993 4.725 L 18.833 4.725 L 18.833 5.967 L 18.993 5.967 L 18.993 4.725 Z M 21.224 4.477 L 21.065 4.477 L 21.065 6.216 L 21.224 6.216 L 21.224 4.477 Z M 19.63 4.477 L 19.471 4.477 L 19.471 6.216 L 19.63 6.216 L 19.63 4.477 Z M 19.949 3.98 L 19.79 3.98 L 19.79 6.464 L 19.949 6.464 L 19.949 3.98 Z M 20.587 3.98 L 20.427 3.98 L 20.427 6.464 L 20.587 6.464 L 20.587 3.98 Z M 20.268 3.483 L 20.108 3.483 L 20.108 6.961 L 20.268 6.961 L 20.268 3.483 Z" style=""/>
                    <path d="M 21.862 5.463 L 21.703 5.463 L 21.703 5.215 L 21.862 5.215 L 21.862 5.463 Z M 25.369 5.215 L 25.209 5.215 L 25.209 5.463 L 25.369 5.463 L 25.369 5.215 Z M 22.181 4.967 L 22.022 4.967 L 22.022 5.712 L 22.181 5.712 L 22.181 4.967 Z M 25.05 4.967 L 24.89 4.967 L 24.89 5.712 L 25.05 5.712 L 25.05 4.967 Z M 22.819 4.967 L 22.659 4.967 L 22.659 5.712 L 22.819 5.712 L 22.819 4.967 Z M 24.412 4.718 L 24.253 4.718 L 24.253 5.96 L 24.412 5.96 L 24.412 4.718 Z M 22.5 4.718 L 22.34 4.718 L 22.34 5.96 L 22.5 5.96 L 22.5 4.718 Z M 24.731 4.47 L 24.572 4.47 L 24.572 6.209 L 24.731 6.209 L 24.731 4.47 Z M 23.137 4.47 L 22.978 4.47 L 22.978 6.209 L 23.137 6.209 L 23.137 4.47 Z M 23.456 3.973 L 23.297 3.973 L 23.297 6.457 L 23.456 6.457 L 23.456 3.973 Z M 24.094 3.973 L 23.934 3.973 L 23.934 6.457 L 24.094 6.457 L 24.094 3.973 Z M 23.775 3.476 L 23.615 3.476 L 23.615 6.954 L 23.775 6.954 L 23.775 3.476 Z" style=""/>
                    <path d="M 25.375 5.463 L 25.216 5.463 L 25.216 5.215 L 25.375 5.215 L 25.375 5.463 Z M 28.882 5.215 L 28.722 5.215 L 28.722 5.463 L 28.882 5.463 L 28.882 5.215 Z M 25.694 4.967 L 25.535 4.967 L 25.535 5.712 L 25.694 5.712 L 25.694 4.967 Z M 28.563 4.967 L 28.403 4.967 L 28.403 5.712 L 28.563 5.712 L 28.563 4.967 Z M 26.332 4.967 L 26.172 4.967 L 26.172 5.712 L 26.332 5.712 L 26.332 4.967 Z M 27.925 4.718 L 27.766 4.718 L 27.766 5.96 L 27.925 5.96 L 27.925 4.718 Z M 26.013 4.718 L 25.853 4.718 L 25.853 5.96 L 26.013 5.96 L 26.013 4.718 Z M 28.244 4.47 L 28.085 4.47 L 28.085 6.209 L 28.244 6.209 L 28.244 4.47 Z M 26.65 4.47 L 26.491 4.47 L 26.491 6.209 L 26.65 6.209 L 26.65 4.47 Z M 26.969 3.973 L 26.81 3.973 L 26.81 6.457 L 26.969 6.457 L 26.969 3.973 Z M 27.607 3.973 L 27.447 3.973 L 27.447 6.457 L 27.607 6.457 L 27.607 3.973 Z M 27.288 3.476 L 27.128 3.476 L 27.128 6.954 L 27.288 6.954 L 27.288 3.476 Z" style=""/>
                    <path d="M 28.882 5.463 L 28.723 5.463 L 28.723 5.215 L 28.882 5.215 L 28.882 5.463 Z M 32.389 5.215 L 32.229 5.215 L 32.229 5.463 L 32.389 5.463 L 32.389 5.215 Z M 29.201 4.967 L 29.042 4.967 L 29.042 5.712 L 29.201 5.712 L 29.201 4.967 Z M 32.07 4.967 L 31.91 4.967 L 31.91 5.712 L 32.07 5.712 L 32.07 4.967 Z M 29.839 4.967 L 29.679 4.967 L 29.679 5.712 L 29.839 5.712 L 29.839 4.967 Z M 31.432 4.718 L 31.273 4.718 L 31.273 5.96 L 31.432 5.96 L 31.432 4.718 Z M 29.52 4.718 L 29.36 4.718 L 29.36 5.96 L 29.52 5.96 L 29.52 4.718 Z M 31.751 4.47 L 31.592 4.47 L 31.592 6.209 L 31.751 6.209 L 31.751 4.47 Z M 30.157 4.47 L 29.998 4.47 L 29.998 6.209 L 30.157 6.209 L 30.157 4.47 Z M 30.476 3.973 L 30.317 3.973 L 30.317 6.457 L 30.476 6.457 L 30.476 3.973 Z M 31.114 3.973 L 30.954 3.973 L 30.954 6.457 L 31.114 6.457 L 31.114 3.973 Z M 30.795 3.476 L 30.635 3.476 L 30.635 6.954 L 30.795 6.954 L 30.795 3.476 Z" style=""/>
                    <path d="M 32.395 5.469 L 32.236 5.469 L 32.236 5.221 L 32.395 5.221 L 32.395 5.469 Z M 35.902 5.221 L 35.742 5.221 L 35.742 5.469 L 35.902 5.469 L 35.902 5.221 Z M 32.714 4.973 L 32.555 4.973 L 32.555 5.718 L 32.714 5.718 L 32.714 4.973 Z M 35.583 4.973 L 35.423 4.973 L 35.423 5.718 L 35.583 5.718 L 35.583 4.973 Z M 33.352 4.973 L 33.192 4.973 L 33.192 5.718 L 33.352 5.718 L 33.352 4.973 Z M 34.945 4.724 L 34.786 4.724 L 34.786 5.966 L 34.945 5.966 L 34.945 4.724 Z M 33.033 4.724 L 32.873 4.724 L 32.873 5.966 L 33.033 5.966 L 33.033 4.724 Z M 35.264 4.476 L 35.105 4.476 L 35.105 6.215 L 35.264 6.215 L 35.264 4.476 Z M 33.67 4.476 L 33.511 4.476 L 33.511 6.215 L 33.67 6.215 L 33.67 4.476 Z M 33.989 3.979 L 33.83 3.979 L 33.83 6.463 L 33.989 6.463 L 33.989 3.979 Z M 34.627 3.979 L 34.467 3.979 L 34.467 6.463 L 34.627 6.463 L 34.627 3.979 Z M 34.308 3.482 L 34.148 3.482 L 34.148 6.96 L 34.308 6.96 L 34.308 3.482 Z" style=""/>
                    <path d="M 35.908 5.469 L 35.749 5.469 L 35.749 5.221 L 35.908 5.221 L 35.908 5.469 Z M 39.415 5.221 L 39.255 5.221 L 39.255 5.469 L 39.415 5.469 L 39.415 5.221 Z M 36.227 4.973 L 36.068 4.973 L 36.068 5.718 L 36.227 5.718 L 36.227 4.973 Z M 39.096 4.973 L 38.936 4.973 L 38.936 5.718 L 39.096 5.718 L 39.096 4.973 Z M 36.865 4.973 L 36.705 4.973 L 36.705 5.718 L 36.865 5.718 L 36.865 4.973 Z M 38.458 4.724 L 38.299 4.724 L 38.299 5.966 L 38.458 5.966 L 38.458 4.724 Z M 36.546 4.724 L 36.386 4.724 L 36.386 5.966 L 36.546 5.966 L 36.546 4.724 Z M 38.777 4.476 L 38.618 4.476 L 38.618 6.215 L 38.777 6.215 L 38.777 4.476 Z M 37.183 4.476 L 37.024 4.476 L 37.024 6.215 L 37.183 6.215 L 37.183 4.476 Z M 37.502 3.979 L 37.343 3.979 L 37.343 6.463 L 37.502 6.463 L 37.502 3.979 Z M 38.14 3.979 L 37.98 3.979 L 37.98 6.463 L 38.14 6.463 L 38.14 3.979 Z M 37.821 3.482 L 37.661 3.482 L 37.661 6.96 L 37.821 6.96 L 37.821 3.482 Z" style=""/>
                    <path d="M 39.42 5.463 L 39.261 5.463 L 39.261 5.215 L 39.42 5.215 L 39.42 5.463 Z M 42.927 5.215 L 42.767 5.215 L 42.767 5.463 L 42.927 5.463 L 42.927 5.215 Z M 39.739 4.967 L 39.58 4.967 L 39.58 5.712 L 39.739 5.712 L 39.739 4.967 Z M 42.608 4.967 L 42.448 4.967 L 42.448 5.712 L 42.608 5.712 L 42.608 4.967 Z M 40.377 4.967 L 40.217 4.967 L 40.217 5.712 L 40.377 5.712 L 40.377 4.967 Z M 41.97 4.718 L 41.811 4.718 L 41.811 5.96 L 41.97 5.96 L 41.97 4.718 Z M 40.058 4.718 L 39.898 4.718 L 39.898 5.96 L 40.058 5.96 L 40.058 4.718 Z M 42.289 4.47 L 42.13 4.47 L 42.13 6.209 L 42.289 6.209 L 42.289 4.47 Z M 40.695 4.47 L 40.536 4.47 L 40.536 6.209 L 40.695 6.209 L 40.695 4.47 Z M 41.014 3.973 L 40.855 3.973 L 40.855 6.457 L 41.014 6.457 L 41.014 3.973 Z M 41.652 3.973 L 41.492 3.973 L 41.492 6.457 L 41.652 6.457 L 41.652 3.973 Z M 41.333 3.476 L 41.173 3.476 L 41.173 6.954 L 41.333 6.954 L 41.333 3.476 Z" style=""/>
                    <path d="M 42.926 5.456 L 42.767 5.456 L 42.767 5.208 L 42.926 5.208 L 42.926 5.456 Z M 46.433 5.208 L 46.273 5.208 L 46.273 5.456 L 46.433 5.456 L 46.433 5.208 Z M 43.245 4.96 L 43.086 4.96 L 43.086 5.705 L 43.245 5.705 L 43.245 4.96 Z M 46.114 4.96 L 45.954 4.96 L 45.954 5.705 L 46.114 5.705 L 46.114 4.96 Z M 43.883 4.96 L 43.723 4.96 L 43.723 5.705 L 43.883 5.705 L 43.883 4.96 Z M 45.476 4.711 L 45.317 4.711 L 45.317 5.953 L 45.476 5.953 L 45.476 4.711 Z M 43.564 4.711 L 43.404 4.711 L 43.404 5.953 L 43.564 5.953 L 43.564 4.711 Z M 45.795 4.463 L 45.636 4.463 L 45.636 6.202 L 45.795 6.202 L 45.795 4.463 Z M 44.201 4.463 L 44.042 4.463 L 44.042 6.202 L 44.201 6.202 L 44.201 4.463 Z M 44.52 3.966 L 44.361 3.966 L 44.361 6.45 L 44.52 6.45 L 44.52 3.966 Z M 45.158 3.966 L 44.998 3.966 L 44.998 6.45 L 45.158 6.45 L 45.158 3.966 Z M 44.839 3.469 L 44.679 3.469 L 44.679 6.947 L 44.839 6.947 L 44.839 3.469 Z" style=""/>
                </svg>
            </div>
            <button class="post-message sticky self-end flex outline-none text-secondary p-1"
                    @onclick="_ => Post()">
                <svg class="w-8 h-8 text-secondary fill-current" viewBox="-4 -4 32 32" id="icon" xmlns="http://www.w3.org/2000/svg">
                    <path d="M24 0l-6 22-8.129-7.239 7.802-8.234-10.458 7.227-7.215-1.754 24-12zm-15 16.668v7.332l3.258-4.431-3.258-2.901z"/>
                </svg>
            </button>
        </div>
        <div class="block flex flex-1 flex-row justify-center outline-none items-end">
            <div class="sticky bottom-0 flex flex-row justify-center items-center max-h-10 bg-accent rounded-md py-2">
                <div class="chat-control-button language-button p-1 w-1/2">
                    <ChatLanguageToggle/>
                </div>
                <div class="chat-control-button recorder-button w-1/2 flex">
                    @*
                        new EventCallback<bool>(null, ...) prevents StateHasChanged call
                        and thus re-rendering of a parent (this) component.
                    *@
                    <AudioRecorder ChatId="@Chat.Id"
                                   RecordingStateChanged="@(new EventCallback<bool>(null, RecordingStateChanged))"/>
                </div>
                @if (RealtimePlayer != null!) {
                    <div class="chat-control-button player-button w-1/2">
                        <ChatPlayerToggle Player="RealtimePlayer"/>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private static string? _class;

    [Inject] private ChatPlayers ChatPlayers { get; set; } = null!;
    private ElementReference EditorRef { get; set; }
    private IJSObjectReference JSRef { get; set; } = null!;
    private DotNetObjectReference<IChatMessageEditorBackend> BlazorRef { get; set; } = null!;
    private RealtimeChatPlayer RealtimePlayer { get; set; } = null!;
    // TODO(AY): Add some store that remembers typed messages
    private string Text { get; set; } = "";

    [CascadingParameter]
    public Chat Chat { get; set; } = null!;

    protected override async Task OnInitializedAsync()
        => RealtimePlayer = await ChatPlayers.GetRealtimePlayer(Chat.Id);

    public async ValueTask DisposeAsync()
    {
        if (JSRef != null!)
            await JSRef.DisposeSilentlyAsync().ConfigureAwait(true);
        // ReSharper disable once ConstantConditionalAccessQualifier
        BlazorRef?.Dispose();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if (firstRender) {
            BlazorRef = DotNetObjectReference.Create<IChatMessageEditorBackend>(this);
            JSRef = await _js.InvokeAsync<IJSObjectReference>(
                $"{ChatBlazorUIModule.ImportName}.ChatMessageEditor.create",
                EditorRef, BlazorRef
                ).ConfigureAwait(true);
            await JSRef.InvokeVoidAsync("setText", Text).ConfigureAwait(true);
        }
    }

    [JSInvokable]
    public void UpdateClientSideState(string? text) {
        Text = text ?? "";
    }

    [JSInvokable]
    public async Task Post(string? text = null)
    {
        if (text != null)
            Text = text;
        if (Text.IsNullOrEmpty())
            return;

        var (_, ce) = await _cmd.Run(new IChats.CreateEntryCommand(_session, Chat.Id, Text)).ConfigureAwait(true);
        if (!ce.IsFailed)
            await JSRef.InvokeVoidAsync("setText", "").ConfigureAwait(true);
    }

    private Task RecordingStateChanged(bool isRecording) {
        if (isRecording == false)
            return Task.CompletedTask;
        var isPlaying = RealtimePlayer.Playback is { IsStopped: false };
        if (isPlaying)
            return Task.CompletedTask;
        // We don't need to await for this here
        _ = RealtimePlayer.Play(_clocks.SystemClock.Now);
        return Task.CompletedTask;
    }
}
