@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<RelatedChatEntryPanel.Model?>
@{
    var m = State.Value;
    if (m == null)
        return;
}

<div class="related-chat-entry-panel">
    <RelatedChatEntry Entry="@m.Entry" Kind="@m.Kind" IsOwn="@m.IsOwn"/>
</div>

@code {
    [Inject] private ChatUIHub Hub { get; set; } = null!;
    private Session Session => Hub.Session();
    private IChats Chats => Hub.Chats;
    private IAuthors Authors => Hub.Authors;
    private ChatEditorUI ChatEditorUI => Hub.ChatEditorUI;

    protected override async Task<Model?> ComputeState(CancellationToken cancellationToken) {
        var relatedChatEntry = await ChatEditorUI.RelatedChatEntry.Use(cancellationToken);
        if (relatedChatEntry is not { } vRelatedChatEntry)
            return null;

        var entryId = vRelatedChatEntry.Id;
        var chatId = entryId.ChatId;
        var ownAuthor = await Authors.GetOwn(Session, chatId, cancellationToken);
        var entry = await Chats.GetEntry(Session, entryId, cancellationToken);
        if (entry == null) {
            return null;
        }

        return new (entry, vRelatedChatEntry.Kind, ownAuthor?.Id == entry.AuthorId);
    }

    // Nested types

    public sealed record Model(
        ChatEntry Entry,
        RelatedEntryKind Kind,
        bool IsOwn);
}
