@using Castle.Components.DictionaryAdapter
@{
    var themes = new string[] { "Gray", "Blue", "Green" };
}

<div class="flex-shrink-0 flex">
    <div class="flex items-center">
        <div class="relative">
            <div class="relative">
                <div class="absolute right-0 mt-10 w-48 rounded-md @(_isOpen ? "" : "hidden")">
                    <div class="py-1 rounded-md bg-white shadow-lg mb-1 relative z-40">
                        @foreach (var theme in themes) {
                            <a href="#" @onclick="@(_ => OnChangeTheme.InvokeAsync(theme))" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-200">
                                @theme
                            </a>
                        }
                    </div>
                </div>
            </div>
            <div>
                <button @onclick="() => _isOpen = !_isOpen" class="inline-flex justify-center w-full max-w-xs px-4 py-2 text-sm font-medium leading-5 text-gray-700 transition duration-150 ease-in-out bg-gray-50 border border-gray-300 rounded-md hover:text-gray-500 outline-none active:bg-gray-50 active:text-gray-800" type="button" aria-haspopup="true" aria-expanded="true" aria-controls="account-dropdown-items">
                    <span>Theme</span>
                    <svg width="16" height="16" viewBox="0 -6 20 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.34317 7.75732L4.92896 9.17154L12 16.2426L19.0711 9.17157L17.6569 7.75735L12 13.4142L6.34317 7.75732Z" fill="currentColor"/></svg>
                </button>
            </div>
        </div>
    </div>
</div>
<div>
    <h5>CurrentTheme: @CurrentTheme</h5>
</div>

@code{
    private bool _isOpen = false;
    [Parameter]
    public string? CurrentTheme { get; set; }
    [Parameter]
    public EventCallback<string> OnChangeTheme { get; set; }
}
