@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<bool>
@{
    var isRecording = State.Value;
    var cls = $"recording-in-chat {(isRecording ? "on" : "off")} {Class}";
}

@if (isRecording) {
    <Tooltip Text="Stop" Position="TooltipPosition.Top">
        <ButtonRound
            Class="@cls"
            Click="_ => ChatUI.SetRecordingState(Symbol.Empty)">
            <i class="icon-mic text-2xl"></i>
        </ButtonRound>
    </Tooltip>
} else {
    <Tooltip Text="Start" Position="TooltipPosition.Top">
        <ButtonRound
            Class="@cls"
            Click="_ => ChatUI.SetRecordingState(ChatId)">
            <i class="icon-mic text-2xl"></i>
        </ButtonRound>
    </Tooltip>
}

@code {
    [Inject] private ChatUI ChatUI { get; init; } = null!;

    [Parameter] public string Class { get; set; } = "";
    [Parameter, EditorRequired] public string ChatId { get; set; } = "";

    protected override ComputedState<bool>.Options GetStateOptions()
        => new() { UpdateDelayer = UpdateDelayer.ZeroDelay };

    protected override Task<bool> ComputeState(CancellationToken cancellationToken) => ChatUI.IsRecording(ChatId);

}
