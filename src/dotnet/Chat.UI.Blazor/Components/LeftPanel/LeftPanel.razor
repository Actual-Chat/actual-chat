@namespace ActualChat.Chat.UI.Blazor.Components
@using ActualChat.UI.Blazor.Components.SideNav
@implements IDisposable

<SideNav
    Side="SideNavSide.Left"
    IsOpen="@NavbarUI.IsVisible.Value"
    VisibilityChanged="@(isOpen => NavbarUI.SetIsVisible(isOpen))">
    <div class="flex-x h-full w-full bg-04">
        <ThinLeftPanel/>
        <WideLeftPanel/>
    </div>
</SideNav>

@code {
    [Inject] private NavbarUI NavbarUI { get; init; } = null!;

    protected override void OnInitialized()
        => NavbarUI.VisibilityChanged += OnNavbarVisibilityChanged;

    public void Dispose()
        => NavbarUI.VisibilityChanged -= OnNavbarVisibilityChanged;

    private void OnNavbarVisibilityChanged(object? sender, EventArgs e)
        => InvokeAsync(StateHasChanged);
}
