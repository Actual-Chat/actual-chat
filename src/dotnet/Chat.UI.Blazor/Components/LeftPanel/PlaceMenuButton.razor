@namespace ActualChat.Chat.UI.Blazor.Components
@using ActualChat.Contacts
@inherits ComputedStateComponent<PlaceMenuButton.Model>
@{
    var m = State.Value;
    if (!m.IsPlaceMember)
        return;
}

<div
    class="menu"
    data-menu="@(MenuRef.New<PlaceMenu>(PlaceId).ToString())"
    data-menu-trigger="@MenuTrigger.Primary"
    data-menu-placement="@(FloatingPosition.RightStart.ToPositionString())">

    <HeaderButton>
        <i class="icon-more-vertical text-2xl"></i>
    </HeaderButton>
</div>

@code {
    [Inject] private ChatUIHub Hub { get; set; } = null!;
    private Session Session => Hub.Session();
    private IContacts Contacts => Hub.Contacts;

    [Parameter, EditorRequired] public PlaceId PlaceId { get; set; }

    protected override ComputedState<Model>.Options GetStateOptions()
        => new() {
            InitialValue = new Model(false),
            Category = GetStateCategory(),
        };

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var places = await Contacts.ListPlaceIds(Session, cancellationToken);
        var isMember = places.Contains(PlaceId);
        return new Model(isMember);
    }

    public record Model(bool IsPlaceMember);
}
