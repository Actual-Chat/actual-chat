@namespace ActualChat.Chat.UI.Blazor.Components
@implements IDisposable
@using ActualChat.UI.Blazor.Services
@using ActualChat.Chat.UI.Blazor.Events

<OnUIEvent TEvent="@SelectedChatChangedEvent" Handler="@OnSelectedChatChangedEvent" />
<div class="left-panel-content">
    <div class="c-banner">
        <DownloadAppBanner CanBeClosed="true"/>
    </div>
    <div class="c-search">
        <SearchBox
            @ref="_searchBoxRef"
            Placeholder="Find chat..."
            TextChanged="OnSearchBoxTextChanged"/>
    </div>
    <NavbarContent/>
    @if (ScreenSize.IsNarrow()) {
        <div class="c-title">
            <div class="text-02 text-title-1">@NavbarUI.SelectedGroupTitle</div>
            <div class="flex grow"></div>
            <div class="flex">
                <HeaderButton Click="OnHideLeftPanelClick">
                    <i class="icon-arrow-right text-2xl"></i>
                </HeaderButton>
            </div>
        </div>
    }
</div>

@code {
    SearchBox? _searchBoxRef = null;

    [Inject] private NavbarUI NavbarUI { get; init; } = null!;
    [Inject] private PanelsUI PanelsUI { get; init; } = null!;
    [Inject] private ModalUI ModalUI { get; init; } = null!;
    [Inject] private SearchUI SearchUI { get; init; } = null!;

    [CascadingParameter] ScreenSize ScreenSize { get; set; }

    protected override void OnInitialized()
        => NavbarUI.SelectedGroupChanged += OnNavbarSelectedGroupChanged;

    public void Dispose()
        => NavbarUI.SelectedGroupChanged -= OnNavbarSelectedGroupChanged;

    private void OnHideLeftPanelClick()
        => PanelsUI.Left.SetIsVisible(false);

    private void OnSearchBoxTextChanged(string text)
        => SearchUI.Text.Value = text;

    private void OnNavbarSelectedGroupChanged(object? s, EventArgs e)
        => InvokeAsync(StateHasChanged);

    private async Task OnSelectedChatChangedEvent(SelectedChatChangedEvent @event, CancellationToken cancellationToken) {
        if (_searchBoxRef != null)
            await _searchBoxRef.Cancel();
    }
}
