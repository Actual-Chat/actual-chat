@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<ChatPlaybackToggles.Model>
@{
    var m = State.ValueOrDefault ?? Model.None;
    var playHistoricalClass = m.IsPlayingHistorical ? " opacity-60" : "";
    var playActiveClass = "play-active " + (m.IsPlayingActive ? "on" : "off") + playHistoricalClass;
    var playPinnedClass = "play-pinned " + (m.IsPlayingPinned ? "on" : "off") + playHistoricalClass;
}
<div class="chat-playback-toggles flex-x rounded-md bg-accent">
    <div class="chat-header-button -mr-1">
        <ButtonSquare Click="@(_ => ChatUI.IsPlayingPinned.Value = !m.IsPlayingPinned)" Class="@playPinnedClass">
            <svg class="fill-current w-8 h-8" xmlns="http://www.w3.org/2000/svg" viewBox="-4 -4 32 32">
                <path d="M 11 17 L 13 17 L 13 22 L 11 24 L 11 17 Z M 6 15 C 6 8.291 9.429 8.771 9.429 5 C 9.429 2.097 7.068 1.911 7 0 L 17 0 C 16.931 1.911 14.571 2.097 14.571 5 C 14.571 5.248 14.586 5.478 14.614 5.692 C 12.928 7.195 11.867 9.383 11.867 11.818 C 11.867 12.946 12.095 14.021 12.507 15 L 6 15 Z M 20.458 4.909 C 16.576 4.909 13.428 8.057 13.428 11.939 C 13.428 15.822 16.576 18.97 20.458 18.97 C 24.341 18.97 27.489 15.822 27.489 11.939 C 27.489 8.057 24.341 4.909 20.458 4.909 Z M 24.56 13.111 L 21.63 13.111 L 21.63 16.041 L 19.287 16.041 L 19.287 13.111 L 16.357 13.111 L 16.357 10.767 L 19.287 10.767 L 19.287 7.838 L 21.63 7.838 L 21.63 10.767 L 24.56 10.767 L 24.56 13.111 Z"/>
            </svg>
        </ButtonSquare>
    </div>
    <div class="chat-header-button">
        <ButtonSquare Click="@(_ => ChatUI.IsPlayingActive.Value = !m.IsPlayingActive)" Class="@playActiveClass">
            <svg class="fill-current w-8 h-8" xmlns="http://www.w3.org/2000/svg" viewBox="-4 -4 32 32">
                <path d="M22 22.966v1.034h-20v-1.034c0-2.1.166-3.312 2.648-3.886 2.804-.647 5.572-1.227 4.241-3.682-3.943-7.274-1.124-11.398 3.111-11.398 4.152 0 7.043 3.972 3.11 11.398-1.292 2.44 1.375 3.02 4.241 3.682 2.483.573 2.649 1.786 2.649 3.886zm-10-21.229c2.228-.004 3.948 1.329 4.492 3.513h1.212c-.528-2.963-2.624-5.25-5.704-5.25s-5.176 2.287-5.704 5.25h1.212c.544-2.184 2.264-3.518 4.492-3.513zm5.542 10.263c1.608 0 2.458-1.507 2.458-3.01 0-1.497-.842-2.99-2.755-2.99.832 1.603.925 3.656.297 6zm-11.112 0c-.632-2.331-.534-4.384.313-6-1.913 0-2.743 1.489-2.743 2.984 0 1.505.843 3.016 2.43 3.016z"/>
            </svg>
        </ButtonSquare>
    </div>
</div>

@code {
    [Inject] private ChatPlayers ChatPlayers { get; init; } = null!;
    [Inject] private ChatUI ChatUI { get; init; } = null!;

    protected override ComputedState<Model>.Options GetStateOptions()
        => new() {
            InitialValue = Model.None,
            UpdateDelayer = UpdateDelayer.ZeroDelay,
        };

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var activeChatId = await ChatUI.ActiveChatId.Use(cancellationToken).ConfigureAwait(false);
        var recordingChatId = await ChatUI.RecordingChatId.Use(cancellationToken).ConfigureAwait(false);

        var isPlayingActive = await ChatUI.IsPlayingActive.Use(cancellationToken).ConfigureAwait(false);
        var isPlayingPinned = await ChatUI.IsPlayingPinned.Use(cancellationToken).ConfigureAwait(false);

        var chatPlaybackState = await ChatPlayers.ChatPlaybackState.Use(cancellationToken).ConfigureAwait(false);
        var isPlayingHistorical = chatPlaybackState is HistoricalChatPlaybackState;

        return new Model() {
            IsPlayingActive = isPlayingActive,
            IsPlayingPinned = isPlayingPinned,
            IsPlayingHistorical = isPlayingHistorical,
        };
    }

    public sealed record Model {
        public static Model None { get; } = new();

        public bool IsPlayingActive { get; init; }
        public bool IsPlayingPinned { get; init; }
        public bool IsPlayingHistorical { get; init; }
    };
}
