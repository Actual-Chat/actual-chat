@namespace ActualChat.Chat.UI.Blazor.Components
@inherits MenuBase

<div class="sort-menu">
    <div class="p-2 text-02 font-semibold">
        Sort by:
    </div>
    <MenuEntry
        Icon="icon-sort-by-recent"
        Text="Recency of anyone's activity"
        Click="@(() => OnClick(ChatListOrder.ByLastEventTime))">
    </MenuEntry>
    <MenuEntry
        Icon="icon-sort-by-me"
        Text="Recency of your own activity"
        Click="@(() => OnClick(ChatListOrder.ByOwnUpdateTime))">
    </MenuEntry>
    <MenuEntry
        Icon="icon-sort-by-message"
        Text="Count of unread messages"
        Click="@(() => OnClick(ChatListOrder.ByUnreadCount))">
    </MenuEntry>
    <MenuEntry
        Icon="icon-sort-by-alphabet"
        Text="Alphabet"
        Click="@(() => OnClick(ChatListOrder.ByAlphabet))">
    </MenuEntry>
</div>

@code {
    private PlaceId _placeId;

    [Inject] private ChatListUI ChatListUI { get; init; } = null!;

    protected override void OnParametersSet() {
        if (Arguments is not [ var placeSid ])
            throw new ArgumentOutOfRangeException(nameof(Arguments));

        _placeId = new PlaceId(placeSid);
    }

    private async Task OnClick(ChatListOrder order) {
        using var settingsState = await ChatListUI.LeaseSettingsState(_placeId, default).ConfigureAwait(false);
        settingsState.Set(order, static (order1, r) => {
            var settings = r.Value;
            if (settings.Order != order1)
                settings = settings with { Order = order1 };
            return settings;
        });
    }
}
