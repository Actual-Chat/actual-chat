@inherits ComputedStateComponent<ChatAuthorList.Model>

@{
    var model = State.ValueOrDefault ?? new();
}

<div class="flex-y w-full space-y-3">
    <h3 class="text-secondary">Users</h3>
    @foreach (var authorId in model.AuthorIds) {
        <ChatAuthorBadge AuthorId="@authorId" Size="AuthorBadgeSize.Size12"
                         TextClass="text-sm font-medium text-primary-muted select-none hover:text-primary" />
    }
</div>

@code {
    [Inject] private IChatAuthors Authors { get; init; } = null!;
    [Inject] private Session Session { get; init; } = null!;

    [CascadingParameter] public Chat Chat { get; set; } = null!;

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var authorIds = await Authors.GetAuthorIds(Session, Chat.Id, cancellationToken);
        return new() {
            AuthorIds = authorIds,
        };
    }

    public sealed class Model {
        public ImmutableArray<string> AuthorIds { get; init; } = ImmutableArray<string>.Empty;
    }
}
