@using ActualChat.Contacts
@inherits FusionComponentBase
@{
    var isUnavailable = ReferenceEquals(Chat, Chat.None);
    var isSelectChat = ReferenceEquals(Chat, ChatUI.NoChatSelected);
}
<div class="flex-x justify-items-stretch items-center px-2 min-h-14 border-b border-bg-04">
    <div>
        <ButtonRound Click="OnOpenLeftPanelClick" Class="md:!hidden transparent">
            <i class="icon-arrow-left text-2xl"></i>
        </ButtonRound>
    </div>
    <div class="flex-auto flex-x justify-between items-center grow gap-x-2 py-0.5 md:pl-2 overflow-hidden">
        @if (!isSelectChat) {
            <ChatIcon Chat="@Chat"/>
            <div class="flex-1 flex-x chat-header-title select-text no-highlight truncate">
                <div class="flex-y self-center truncate">
                    <div class="text-01 font-medium truncate">@Chat.Title</div>
                    <div class="text-icons-02">@_subTitle</div>
                </div>
                <div class="flex-1"></div>
                <div class="flex-none flex-x items-center gap-x-3 px-0.5">
                    <ChatActivities Chat="@Chat"/>
                </div>
            </div>
        }
    </div>
    @if (!isUnavailable && !isSelectChat) {
        <div class="chat-header-control-panel ml-2">
            <div class="flex-x gap-x-1">
                <ChatSearch Chat="@Chat"/>
            </div>
            <ChatHeaderRightPanelToggle Click="OnSwitchRightPanelClick"/>
        </div>
    }
</div>

@code {
    private string _subTitle = " ";

    [Inject] private Session Session { get; init; } = null!;
    [Inject] private ModalUI ModalUI { get; init; } = null!;
    [Inject] private PanelsUI PanelsUI { get; init; } = null!;

    [Parameter, EditorRequired] public Chat Chat { get; set; } = null!;

    private void OnSwitchRightPanelClick()
        => PanelsUI.Right.Toggle();

    private void OnOpenLeftPanelClick()
        => PanelsUI.Left.SetIsVisible(true);
}
