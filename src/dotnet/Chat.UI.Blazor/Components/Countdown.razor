@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<string>
@{
    var m = State.Value;
    if (m.IsNullOrEmpty())
        return;
}

<span class="@Class">@m</span>

@code {
    [Inject] private MomentClockSet Clocks { get; init; } = null!;

    [Parameter, EditorRequired] public Moment StopAt { get; set; }
    [Parameter] public string Format { get; set; } = "mm\\:ss";
    [Parameter] public TimeSpan UpdatePeriod { get; set; } = TimeSpan.FromSeconds(0.9);
    [Parameter] public string Class { get; set; } = "";

    protected override Task<string> ComputeState(CancellationToken cancellationToken) {
        var remaining = (StopAt - Clocks.CpuClock.Now).Positive();
        var result = remaining.ToString(Format);
        if (remaining > TimeSpan.Zero)
            Computed.GetCurrent()?.Invalidate(UpdatePeriod, true);
        return Task.FromResult(result);
    }
}
