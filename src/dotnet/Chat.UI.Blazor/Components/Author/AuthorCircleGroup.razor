@namespace ActualChat.Chat.UI.Blazor.Components
@inherits FusionComponentBase
@{
    var authorSids = AuthorSids;
    if (authorSids.Count == 0)
        return;
    var maxLength = MaxIconCount > authorSids.Count ? authorSids.Count : MaxIconCount;
}

<div class="author-circle-group @Class">
    @{
        var zIndex = 1;
        for (var i = 0; i < maxLength; i++) {
            var authorSid = authorSids[i];
            <div class="author-circle-group-item" style="z-index: @zIndex;">
                <AuthorCircle AuthorSid="@authorSid" Size="@Size" />
            </div>
            zIndex++;
        }
        if (authorSids.Count > MaxIconCount) {
            <div class="author-circle-group-item" style="z-index: @(maxLength + 1);">
                @{
                    var avatarText = authorSids.Count < 11
                        ? "+" + (authorSids.Count - MaxIconCount)
                        : "...";
                }
                <AvatarText Size="@Size" Text="@avatarText" />
            </div>
        }
    }
</div>

@code {
    [Inject] private IAuthors Authors { get; init; } = null!;
    [Inject] private ChatActivity ChatActivity { get; init; } = null!;

    private IChatStreamingActivity? ChatRecordingActivity { get; set; }

    [Parameter] public string Class { get; set; } = "";
    [Parameter] public int MaxIconCount { get; set; } = 5;
    [Parameter] public SquareSize Size { get; set; } = SquareSize.Size6;
    [Parameter, ParameterComparer(typeof(ByItemParameterComparer))]
    public ApiArray<string> AuthorSids { get; set; }
}
