@namespace ActualChat.Chat.UI.Blazor.Components
@inherits AuthorBadgeBase
@{
    var m = State.Value;
    var badgeContent = ShowPresence ? @<AuthorPresenceIndicator AuthorSid="@AuthorSid" ShowRecording="true"/> : (RenderFragment?)null;
}

<AvatarBadge
    Avatar="@m.Author.Avatar"
    Size="@Size"
    IsBlurred="@IsBlurred"
    NameClass="@NameClass"
    ShowStatusText="@ShowStatusText"
    StatusText="@StatusText"
    Click="@_onClickCallback"
    BadgeContent="@badgeContent">
</AvatarBadge>

@code {
    private EventCallback _onClickCallback;

    [Parameter] public SquareSize Size { get; set; } = SquareSize.Size10;
    [Parameter] public bool IsBlurred { get; set; }
    [Parameter] public string NameClass { get; set; } = "";
    [Parameter] public EventCallback<AuthorId> Click { get; set; }
    [Parameter] public bool ShowPresence { get; set; }
    [Parameter] public bool ShowStatusText { get; set; }
    [Parameter] public string? StatusText { get; set; }

    protected override void OnInitialized() {
        _onClickCallback = NoStateHasChanged.EventCallback(OnAvatarBadgeClick);
        base.OnInitialized();
    }

    private void OnAvatarBadgeClick()
        => Click.InvokeAsync(AuthorId);
}
