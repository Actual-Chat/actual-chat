<div class="w-[200px]">
    <div class="flex flex-row">
        <ChatAuthor ChatId="@_chatId" AuthorId="@ChatAuthorId">
            <div class="author-avatar w-9 h-9 select-none bg-secondary rounded-md">
                <img src="@context.Author.Picture" alt="@context.Author.Name"/>
            </div>
        </ChatAuthor>

        <div class="ml-2 self-end">
            <ChatAuthor ChatId="@_chatId" AuthorId="@ChatAuthorId">
                <span class="text-secondary rounded">@context.Author.Name</span>
            </ChatAuthor>
        </div>
    </div>
    <div class="mt-4 hover:bg-gray-200">
        <button type="button" class="text-toggle-on" @onclick="AddContact">Add to Contacts</button>
    </div>
</div>

@code {
    private string? _chatId;
    //private Author? _author;

    //[Inject] private IChatAuthors ChatAuthors { get; set; } = null!;
    [Inject] private Session Session { get; set; } = null!;
    [Inject] private UICommandRunner Cmd { get; set; } = null!;

    [CascadingParameter]
    BlazoredModalInstance ModalInstance { get; set; } = null!;

    [Parameter]
    public string ChatId { get; set; } = "";
    [Parameter, EditorRequired]
    public string ChatAuthorId { get; set; } = "";

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();

        ModalInstance.Title = "User Info";

        if (!string.IsNullOrEmpty(ChatId))
            _chatId = ChatId;
        else if (!ActualChat.Chat.ChatAuthor.TryGetChatId(ChatAuthorId, out _chatId))
            throw new InvalidOperationException("Invalid chat author id specified");
        //_author = await ChatAuthors.GetAuthor(chatId, ChatAuthorId, true, default);

    }

    private async Task AddContact() {
        var (_, e) = await Cmd.Run(new IChats.AddToContactsCommand(Session, ChatAuthorId));
    }
}
