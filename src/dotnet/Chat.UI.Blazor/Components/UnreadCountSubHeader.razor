@namespace ActualChat.Chat.UI.Blazor.Components
@inherits ComputedStateComponent<ChatInfo?>
@{
    var count = State.LatestNonErrorValue?.UnreadCount ?? 0;
    if (count == 0)
        return;

    var messagesWord = count == 1 ? "message" : "messages";
    var text = $"{count.Format()} unread {messagesWord}";
}

<div class="unread-messages-sub-header" @onclick="@Click">
    @text
</div>

@code {
    private static IUpdateDelayer UpdateDelayer { get; } = FixedDelayer.Get(1);

    [Inject] private Session Session { get; init; } = null!;
    [Inject] private ChatUI ChatUI { get; init; } = null!;

    [CascadingParameter] public Chat Chat { get; set; } = null!;
    [Parameter] public EventCallback Click { get; set; }

    protected override ComputedState<ChatInfo?>.Options GetStateOptions() {
        return new() {
            InitialValue = ChatInfo.Loading,
            UpdateDelayer = UpdateDelayer,
        };
    }

    protected override Task<ChatInfo?> ComputeState(CancellationToken cancellationToken)
        => ChatUI.Get(Chat.Id, cancellationToken);
}
