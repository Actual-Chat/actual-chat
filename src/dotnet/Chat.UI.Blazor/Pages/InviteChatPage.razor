@page "/chat/{ChatId}/invite"

@if (_chat != null) {
    <div class="px-2 py-2">
        <div>
            <h3>Invite people to <b>"@(_chat.Title)"</b></h3>
        </div>
        <div class="mt-5">
            <div>
                <label for="Link" class="block text-sm font-medium text-secondary">Link</label>
                <div class="mt-1 flex flex-row">
                    <input type="text" value="@_link" id="Link"
                           disabled
                           class="flex-1 px-2 py-1 border border-1 border-gray-300 rounded-md focus:outline-none focus:border-sky-500"/>

                    <button type="button" @onclick="OnCopy" disabled="@_link.IsNullOrEmpty()" class="ml-2 px-2 hover:bg-accent">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24"><path d="M16 10c3.469 0 2 4 2 4s4-1.594 4 2v6h-10v-12h4zm.827-2h-6.827v16h14v-8.842c0-2.392-4.011-7.158-7.173-7.158zm-8.827 12h-6v-16h4l2.102 2h3.898l2-2h4v2.145c.656.143 1.327.391 2 .754v-4.899h-3c-1.229 0-2.18-1.084-3-2h-8c-.82.916-1.771 2-3 2h-3v20h8v-2zm2-18c.553 0 1 .448 1 1s-.447 1-1 1-1-.448-1-1 .447-1 1-1zm4 18h6v-1h-6v1zm0-2h6v-1h-6v1zm0-2h6v-1h-6v1z"/></svg>
                    </button>
                </div>
            </div>

            <div class="mt-3 flex flex-row justify-end">
                <button type="button" class="bg-blue-500 hover:bg-blue-700 text-white py-1 px-4 rounded ml-3"
                        @onclick="NavigateToChat">Cancel</button>
            </div>
        </div>
    </div>
}

@code {
    private Chat? _chat;
    private string _link = "";

    [Inject] private Session Session { get; set; } = default!;
    [Inject] private IChats Chats { get; set; } = default!;
    [Inject] private UICommandRunner Cmd { get; set; } = default!;
    [Inject] private NavigationManager Nav { get; set; } = default!;
    [Inject] private ClipboardService Clipboard { get; set; } = default!;

    [Parameter]
    public string ChatId { get; set; } = "";

    protected override async Task OnParametersSetAsync() {
        _chat = await Chats.Get(Session, ChatId, default);
        if (_chat == null) {
            Nav.Unavailable("chat");
            return;
        }

        if (_chat.IsPublic) {
            _link = Nav.BaseUri + "chat/" + _chat.Id;
        } else {
            var command = new IChats.GenerateInviteCodeCommand(Session, ChatId);
            var cmdResult = await Cmd.Run(command);
            var inviteCode = cmdResult.Result;
            _link = Nav.BaseUri + "join/" + inviteCode;
        }
    }

    private void NavigateToChat()
        => Nav.NavigateTo($"/chat/{ChatId}");

    private async Task OnCopy()
        => await Clipboard.WriteTextAsync(_link);
}
