@page "/admin/copy-chat2place"
@using System.ComponentModel.DataAnnotations
@inherits FusionComponentBase

<RequireAccount MustBeAdmin="true"/>
<MainHeader>Move chat to place</MainHeader>

<Form Class="h-full" @ref="@_formRef" Model="@_form" OnValidSubmit="@CopyChatToPlace">
    <FormBlock>
        <DataAnnotationsValidator/>

        <FormSection Label="Chat ID" Class="field-chat-id" For="() => _form.ChatId" InputId="@_form.ChatIdFormId" IsLabelInsideInput="true">
            <TextBox
                @bind-Value="@_form.ChatId"
                Id="@_form.ChatIdFormId"
                Placeholder="Id of a chat to copy to the place"
                ClearButton="true"/>
        </FormSection>

        <FormSection Label="Place ID" Class="field-place-id" For="() => _form.PlaceId" InputId="@_form.PlaceIdFormId" IsLabelInsideInput="true">
            <TextBox
                @bind-Value="@_form.PlaceId"
                Id="@_form.PlaceIdFormId"
                Placeholder="Id of a place to copy the chat in"
                ClearButton="true"/>
        </FormSection>
    </FormBlock>

    <Button Type="@ButtonType.Submit">Move chat to place</Button>
</Form>


@code {
    private Form?_formRef;
    private FormModel _form = null!;

    [Inject] private ChatUIHub Hub { get; init; } = null!;
    [Inject] private ComponentIdGenerator ComponentIdGenerator { get; init; } = null!;

    protected override void OnInitialized() {
        _form = new FormModel(ComponentIdGenerator);
    }

    public sealed class FormModel {
        [Required, MinLength(1)]
        public string ChatId { get; set; } = "";
        [Required, MinLength(1)]
        public string PlaceId { get; set; } = "";

        public string FormId { get; }
        public string ChatIdFormId { get; }
        public string PlaceIdFormId { get; }

        public FormModel(ComponentIdGenerator componentIdGenerator) {
            FormId = componentIdGenerator.Next("copy-chat2place-form");
            ChatIdFormId = $"{FormId}-chatId";
            PlaceIdFormId = $"{FormId}-placeId";
        }
    }

    private async Task CopyChatToPlace() {
        var session = Hub.Session();
        var chatId = ChatId.Parse(_form.ChatId);
        var placeId = PlaceId.Parse(_form.PlaceId);
        var chat = await Hub.Chats.Get(session, chatId, default);
        var place = await Hub.Places.Get(session, placeId, default).Require();
        var chatDescriptor = chat?.Title ?? chatId.Value;
        var message = $"You are about to copy chat '{chatDescriptor}' to place '{place.Title}'. Do you want to proceed?";
        await Hub.ModalUI.Show(new ConfirmModal.Model(false, message, () => _ = MoveInternal()));

        async Task MoveInternal() {
            var command = new Chat_CopyChat(session, chatId, placeId, Guid.NewGuid().ToString());
            var (success, error) = await Hub.UICommander().Run(command, default);
            if (error != null)
                return;
            if (success)
                Hub.ToastUI.Show($"Chat '{chatDescriptor}' was successfully copied to place '{place.Title}'.", ToastDismissDelay.Short);
            else
                Hub.ToastUI.Show($"Nothing has been done on coping chat '{chatDescriptor}' to place '{place.Title}'.", ToastDismissDelay.Short);
        }
    }
}
