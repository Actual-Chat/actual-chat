<Project Sdk="Microsoft.NET.Sdk.Razor">

  <PropertyGroup>
    <TargetFramework />
    <TargetFrameworks>net6.0-android;net6.0-ios;net6.0-maccatalyst</TargetFrameworks>
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net6.0-windows10.0.19041.0</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <OutputPath>$(RepoRoot)artifacts\app\</OutputPath>
    <UseMaui>true</UseMaui>
    <SingleProject>true</SingleProject>
    <IsPackable>true</IsPackable>
    <EnableDefaultCssItems>false</EnableDefaultCssItems>
    <InvariantGlobalization>true</InvariantGlobalization>
    <!--
    <EnablePreviewMsixTooling>true</EnablePreviewMsixTooling>
    -->

    <!-- Display name -->
    <ApplicationTitle>Actual Chat</ApplicationTitle>

    <!-- App Identifier -->
    <ApplicationId>chat.actual.app</ApplicationId>
    <ApplicationIdGuid>7AC72B49-8FEA-45AB-B7B8-C32719677E9D</ApplicationIdGuid>

    <!-- Required for C# Hot Reload -->
    <UseInterpreter Condition="'$(Configuration)' == 'Debug' OR '$(Configuration)'=='Debug-maui'">True</UseInterpreter>

    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.2</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">23.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
    <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
    <Configurations>Debug;Release;Debug-maui</Configurations>

    <AppendTargetFrameworkToOutputPath>true</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>true</AppendRuntimeIdentifierToOutputPath>
    <IsPublishable>true</IsPublishable>
  </PropertyGroup>

  <!-- Here we can alter either app is build to connect to dev or prod environment -->
  <!-- Comment property group below to build an app connecting to prod -->
  <PropertyGroup>
    <IsDevMaui>true</IsDevMaui>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsDevMaui)' == 'true'">
    <DefineConstants>$(DefineConstants);ISDEVMAUI</DefineConstants>
    <!-- Display name -->
    <ApplicationTitle>Actual Chat (Dev)</ApplicationTitle>
    <!-- App Identifier -->
    <ApplicationId>chat.actual.dev.app</ApplicationId>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsDevMaui)' != 'true'">
  </PropertyGroup>

  <PropertyGroup>
    <FixedEnvironment Condition="'$(FixedEnvironment)' == ''"></FixedEnvironment>
  </PropertyGroup>
  <PropertyGroup Condition="'$(FixedEnvironment)' == 'Production'">
    <DefineConstants>$(DefineConstants);IS_FIXED_ENVIRONMENT_PPRODUCTION</DefineConstants>
  </PropertyGroup>

  <!--<PropertyGroup Condition="$(TargetFramework.Contains('-windows')) and '$(Configuration)' == 'Release'">-->
  <!--<PropertyGroup Condition="$(TargetFramework.Contains('-windows'))">
    <GenerateAppxPackageOnBuild>true</GenerateAppxPackageOnBuild>
    <AppxPackageSigningEnabled>true</AppxPackageSigningEnabled>
    <PackageCertificateThumbprint>0BFF799D82CC03E61A65584D31D800924149453A</PackageCertificateThumbprint>
  </PropertyGroup>-->

  <!--<PropertyGroup Condition="$(TargetFramework.Contains('-android')) and '$(Configuration)' == 'Release'">-->
  <PropertyGroup Condition="$(TargetFramework.Contains('-android'))">
    <AndroidKeyStore>True</AndroidKeyStore>
    <AndroidSigningKeyStore>myapp.keystore</AndroidSigningKeyStore>
    <AndroidSigningKeyAlias>key</AndroidSigningKeyAlias>
    <AndroidSigningKeyPass>password</AndroidSigningKeyPass>
    <AndroidSigningStorePass>password</AndroidSigningStorePass>
    <AndroidUseNegotiateAuthentication>false</AndroidUseNegotiateAuthentication>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\UI.Blazor.App\UI.Blazor.App.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net6.0-android'">
    <PackageReference Include="Xamarin.Firebase.Messaging" />
    <PackageReference Include="Xamarin.GooglePlayServices.Auth" />
    <PackageReference Include="Xamarin.Google.Dagger" />
  </ItemGroup>

  <ItemGroup>
    <!-- App Icon -->
    <MauiIcon Include="Resources\AppIcon\appicon.svg" />

    <!-- Splash Screen -->
    <MauiSplashScreen Include="Resources\Splash\splashscreen.svg" Color="#0036A3" />

    <!-- Images -->
    <MauiImage Include="Resources\Images\*" />

    <!-- Custom Fonts -->
    <MauiFont Include="Resources\Fonts\*" />
  </ItemGroup>

  <!-- Android -->
  <ItemGroup Condition="$(TargetFramework.StartsWith('net6.0-android')) != true">
    <Compile Remove="**\**\*.Android.cs" />
    <None Include="**\**\*.Android.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    <Compile Remove="**\Android\**\*.cs" />
    <None Include="**\Android\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
  </ItemGroup>

  <!-- Both iOS and Mac Catalyst -->
  <ItemGroup Condition="$(TargetFramework.StartsWith('net6.0-ios')) != true AND $(TargetFramework.StartsWith('net6.0-maccatalyst')) != true">
    <Compile Remove="**\**\*.MaciOS.cs" />
    <None Include="**\**\*.MaciOS.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    <Compile Remove="**\MaciOS\**\*.cs" />
    <None Include="**\MaciOS\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
  </ItemGroup>

  <!-- iOS -->
  <ItemGroup Condition="$(TargetFramework.StartsWith('net6.0-ios')) != true">
    <Compile Remove="**\**\*.iOS.cs" />
    <None Include="**\**\*.iOS.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    <Compile Remove="**\iOS\**\*.cs" />
    <None Include="**\iOS\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
  </ItemGroup>

  <!-- Mac Catalyst -->
  <ItemGroup Condition="$(TargetFramework.StartsWith('net6.0-maccatalyst')) != true">
    <Compile Remove="**\**\*.MacCatalyst.cs" />
    <None Include="**\**\*.MacCatalyst.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    <Compile Remove="**\MacCatalyst\**\*.cs" />
    <None Include="**\MacCatalyst\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
  </ItemGroup>

  <!-- Windows -->
  <ItemGroup Condition="$(TargetFramework.Contains('-windows')) != true">
    <Compile Remove="**\*.Windows.cs" />
    <None Include="**\*.Windows.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
    <Compile Remove="**\Windows\**\*.cs" />
    <None Include="**\Windows\**\*.cs" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Remove="Microsoft.SourceLink.GitHub" />
    <!--
      MAUI msbuild tasks doesn't work with
      <Content Include="..\UI.Blazor.Host\wwwroot\**\*.*" Link="wwwroot\%(RecursiveDir)%(Filename)%(Extension)" />
      so we copy dist files from webpack build
      issue: [Web Workers API doesn't work](https://github.com/MicrosoftEdge/WebView2Feedback/issues/2296)
     -->
    <Watch Include="wwwroot\dist\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="appsettings.Development.json" />
    <Content Remove="appsettings.json" />
    <Content Remove="Platforms\Android\Resources\google-services.json.dev" />
    <Content Remove="Platforms\Android\Resources\google-services.json.prod" />
  </ItemGroup>

  <ItemGroup Condition="'$(IsDevMaui)' == 'true'">
    <GoogleServicesJson Include="Platforms\Android\Resources\google-services.json.dev" Link="Platforms\Android\Resources\google-services.json" />
  </ItemGroup>
  <ItemGroup Condition="'$(IsDevMaui)' != 'true'">
    <GoogleServicesJson Include="Platforms\Android\Resources\google-services.json.prod" Link="Platforms\Android\Resources\google-services.json" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Resources\Images\" />
  </ItemGroup>

  <!-- Versions -->
  <!-- Use approach described on https://github.com/dotnet/Nerdbank.GitVersioning/issues/828 -->
  <Target Name="FixVersionForAndroid" Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'" BeforeTargets="_GetAndroidPackageName" DependsOnTargets="SetApplicationVersion" />

  <Target Name="FixVersionForIOS" Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'" BeforeTargets="_CompileAppManifest" DependsOnTargets="SetApplicationVersion" />

  <Target Name="FixVersionForWindows" Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'" BeforeTargets="MauiGeneratePackageAppxManifest" DependsOnTargets="SetApplicationVersion" />

  <Target Name="SetApplicationVersion" DependsOnTargets="GetBuildVersion">

    <PropertyGroup>

      <_MajorStr>$([System.String]::Format("{0}", $([System.Version]::Parse("$(BuildVersion)").Major)))</_MajorStr>
      <_MinorStr>$([System.String]::Format("{0:D3}", $([System.Version]::Parse("$(BuildVersion)").Minor)))</_MinorStr>
      <_BuildStr>$([System.String]::Format("{0:D3}", $([System.Version]::Parse("$(BuildVersion)").Build)))</_BuildStr>

      <!-- Android requirement: ApplicationVersion must be a positive integer (used as an internal version number) -->
      <!-- iOS requirement: ApplicationVersion must be a three part version number -->
      <!-- Windows requirement: ApplicationVersion must be blank when ApplicationDisplayVersion is a four part version number -->
      <ApplicationVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">$(_MajorStr)$(_MinorStr)$(_BuildStr)</ApplicationVersion>
      <ApplicationVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">$(BuildVersionSimple)</ApplicationVersion>
      <ApplicationVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'"></ApplicationVersion>

      <!-- iOS requirement: ApplicationDisplayVersion must be a three part version number -->
      <!-- Windows requirement: ApplicationDisplayVersion must be a four part version number -->
      <ApplicationDisplayVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">$(Version)</ApplicationDisplayVersion>
      <ApplicationDisplayVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">$(BuildVersionSimple)</ApplicationDisplayVersion>
      <ApplicationDisplayVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">$(BuildVersion)</ApplicationDisplayVersion>

    </PropertyGroup>

  </Target>

</Project>
