// <auto-generated />
using ActualChat.Mjml.Blazor.Enums;
using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Components.Rendering;

namespace ActualChat.Mjml.Blazor.Components;

public class MjmlColumn : ComponentBase
{
    [Parameter] public string? BackgroundColor { get; set; }
    [Parameter] public string? Border { get; set; }
    [Parameter] public string? BorderBottom { get; set; }
    [Parameter] public string? BorderLeft { get; set; }
    [Parameter] public string? BorderRadius { get; set; }
    [Parameter] public string? BorderRight { get; set; }
    [Parameter] public string? BorderTop { get; set; }
    [Parameter] public string? CssClass { get; set; }
    [Parameter] public MjmlColumnDirection? Direction { get; set; }
    [Parameter] public string? InnerBackgroundColor { get; set; }
    [Parameter] public string? InnerBorder { get; set; }
    [Parameter] public string? InnerBorderBottom { get; set; }
    [Parameter] public string? InnerBorderLeft { get; set; }
    [Parameter] public string? InnerBorderRadius { get; set; }
    [Parameter] public string? InnerBorderRight { get; set; }
    [Parameter] public string? InnerBorderTop { get; set; }
    [Parameter] public string? MjmlClass { get; set; }
    [Parameter] public string? Padding { get; set; }
    [Parameter] public string? PaddingBottom { get; set; }
    [Parameter] public string? PaddingLeft { get; set; }
    [Parameter] public string? PaddingRight { get; set; }
    [Parameter] public string? PaddingTop { get; set; }
    [Parameter] public MjmlColumnVerticalAlign? VerticalAlign { get; set; }
    [Parameter] public string? Width { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    protected override void BuildRenderTree(RenderTreeBuilder builder)
    {
        builder.OpenElement(0, "mj-column");
        if (BackgroundColor is not null)
            builder.AddAttribute(1, "background-color", BackgroundColor);
        if (Border is not null)
            builder.AddAttribute(2, "border", Border);
        if (BorderBottom is not null)
            builder.AddAttribute(3, "border-bottom", BorderBottom);
        if (BorderLeft is not null)
            builder.AddAttribute(4, "border-left", BorderLeft);
        if (BorderRadius is not null)
            builder.AddAttribute(5, "border-radius", BorderRadius);
        if (BorderRight is not null)
            builder.AddAttribute(6, "border-right", BorderRight);
        if (BorderTop is not null)
            builder.AddAttribute(7, "border-top", BorderTop);
        if (CssClass is not null)
            builder.AddAttribute(8, "css-class", CssClass);
        if (Direction is not null)
            builder.AddAttribute(9, "direction", Direction.Value.ToMjmlValue());
        if (InnerBackgroundColor is not null)
            builder.AddAttribute(10, "inner-background-color", InnerBackgroundColor);
        if (InnerBorder is not null)
            builder.AddAttribute(11, "inner-border", InnerBorder);
        if (InnerBorderBottom is not null)
            builder.AddAttribute(12, "inner-border-bottom", InnerBorderBottom);
        if (InnerBorderLeft is not null)
            builder.AddAttribute(13, "inner-border-left", InnerBorderLeft);
        if (InnerBorderRadius is not null)
            builder.AddAttribute(14, "inner-border-radius", InnerBorderRadius);
        if (InnerBorderRight is not null)
            builder.AddAttribute(15, "inner-border-right", InnerBorderRight);
        if (InnerBorderTop is not null)
            builder.AddAttribute(16, "inner-border-top", InnerBorderTop);
        if (MjmlClass is not null)
            builder.AddAttribute(17, "mj-class", MjmlClass);
        if (Padding is not null)
            builder.AddAttribute(18, "padding", Padding);
        if (PaddingBottom is not null)
            builder.AddAttribute(19, "padding-bottom", PaddingBottom);
        if (PaddingLeft is not null)
            builder.AddAttribute(20, "padding-left", PaddingLeft);
        if (PaddingRight is not null)
            builder.AddAttribute(21, "padding-right", PaddingRight);
        if (PaddingTop is not null)
            builder.AddAttribute(22, "padding-top", PaddingTop);
        if (VerticalAlign is not null)
            builder.AddAttribute(23, "vertical-align", VerticalAlign.Value.ToMjmlValue());
        if (Width is not null)
            builder.AddAttribute(24, "width", Width);
        if (ChildContent is not null)
            builder.AddContent(25, ChildContent);
        builder.CloseElement();
    }
}
