// <auto-generated />
using ActualChat.Mjml.Blazor.Enums;
using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Components.Rendering;

namespace ActualChat.Mjml.Blazor.Components;

public class MjmlHero : ComponentBase
{
    [Parameter] public string? BackgroundColor { get; set; }
    [Parameter] public string? BackgroundHeight { get; set; }
    [Parameter] public string? BackgroundPosition { get; set; }
    [Parameter] public string? BackgroundUrl { get; set; }
    [Parameter] public string? BackgroundWidth { get; set; }
    [Parameter] public string? BorderRadius { get; set; }
    [Parameter] public string? ContainerBackgroundColor { get; set; }
    [Parameter] public string? CssClass { get; set; }
    [Parameter] public string? Height { get; set; }
    [Parameter] public string? InnerBackgroundColor { get; set; }
    [Parameter] public string? InnerPadding { get; set; }
    [Parameter] public string? InnerPaddingBottom { get; set; }
    [Parameter] public string? InnerPaddingLeft { get; set; }
    [Parameter] public string? InnerPaddingRight { get; set; }
    [Parameter] public string? InnerPaddingTop { get; set; }
    [Parameter] public string? MjmlClass { get; set; }
    [Parameter] public string? Mode { get; set; }
    [Parameter] public string? Padding { get; set; }
    [Parameter] public string? PaddingBottom { get; set; }
    [Parameter] public string? PaddingLeft { get; set; }
    [Parameter] public string? PaddingRight { get; set; }
    [Parameter] public string? PaddingTop { get; set; }
    [Parameter] public MjmlHeroVerticalAlign? VerticalAlign { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    protected override void BuildRenderTree(RenderTreeBuilder builder)
    {
        builder.OpenElement(0, "mj-hero");
        if (BackgroundColor is not null)
            builder.AddAttribute(1, "background-color", BackgroundColor);
        if (BackgroundHeight is not null)
            builder.AddAttribute(2, "background-height", BackgroundHeight);
        if (BackgroundPosition is not null)
            builder.AddAttribute(3, "background-position", BackgroundPosition);
        if (BackgroundUrl is not null)
            builder.AddAttribute(4, "background-url", BackgroundUrl);
        if (BackgroundWidth is not null)
            builder.AddAttribute(5, "background-width", BackgroundWidth);
        if (BorderRadius is not null)
            builder.AddAttribute(6, "border-radius", BorderRadius);
        if (ContainerBackgroundColor is not null)
            builder.AddAttribute(7, "container-background-color", ContainerBackgroundColor);
        if (CssClass is not null)
            builder.AddAttribute(8, "css-class", CssClass);
        if (Height is not null)
            builder.AddAttribute(9, "height", Height);
        if (InnerBackgroundColor is not null)
            builder.AddAttribute(10, "inner-background-color", InnerBackgroundColor);
        if (InnerPadding is not null)
            builder.AddAttribute(11, "inner-padding", InnerPadding);
        if (InnerPaddingBottom is not null)
            builder.AddAttribute(12, "inner-padding-bottom", InnerPaddingBottom);
        if (InnerPaddingLeft is not null)
            builder.AddAttribute(13, "inner-padding-left", InnerPaddingLeft);
        if (InnerPaddingRight is not null)
            builder.AddAttribute(14, "inner-padding-right", InnerPaddingRight);
        if (InnerPaddingTop is not null)
            builder.AddAttribute(15, "inner-padding-top", InnerPaddingTop);
        if (MjmlClass is not null)
            builder.AddAttribute(16, "mj-class", MjmlClass);
        if (Mode is not null)
            builder.AddAttribute(17, "mode", Mode);
        if (Padding is not null)
            builder.AddAttribute(18, "padding", Padding);
        if (PaddingBottom is not null)
            builder.AddAttribute(19, "padding-bottom", PaddingBottom);
        if (PaddingLeft is not null)
            builder.AddAttribute(20, "padding-left", PaddingLeft);
        if (PaddingRight is not null)
            builder.AddAttribute(21, "padding-right", PaddingRight);
        if (PaddingTop is not null)
            builder.AddAttribute(22, "padding-top", PaddingTop);
        if (VerticalAlign is not null)
            builder.AddAttribute(23, "vertical-align", VerticalAlign.Value.ToMjmlValue());
        if (ChildContent is not null)
            builder.AddContent(24, ChildContent);
        builder.CloseElement();
    }
}
