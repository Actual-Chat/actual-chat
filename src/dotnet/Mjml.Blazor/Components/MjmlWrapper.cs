// <auto-generated />
using ActualChat.Mjml.Blazor.Enums;
using Microsoft.AspNetCore.Components;
using Microsoft.AspNetCore.Components.Rendering;

namespace ActualChat.Mjml.Blazor.Components;

public class MjmlWrapper : ComponentBase
{
    [Parameter] public string? BackgroundColor { get; set; }
    [Parameter] public string? BackgroundPosition { get; set; }
    [Parameter] public string? BackgroundPositionX { get; set; }
    [Parameter] public string? BackgroundPositionY { get; set; }
    [Parameter] public MjmlWrapperBackgroundRepeat? BackgroundRepeat { get; set; }
    [Parameter] public string? BackgroundSize { get; set; }
    [Parameter] public string? BackgroundUrl { get; set; }
    [Parameter] public string? Border { get; set; }
    [Parameter] public string? BorderBottom { get; set; }
    [Parameter] public string? BorderLeft { get; set; }
    [Parameter] public string? BorderRadius { get; set; }
    [Parameter] public string? BorderRight { get; set; }
    [Parameter] public string? BorderTop { get; set; }
    [Parameter] public string? CssClass { get; set; }
    [Parameter] public MjmlWrapperDirection? Direction { get; set; }
    [Parameter] public MjmlWrapperFullWidth? FullWidth { get; set; }
    [Parameter] public string? MjmlClass { get; set; }
    [Parameter] public string? Padding { get; set; }
    [Parameter] public string? PaddingBottom { get; set; }
    [Parameter] public string? PaddingLeft { get; set; }
    [Parameter] public string? PaddingRight { get; set; }
    [Parameter] public string? PaddingTop { get; set; }
    [Parameter] public MjmlWrapperTextAlign? TextAlign { get; set; }
    [Parameter] public string? TextPadding { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    protected override void BuildRenderTree(RenderTreeBuilder builder)
    {
        builder.OpenElement(0, "mj-wrapper");
        if (BackgroundColor is not null)
            builder.AddAttribute(1, "background-color", BackgroundColor);
        if (BackgroundPosition is not null)
            builder.AddAttribute(2, "background-position", BackgroundPosition);
        if (BackgroundPositionX is not null)
            builder.AddAttribute(3, "background-position-x", BackgroundPositionX);
        if (BackgroundPositionY is not null)
            builder.AddAttribute(4, "background-position-y", BackgroundPositionY);
        if (BackgroundRepeat is not null)
            builder.AddAttribute(5, "background-repeat", BackgroundRepeat.Value.ToMjmlValue());
        if (BackgroundSize is not null)
            builder.AddAttribute(6, "background-size", BackgroundSize);
        if (BackgroundUrl is not null)
            builder.AddAttribute(7, "background-url", BackgroundUrl);
        if (Border is not null)
            builder.AddAttribute(8, "border", Border);
        if (BorderBottom is not null)
            builder.AddAttribute(9, "border-bottom", BorderBottom);
        if (BorderLeft is not null)
            builder.AddAttribute(10, "border-left", BorderLeft);
        if (BorderRadius is not null)
            builder.AddAttribute(11, "border-radius", BorderRadius);
        if (BorderRight is not null)
            builder.AddAttribute(12, "border-right", BorderRight);
        if (BorderTop is not null)
            builder.AddAttribute(13, "border-top", BorderTop);
        if (CssClass is not null)
            builder.AddAttribute(14, "css-class", CssClass);
        if (Direction is not null)
            builder.AddAttribute(15, "direction", Direction.Value.ToMjmlValue());
        if (FullWidth is not null)
            builder.AddAttribute(16, "full-width", FullWidth.Value.ToMjmlValue());
        if (MjmlClass is not null)
            builder.AddAttribute(17, "mj-class", MjmlClass);
        if (Padding is not null)
            builder.AddAttribute(18, "padding", Padding);
        if (PaddingBottom is not null)
            builder.AddAttribute(19, "padding-bottom", PaddingBottom);
        if (PaddingLeft is not null)
            builder.AddAttribute(20, "padding-left", PaddingLeft);
        if (PaddingRight is not null)
            builder.AddAttribute(21, "padding-right", PaddingRight);
        if (PaddingTop is not null)
            builder.AddAttribute(22, "padding-top", PaddingTop);
        if (TextAlign is not null)
            builder.AddAttribute(23, "text-align", TextAlign.Value.ToMjmlValue());
        if (TextPadding is not null)
            builder.AddAttribute(24, "text-padding", TextPadding);
        if (ChildContent is not null)
            builder.AddContent(25, ChildContent);
        builder.CloseElement();
    }
}
