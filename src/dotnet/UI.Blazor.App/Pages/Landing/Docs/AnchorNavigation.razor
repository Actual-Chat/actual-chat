@using ActualChat.UI.Blazor.App.Module
@implements IDisposable

@code {
    [Inject] private NavigationManager Nav { get; init; } = null!;
    [Inject] private IJSRuntime JSRuntime { get; init; } = null!;

    protected override void OnInitialized()
        => Nav.LocationChanged += OnLocationChanged;

    protected override async Task OnAfterRenderAsync(bool firstRender)
        => await ScrollToFragment();

    public void Dispose()
        => Nav.LocationChanged -= OnLocationChanged;

    private async void OnLocationChanged(object? sender, LocationChangedEventArgs e)
        => await ScrollToFragment();

    private async Task ScrollToFragment() {
        var uri = Nav.Uri.ToUri();
        var fragment = uri.Fragment;
        if (fragment.StartsWith('#')) {
            var elementId = fragment[1..];
            if (!elementId.IsNullOrEmpty())
               await JSRuntime.InvokeVoidAsync($"{BlazorUIAppModule.ImportName}.scrollToId", elementId);
        }
    }
}
