@using ActualChat.UI.Blazor.Services

@{
    var hideForNarrow = !IsNarrow && ScreenSize.IsNarrow() ? "!hidden" : "";
}

<div class="landing-links @hideForNarrow" xmlns="http://www.w3.org/1999/html">
    <div class="c-title">
        Get Actual Chat
    </div>
    <div class="link-group">
        <button class="link-btn" data-href="@(Links.Apps.Android)">
            <div class="link-btn-content">
                <img draggable="false" src="/dist/images/landing/android-logo-white.svg" alt="Android app">
            </div>
            <div class="c-text">
                <span>Install</span>
                <span>Android app</span>
            </div>
        </button>
        <button class="link-btn" data-href="@(Links.Apps.iOS)">
            <div class="link-btn-content">
                <img draggable="false" src="/dist/images/landing/apple-logo-white.svg" alt="iOS app">
            </div>
            <div class="c-text">
                <span>Install</span>
                <span>iOS app</span>
            </div>
        </button>
        <button class="link-btn" data-href="@(Links.Apps.Windows)">
            <div class="link-btn-content">
                <img draggable="false" src="/dist/images/landing/windows-logo-white.svg" alt="Windows app">
            </div>
            <div class="c-text">
                <span>Install</span>
                <span>Windows app</span>
            </div>
        </button>
        <button class="link-btn" @onclick="@SignIn">
            <div class="link-btn-content">
                <img draggable="false" src="/dist/images/landing/web-logo-white.svg" alt="Web app">
            </div>
            <div class="c-text">
                <span>Sign-in</span>
                <span>to Web App</span>
            </div>
        </button>
    </div>
</div>

@code{
    [Inject] private ModalUI ModalUI { get; init; } = null!;

    [CascadingParameter] public ScreenSize ScreenSize { get; set; }

    [Parameter] public bool IsNarrow { get; set; }
    [Parameter] public bool EnableIncompleteUI { get; set; }

    private Task SignIn()
        => ModalUI.Show(new SignInModal.Model());
}
