@implements IModalView<LeaveChatConfirmationModal.Model>
@{
    var action = ModalModel.IsDelete
        ? "delete"
        : "leave";

    var title = $"{action.Capitalize()} {ModalModel.Object}";
}

<DialogFrame Title="@title" Class="modal-xs">
    <Body>
    <FormBlock>
        <p>Are you sure you want to @action this @ModalModel.Object?</p>
    </FormBlock>
    </Body>
    <Buttons>
        <Button Class="btn-modal" Click="OnCancel">Cancel</Button>
        <Button Class="btn-modal btn-danger" Click="OnLeave">@action.Capitalize()</Button>
    </Buttons>
</DialogFrame>

@code {
    [CascadingParameter] public Modal Modal { get; set; } = null!;
    [Parameter] public Model ModalModel { get; set; } = null!;

    private void OnCancel()
        => Modal.Close();

    private void OnLeave()
        => ModalModel.Confirmed(Modal);

    public sealed record Model(bool IsDelete, string Object, Action<Modal> Confirmed);
}
