@namespace ActualChat.UI.Blazor.App.Components
@inherits FusionComponentBase
@{
    var authorSids = AuthorSids;
    if (authorSids.Count == 0)
        return;

    var size = Size == SquareSize.Size6 ? "w-6 h-6" : "w-8 h-8";
    var backSize = Size == SquareSize.Size6 ? "w-8 h-8" : "w-10 h-10";
    var maxLength = MaxIconCount > authorSids.Count ? authorSids.Count : MaxIconCount;
}

<div class="author-circle-group @Class">
    <div class="c-container back">
        @{
            for (var i = 0; i < maxLength; i++) {
                var lastAuthorCls = i == maxLength - 1 ? "last-author" : "";
                <div class="@backSize @lastAuthorCls author-circle-group-item"></div>
            }

            if (authorSids.Count > MaxIconCount) {
                <div class="@backSize author-circle-group-item last" style="z-index: @(maxLength + 1);"></div>
            }
        }
    </div>
    <div class="c-container forward">
        @{
            var zIndex = 10;
            for (var i = 0; i < maxLength; i++) {
                var authorSid = authorSids[i];
                var lastAuthorCls = i == maxLength - 1 ? "last-author" : "";
                <div class="@size @lastAuthorCls author-circle-group-item" style="z-index: @zIndex;">
                    <AuthorCircle AuthorSid="@authorSid" Size="@Size"/>
                </div>
                zIndex--;
            }

            if (authorSids.Count > MaxIconCount) {
                <div class="author-circle-group-item last" style="z-index: @(maxLength + 1);">
                    @{
                        var avatarText = authorSids.Count < 11
                            ? "+" + (authorSids.Count - MaxIconCount)
                            : "...";
                    }
                    <AvatarText Size="@Size" Text="@avatarText"/>
                </div>
            }
        }
    </div>
</div>

@code {
    [Inject] private ChatUIHub Hub { get; set; } = null!;
    private IAuthors Authors => Hub.Authors;
    private ChatActivity ChatActivity => Hub.ChatActivity;

    private IChatStreamingActivity? ChatRecordingActivity { get; set; }

    [Parameter] public string Class { get; set; } = "";
    [Parameter] public int MaxIconCount { get; set; } = 5;
    [Parameter] public SquareSize Size { get; set; } = SquareSize.Size6;

    [Parameter, ParameterComparer(typeof(ByItemParameterComparer))]
    public List<string> AuthorSids { get; set; } = [];
}
