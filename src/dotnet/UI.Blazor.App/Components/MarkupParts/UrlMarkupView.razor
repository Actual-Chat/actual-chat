@inherits MarkupViewBase<UrlMarkup>
@{
    var cls = Classes.GetValueOrDefault(Markup.Kind) ?? "url-markup url-markup-unknown";
    var url = Markup.Url;
}

@if (_localUrl is { } localUrl) {
    <a class="@cls"
       href="@(_localUrl!.Value)"
       @onclick="@(() => _ = History.NavigateTo(localUrl))"
       @onclick:preventDefault="true"
       data-menu="@(MenuRef.New<MessageMenu>(Entry.Id, bool.FalseString, Markup.Url, ""))">
        @url
    </a>
    return;
}

<a class="@cls" href="@_hrefUrl" target="_blank"
   data-menu="@(MenuRef.New<MessageMenu>(Entry.Id, bool.FalseString, url, ""))">
    @url
</a>

@code {
    private static readonly Dictionary<UrlMarkupKind, string> Classes = new[] {
        UrlMarkupKind.Www,
        UrlMarkupKind.Email,
    }.ToDictionary(x => x, x => $"url-markup url-markup-{x.ToString().ToLowerInvariant()}");

    private LocalUrl? _localUrl;
    private string _hrefUrl = "";

    [Inject] private ChatUIHub Hub { get; init; } = null!;
    private NavigationManager Nav => Hub.Nav;
    private History History => Hub.History;
    private UrlMapper UrlMapper => Hub.UrlMapper();

    protected override void OnParametersSet() {
        var url = Markup.Url;
        _hrefUrl = url;
        _localUrl = null;
        switch (Markup.Kind) {
        case UrlMarkupKind.Www:
            var url2 = url.EnsureSuffix("/");
            if (url2.OrdinalStartsWith(Nav.BaseUri))
                _localUrl = new LocalUrl(Nav.ToBaseRelativePath(url2));
            else if (url2.OrdinalStartsWith(UrlMapper.BaseUrl))
                _localUrl = new LocalUrl(UrlMapper.ToBaseRelativePath(url2));
            break;
        case UrlMarkupKind.Email:
            _hrefUrl = url.OrdinalStartsWith("mailto:") ? url : "mailto:" + url;
            break;
        }
    }
}
