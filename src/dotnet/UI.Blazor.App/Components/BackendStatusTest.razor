@inherits ComputedStateComponent<ImmutableList<(string Backend, Exception Error)>>
@{
    var errors = State.Value ?? ImmutableList<(string Backend, Exception Error)>.Empty;
}

<h3>Backend status:</h3>
@if (errors.Any()) {
    @foreach (var (backend, error) in errors) {
        <h4><b>@backend:</b> @(error.Message.NullIfEmpty() ?? "Unknown error")</h4>
    }
}
else {
    <h4>No errors</h4>
}

@code {
    [Inject] private Session Session { get; init; } = null!;
    [Inject] private IBackendStatus BackendStatus { get; init; } = null!;

    protected override ComputedState<ImmutableList<(string Backend, Exception Error)>>.Options GetStateOptions()
        => new() {
            InitialValue = ImmutableList<(string Backend, Exception Error)>.Empty,
            Category = GetStateCategory(),
        };

    protected override Task<ImmutableList<(string Backend, Exception Error)>> ComputeState(CancellationToken cancellationToken)
        => BackendStatus.GetAllErrors(Session, cancellationToken);
}
