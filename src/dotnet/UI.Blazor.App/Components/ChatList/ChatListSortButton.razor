@namespace ActualChat.UI.Blazor.App.Components
@inherits ComputedStateComponent<ChatListSortButton.Model>
@{
    var m = State.Value;
    var order = m.SortOrder;
}

<ButtonRound
    Class="chat-list-sort-btn btn-xs btn-transparent unhovered"
    data-bubble="@(BubbleRef.New<ChatListTabsBubble>())"
    data-bubble-priority="203"
    data-bubble-placement="@(FloatingPosition.BottomStart.ToPositionString())"
    data-menu="@(MenuRef.New<ChatListSortMenu>())"
    data-menu-trigger="@MenuTrigger.Primary"
    data-menu-placement="@(FloatingPosition.BottomStart.ToPositionString())">
    <i class="@order.GetIcon() text-2xl"></i>
</ButtonRound>

@code {
    [Inject] private ChatListUI ChatListUI { get; init; } = null!;

    [Parameter, EditorRequired] public PlaceChatListSettings PlaceChatListSettings { get; set; } = null!;

    protected override ComputedState<Model>.Options GetStateOptions()
        => new() {
            InitialValue = Model.Loading,
            UpdateDelayer = FixedDelayer.NextTick,
        };

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var chatListSettings = await PlaceChatListSettings.Get(cancellationToken).ConfigureAwait(false);
        return new() { SortOrder = chatListSettings.Order };
    }

    // Nested types

    public sealed record Model {
        public static readonly Model Loading = new();

        public ChatListOrder SortOrder { get; init; }
    }
}
