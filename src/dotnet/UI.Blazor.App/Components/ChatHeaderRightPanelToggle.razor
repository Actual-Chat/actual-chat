@inherits ComputedStateComponent<bool>
@{
    var isVisible = !State.Value;
}

@if (isVisible) {
    <HeaderButton
        data-bubble="@(BubbleRef.New<RightChatPanelButtonBubble>())"
        data-bubble-priority="401"
        data-bubble-placement="@(FloatingPosition.BottomEnd.ToPositionString())"
        Class="blackout"
        Click="Click"
        Tooltip="Chat properties"
        TooltipPosition="FloatingPosition.Bottom">
        @if (!ScreenSize.IsNarrow()) {
            <i class="icon-layout"></i>
        } else {
            <i class="icon-more-vertical"></i>
        }
    </HeaderButton>
}

@code {
    [Inject] private PanelsUI PanelsUI { get; init; } = null!;

    [CascadingParameter] public ScreenSize ScreenSize { get; set; }

    [Parameter] public EventCallback Click { get; set; }

    protected override ComputedState<bool>.Options GetStateOptions()
        => ComputedStateComponent.GetStateOptions(GetType(),
            static t => new ComputedState<bool>.Options() {
                UpdateDelayer = FixedDelayer.NextTick,
                Category = ComputedStateComponent.GetStateCategory(t),
            });

    protected override Task<bool> ComputeState(CancellationToken cancellationToken)
        => PanelsUI.Right.IsVisible.Use(cancellationToken).AsTask();
}
