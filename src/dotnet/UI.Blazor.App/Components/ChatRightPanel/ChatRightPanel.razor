@namespace ActualChat.UI.Blazor.App.Components
@using ActualChat.UI.Blazor.Components.SideNav
@inherits ComputedStateComponent<bool>

<SideNav
    Side="SideNavSide.Right"
    IsOpen="@State.Value"
    VisibilityChanged="@(NoStateHasChanged.EventCallback<bool>(isOpen => PanelsUI.Right.SetIsVisible(isOpen)))">
    <ChatRightPanelContent ChatContext="@ChatContext" />
</SideNav>

@code {
    private PanelsUI PanelsUI => ChatContext.Hub.PanelsUI;

    [Parameter, EditorRequired] public ChatContext ChatContext { get; set; } = null!;

    protected override ComputedState<bool>.Options GetStateOptions()
        => ComputedStateComponent.GetStateOptions(GetType(),
            t => new ComputedState<bool>.Options() {
                InitialValue = PanelsUI.Right.IsVisible.Value,
                UpdateDelayer = FixedDelayer.NextTick,
                Category = ComputedStateComponent.GetStateCategory(t),
            });

    protected override Task<bool> ComputeState(CancellationToken cancellationToken)
        => PanelsUI.Right.IsVisible.Use(cancellationToken).AsTask();
}
