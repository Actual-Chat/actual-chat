@inherits ComputedStateComponent<PageHeader.Model>
@{
    var m = State.Value;
    var title = "Actual Chat";
    if (m.Count > 0)
        title += " (" + m.Count + ")";
}

<PageTitle>@title</PageTitle>
<HeadContent>
    @{
        // NOTE(DF): I use png favicons because Chrome does not properly reacts on changes of svg icons.
        var fileName = m.Count > 9 ? "9+" : m.Count.ToString();
        var iconHref = $"/unreadcountfavicon/{fileName}.png";
        // var iconHref = $"/favicon.svg";
    }
    <link rel="icon" href="@iconHref">
</HeadContent>

@code {
    [Inject] private ChatListUI ChatListUI { get; init; } = null!;

    protected override ComputedState<Model>.Options GetStateOptions()
        => ComputedStateComponent.GetStateOptions(GetType(),
            static t => new ComputedState<Model>.Options() {
                UpdateDelayer = FixedDelayer.Get(0.1),
                Category = ComputedStateComponent.GetStateCategory(t),
            });

    protected override async Task<Model> ComputeState(CancellationToken cancellationToken) {
        var count = await ChatListUI.UnreadChatCount.Use(cancellationToken).ConfigureAwait(false);
        return new(count);
    }

    // Nested types

    public record struct Model(Trimmed<int> Count);
}
