@namespace ActualChat.UI.Blazor.Host
@using Stl.OS
@using System.Web
@using System.Reflection
@inject BlazorModeHelper _blazorModeHelper
@inject IJSRuntime _js

<div @onclick="@(() => _blazorModeHelper.ChangeMode(!_isServerSideBlazor))" class="cursor-pointer select-none flex flex-row bg-gray-700 text-gray-400 text-xs py-2 px-2 rounded-lg opacity-75 hover:opacity-100">
    <span><i class="fa fa-cog" aria-hidden="true"></i> @(_isPrerendering ? "Loading..." : GetModeName(_isServerSideBlazor))</span>
</div>

@code {
    private bool _isPrerendering;
    private bool _isServerSideBlazor = BlazorModeHelper.IsServerSideBlazor;

    [Parameter]
    public string CssClass { get; set; } = "";

    protected override void OnInitialized()
    {
        var jsRuntimeType = _js.GetType();
        if (jsRuntimeType.Name != "RemoteJSRuntime") {
            _isPrerendering = false;
            return;
        }
        var fClientProxy = jsRuntimeType.GetField("_clientProxy", BindingFlags.Instance | BindingFlags.NonPublic);
        var clientProxy = fClientProxy?.GetValue(_js);
        _isPrerendering = fClientProxy != null && clientProxy == null;
    }

    private string GetModeName(bool isServerSideBlazor)
        => isServerSideBlazor ? "Blazor Server" : "Blazor WASM";
}
