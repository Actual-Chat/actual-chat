@using ActualChat.Audio.UI.Blazor
@inject IChatService _chats
@inject Session _session
@inject UICommandRunner _cmd

<AuthorizeView>
    <Authorized>
        <form @onsubmit="Post">
            <Addons>
                <Addon AddonType="AddonType.Start">
                    <AddonLabel>Message</AddonLabel>
                </Addon>
                <TextEdit @bind-Text="@Message" type="search"/>
                <Addon AddonType="AddonType.End">
                    <Addons>
                        <Button Type="@ButtonType.Submit" Color="Color.Success">Send</Button>
                        <AudioRecorder ChatId="@ChatId"/>
                    </Addons>
                </Addon>
            </Addons>
        </form>
    </Authorized>
    <NotAuthorized>
        <SignInDropdown Why="to chat"/>
    </NotAuthorized>
</AuthorizeView>

@code {
    // TODO(AY): Add some store that remembers typed messages
    private string Message { get; set; } = "";

    [Parameter]
    public string ChatId { get; set; } = "";

    private async Task Post()
    {
        if (ChatId.IsNullOrEmpty())
            return;
        var (_, ce) = await _cmd.Run(new ChatCommands.Post(_session, ChatId, Message));
        if (ce.IsFailed)
            return;
        Message = "";
    }
}
