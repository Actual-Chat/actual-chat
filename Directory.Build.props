<Project ToolsVersion="latest" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Condition="Exists('$(MSBuildThisFileDirectory)Nerdbank.GitVersioning.props')" Project="$(MSBuildThisFileDirectory)Nerdbank.GitVersioning.props"/>

  <!-- Handy helper properties -->
  <PropertyGroup>
    <ProjectKind>Other</ProjectKind>
    <IsServerSideProject>false</IsServerSideProject>
    <IsMauiProject>false</IsMauiProject>
  </PropertyGroup>
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj'">
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'Api'">Contracts</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'SignalR.Client'">Contracts</ProjectKind>
    <ProjectKind Condition="$(MSBuildProjectName.EndsWith('.Contracts'))">Contracts</ProjectKind>
    <ProjectKind Condition="$(MSBuildProjectName.EndsWith('.Service'))">Service</ProjectKind>
    <ProjectKind Condition="$(MSBuildProjectName.EndsWith('.Migration'))">Migration</ProjectKind>
    <ProjectKind Condition="$(MSBuildProjectName.Contains('.Blazor'))">Blazor</ProjectKind>
    <ProjectKind Condition="$(MSBuildProjectName.Contains('Tests'))">Tests</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'App.Server'">App.Server</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'App.Wasm'">App.Wasm</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'App.Maui'">App.Maui</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'Core'">Core</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'Core.Server'">Core.Server</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'Db'">Db</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'Redis'">Redis</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'Kubernetes'">Kubernetes</ProjectKind>
    <ProjectKind Condition="'$(MSBuildProjectName)' == 'Testing'">Testing</ProjectKind>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'App.Server'">true</IsServerSideProject>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'Core.Server'">true</IsServerSideProject>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'Db'">true</IsServerSideProject>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'Redis'">true</IsServerSideProject>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'Kubernetes'">true</IsServerSideProject>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'Service'">true</IsServerSideProject>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'Migration'">true</IsServerSideProject>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'Testing'">true</IsServerSideProject>
    <IsServerSideProject Condition="'$(ProjectKind)' == 'Tests'">true</IsServerSideProject>
    <IsMauiProject Condition="'$(ProjectKind)' == 'App.Maui'">true</IsMauiProject>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFramework Condition="!$(IsMauiProject)">net8.0</TargetFramework>
    <RepoRoot>$([MSBuild]::EnsureTrailingSlash('$(MSBuildThisFileDirectory)'))</RepoRoot>
    <SolutionDir Condition="$(SolutionDir) == ''">$(RepoRoot)</SolutionDir>
    <ImplicitUsings>enable</ImplicitUsings>
    <Authors>Actual Chat, Inc.</Authors>
    <Company>Actual Chat, Inc.</Company>
    <Copyright>Copyright Actual Chat, Inc.</Copyright>
    <RepositoryUrl>https://github.com/Actual-Chat/actual-chat</RepositoryUrl>

    <!-- Assembly name & root namespace -->
    <BaseName>ActualChat</BaseName>
    <AssemblyName>$(BaseName).$(MSBuildProjectName)</AssemblyName>
    <RootNamespace>$(AssemblyName)</RootNamespace>
    <RootNamespace Condition="$(AssemblyName.EndsWith('.Core'))">$(AssemblyName.Replace('.Core',''))</RootNamespace>
    <RootNamespace Condition="$(AssemblyName.EndsWith('.Core.Server'))">$(AssemblyName.Replace('.Core.Server',''))</RootNamespace>
    <RootNamespace Condition="$(AssemblyName.EndsWith('.Contracts'))">$(AssemblyName.Replace('.Contracts',''))</RootNamespace>
    <RootNamespace Condition="$(AssemblyName.EndsWith('.Service'))">$(AssemblyName.Replace('.Service',''))</RootNamespace>
    <RootNamespace Condition="$(AssemblyName.EndsWith('.Service.Migration'))">$(AssemblyName.Replace('.Service.Migration',''))</RootNamespace>
    <RootNamespace Condition="$(AssemblyName.EndsWith('.Client'))">$(AssemblyName.Replace('.Client',''))</RootNamespace>
    <RootNamespace Condition="$(AssemblyName.EndsWith('.Api.Contracts'))">$(AssemblyName.Replace('.Api.Contracts',''))</RootNamespace>
    <RootNamespace Condition="$(AssemblyName.EndsWith('.Api'))">$(AssemblyName.Replace('.Api',''))</RootNamespace>

    <!-- C# / language settings -->
    <LangVersion>preview</LangVersion>
    <Nullable>enable</Nullable>
    <Features>strict</Features>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

    <!-- Generators -->
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>

    <!-- Resources -->
    <DefaultLanguage>en-US</DefaultLanguage>
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
    <NoPackageAnalysis>true</NoPackageAnalysis>

    <!-- Output -->
    <UseArtifactsOutput>true</UseArtifactsOutput>
    <ArtifactsPath>$(RepoRoot)artifacts</ArtifactsPath>
    <PackageOutputPath>$(RepoRoot)artifacts\nupkg</PackageOutputPath>

    <!-- NuGet -->
    <IsPackable>false</IsPackable>
    <IsPublishable>false</IsPublishable>
    <!-- Include the PDB and xmldoc in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb;.xml</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <IncludeSymbols>false</IncludeSymbols>

    <!-- Debug info -->
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateFullPaths Condition="'$(TERM_PROGRAM)' == 'vscode'">true</GenerateFullPaths>

    <!-- Web toolchain settings -->
    <IsTransformWebConfigDisabled>true</IsTransformWebConfigDisabled>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>

    <!-- SourceLink props: https://github.com/dotnet/sourcelink/issues/159 -->
    <EnableSourceLink>false</EnableSourceLink>
    <EnableSourceLink Condition="'$(GitCommitId)' != '' and '$(Configuration)' != 'Debug' and '$(DesignTimeBuild)' != 'true' and '$(BuildingForLiveUnitTesting)' != 'true'">true</EnableSourceLink>
    <UseSourceLink>$(EnableSourceLink)</UseSourceLink>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <RepositoryType>git</RepositoryType>
    <PrivateRepositoryUrl>$(RepositoryUrl)</PrivateRepositoryUrl>
    <ScmRepositoryUrl>$(RepositoryUrl)</ScmRepositoryUrl>
    <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>
    <PackageTags>actual_chat ActualChat</PackageTags>
    <RevisionId>$(GitCommitId)</RevisionId>
    <SourceRevisionId>$(GitCommitId)</SourceRevisionId>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <SourceLinkHasSingleProvider>true</SourceLinkHasSingleProvider>
    <EnableSourceControlManagerQueries>$(EnableSourceLink)</EnableSourceControlManagerQueries>
    <GitVersionBaseDirectory>$(RepoRoot)</GitVersionBaseDirectory>

    <!-- Misc. -->
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <NoLogo>true</NoLogo>
  </PropertyGroup>

  <PropertyGroup Condition="'$(EnableSourceLink)' == 'true'">
    <Deterministic>true</Deterministic>
    <Features>strict;pdb-path-determinism</Features>
    <DeterministicSourcePaths>true</DeterministicSourcePaths>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <PathMap>'$(RepoRoot)'=/_/</PathMap>
  </PropertyGroup>

  <!-- Analyzers & warnings -->
  <PropertyGroup>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <AnalysisLevel>preview</AnalysisLevel>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
    <WarningLevel>4</WarningLevel>
    <!-- NuGet & libraries / frameworks -->
    <!-- NU5048: The 'PackageIconUrl'/'iconUrl' element is deprecated -->
    <!-- NU5105: The package version uses SemVer 2.0.0 or components of SemVer 1.0.0 that are not supported on legacy clients -->
    <NoWarn>$(NoWarn);NU5048;NU5105</NoWarn>
    <!-- C# -->
    <!-- CA1062: Validate arguments of public methods -->
    <!-- CS1591: Missing XML comment for publicly visible type or member -->
    <!-- CA2254: The logging message template should not vary between calls ... -->
    <!-- CS8669: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source. -->
    <NoWarn>$(NoWarn);CA1062;CS1591;CA2254;CS8669</NoWarn>
    <!-- MA0009: Regular expressions should not be vulnerable to Denial of Service attacks -->
    <!-- MA0018: Do not declare static members on generic types -->
    <!-- MA0048: File name must match type name -->
    <!-- MA0056: Virtual method call in constructor -->
    <!-- MA0064: Avoid locking on publicly accessible instance - buggy, triggers on protected fields -->
    <!-- MA0099: Use Explicit enum value for 'Flag' instead of 0 -->
    <!-- RCS1047: Non-asynchronous method name should not end with 'Async' -->
    <!-- VSTHRD003: Avoid awaiting or returning a Task representing work that was not start ed within your context as that can lead to deadlocks. -->
    <!-- VSTHRD103: StateHasChanged synchronously blocks. Await NotifyStateHasChanged instead. -->
    <!-- VSTHRD110: Observe the awaitable result of this method call by awaiting it, assigning to a variable, or passing it to another method. -->
    <NoWarn>$(NoWarn);MA0009;MA0018;MA0048;MA0056;MA0064;MA0099;RCS1047;VSTHRD003;VSTHRD103;VSTHRD110</NoWarn>
    <!-- New .NET 8 warnings -->
    <!-- CA1001: Type C owns disposable field(s) F but is not disposable -->
    <!-- CA1002: Change 'List<T>' in P to use 'Collection<T>', 'ReadOnlyCollection<T>' or 'KeyedCollection<K,V>' -->
    <!-- CA1003: Change the event X to replace the type 'System.Action<T, T>?' with a generic EventHandler -->
    <!-- CA1030: Consider making 'XxxChanged' an event -->
    <!-- CA1031: Modify 'ApplyMauiOSData' to catch a more specific allowed exception type, or rethrow the exception -->
    <!-- CA1033: Make C sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of M and is visible to derived classes -->
    <!-- CA1034: Do not nest type X. Alternatively, change its accessibility so that it is not externally visible. -->
    <!-- CA1040: Avoid empty interfaces -->
    <!-- CA1043: Use Integral Or String Argument For Indexers -->
    <!-- CA1051: Do not declare visible instance fields -->
    <!-- CA1054: Change the type of parameter 'url' of method M from 'string' to 'System.Uri' -->
    <!-- CA1055: Change the return type of method 'M' from 'string' to 'System.Uri' -->
    <!-- CA1056: Change the type of property 'HostInfo.BaseUrl' from 'string' to 'System.Uri' -->
    <!-- CA1063: Provide an overridable implementation of Dispose(bool) on 'CompositeServiceProvider' or mark the type as sealed. -->
    <!-- CA1065: X returns an exception of type Exception -->
    <!-- CA1308: Replace the call to 'ToLowerInvariant' with 'ToUpperInvariant' -->
    <!-- CA1508: someVar != null is always 'false' - !!! Gives too many false positives -->
    <!-- CA1510: Use 'ArgumentNullException.ThrowIfNull' instead of explicitly throwing a new exception instance -->
    <!-- CA1707: Remove the underscores from type name -->
    <!-- CA1711: Rename type name MacNotificationsPermission so that it does not end in 'Permission' -->
    <!-- CA1720: Identifier 'Long' contains type name -->
    <!-- CA1724: The type name C conflicts in whole or in part with the namespace name N. -->
    <!-- CA1725: In member M, change parameter name P to P1 in order to match the identifier as it has been declared in ... -->
    <!-- CA1802: Field 'CheckCount' is declared as 'readonly' but is initialized with a constant value. -->
    <!-- CA1805: Member 'F' is explicitly initialized to its default value -->
    <!-- CA1810: Initialize all static fields in C when those fields are declared and remove the explicit static constructor -->
    <!-- CA1815: Struct C should override Equals -->
    <!-- CA1816: Change Dispose() to call GC.SuppressFinalize(object) -->
    <!-- CA1819: Properties should not return arrays -->
    <!-- CA1848: For improved performance, use the LoggerMessage delegates instead of calling ... -->
    <!-- CA1859: Change return type of method M from TBase to T for improved performance -->
    <!-- CA2000: Call System.IDisposable.Dispose on object created by ... before all references to it are out of scope -->
    <!-- CA2213: C contains field F that is of IDisposable type, but it is never disposed -->
    <!-- CA2225: Provide a method named 'M' as an alternate for operator op_Implicit -->
    <!-- CA2234: Modify M to call 'PostAsync(Uri,...)' instead of 'PostAsync(string, ...)' -->
    <!-- CA5394: Random is an insecure random number generator -->
    <NoWarn>$(NoWarn);CA1001;CA1002;CA1003;CA1030;CA1031;CA1033;CA1034;CA1040;CA1043</NoWarn>
    <NoWarn>$(NoWarn);CA1051;CA1054;CA1055;CA1056;CA1063;CA1065;CA1308;CA1508;CA1510</NoWarn>
    <NoWarn>$(NoWarn);CA1707;CA1711;CA1720;CA1724;CA1725</NoWarn>
    <NoWarn>$(NoWarn);CA1802;CA1805;CA1810;CA1815;CA1816;CA1819;CA1848;CA1859</NoWarn>
    <NoWarn>$(NoWarn);CA2000;CA2213;CA2225;CA2234;CA5394</NoWarn>
    <!-- IDE0055: Fix formatting -->
    <!-- IDE0160: Use block-scoped namespace declarations -->
    <NoWarn>$(NoWarn);IDE0055;IDE0160</NoWarn>
    <!-- CA2007: Consider calling ConfigureAwait on the awaited task -->
    <!-- TODO: Re-enable CA2007 when issue is fixed https://github.com/dotnet/roslyn-analyzers/issues/5712 -->
    <NoWarn>$(NoWarn);CA2007</NoWarn>
  </PropertyGroup>

  <ItemGroup Condition="'$(DeterministicSourcePaths)' =='true'">
    <SourceRoot Include="$(RepoRoot)" RepositoryUrl="$(RepositoryUrl)" SourceControl="git" RevisionId="$(GitCommitId)"/>
  </ItemGroup>

</Project>
