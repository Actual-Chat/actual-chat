<Project ToolsVersion="latest" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Condition="Exists('$(MSBuildThisFileDirectory)Nerdbank.GitVersioning.props')" Project="$(MSBuildThisFileDirectory)Nerdbank.GitVersioning.props"/>

  <PropertyGroup>
    <TargetFramework Condition="!$(MSBuildProjectName.Contains('.Maui'))">net8.0</TargetFramework>
    <RepoRoot>$([MSBuild]::EnsureTrailingSlash('$(MSBuildThisFileDirectory)'))</RepoRoot>
    <SolutionDir Condition="$(SolutionDir) == ''">$(RepoRoot)</SolutionDir>
    <ImplicitUsings>enable</ImplicitUsings>
    <Authors>ActualChat, Inc.</Authors>
    <Company>ActualChat, Inc.</Company>
    <Copyright>Copyright ActualChat, Inc.</Copyright>
    <RepositoryUrl>https://github.com/Actual-Chat/actual-chat</RepositoryUrl>

    <!-- Assembly name & root namespace -->
    <BaseName>ActualChat</BaseName>
    <AssemblyName>$(BaseName).$(MSBuildProjectName)</AssemblyName>
    <RootNamespace>$(AssemblyName)</RootNamespace>
    <RootNamespace Condition="$(MSBuildProjectName.EndsWith('.Contracts'))">$(AssemblyName.Replace('.Contracts',''))</RootNamespace>
    <RootNamespace Condition="$(MSBuildProjectName.EndsWith('.Service'))">$(AssemblyName.Replace('.Service',''))</RootNamespace>
    <RootNamespace Condition="$(MSBuildProjectName.EndsWith('.Service.Migration'))">$(AssemblyName.Replace('.Service.Migration',''))</RootNamespace>
    <RootNamespace Condition="$(MSBuildProjectName.EndsWith('.Client'))">$(AssemblyName.Replace('.Client',''))</RootNamespace>
    <PackageLicenseExpression>UNLICENSED</PackageLicenseExpression>

    <!-- C# / language settings -->
    <LangVersion>preview</LangVersion>
    <Nullable>enable</Nullable>
    <Features>strict</Features>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

    <!-- Analyzers -->
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <AnalysisMode>AllEnabledByDefault</AnalysisMode>
    <AnalysisLevel>preview</AnalysisLevel>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>

    <!-- Generators -->
    <EmitCompilerGeneratedFiles>false</EmitCompilerGeneratedFiles>
    <GenerateDocumentationFile>false</GenerateDocumentationFile>

    <!-- Resources -->
    <DefaultLanguage>en-US</DefaultLanguage>
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
    <NoPackageAnalysis>true</NoPackageAnalysis>

    <!-- Output -->
    <UseArtifactsOutput>true</UseArtifactsOutput>
    <ArtifactsPath>$(RepoRoot)artifacts</ArtifactsPath>
    <PackageOutputPath>$(RepoRoot)artifacts\nupkg</PackageOutputPath>

    <!-- NuGet -->
    <IsPackable>false</IsPackable>
    <IsPublishable>false</IsPublishable>
    <!-- Include the PDB and xmldoc in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb;.xml</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <IncludeSymbols>false</IncludeSymbols>

    <!-- Debug info -->
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <GenerateFullPaths Condition="'$(TERM_PROGRAM)' == 'vscode'">true</GenerateFullPaths>

    <!-- Web toolchain settings -->
    <IsTransformWebConfigDisabled>true</IsTransformWebConfigDisabled>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>

    <!-- Suppressed warnings (please sort alphabetically!) -->
    <!-- CA2254: The logging message template should not vary between calls ... -->
    <!-- CS1591: Missing XML comment for publicly visible type or member -->
    <!-- CS8669: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source. -->
    <!-- MA0009: Regular expressions should not be vulnerable to Denial of Service attacks -->
    <!-- MA0018: Do not declare static members on generic types -->
    <!-- MA0048: File name must match type name -->
    <!-- NU5048: The 'PackageIconUrl' 'iconUrl' element is deprecated -->
    <!-- NU5105: The package version uses SemVer 2.0.0 or components of SemVer 1.0.0 that are not supported on legacy clients -->
    <!-- RCS1047: Non-asynchronous method name should not end with 'Async' -->
    <!-- VSTHRD003: Avoid awaiting or returning a Task representing work that was not start ed within your context as that can lead to deadlocks. -->
    <!-- VSTHRD103: StateHasChanged synchronously blocks. Await NotifyStateHasChanged instead. -->
    <!-- VSTHRD110: Observe the awaitable result of this method call by awaiting it, assigning to a variable, or passing it to another method. -->
    <NoWarn>$(NoWarn);CA1062;CA2254;CS1591;CS8669;MA0009;MA0018;MA0048;NU5048;NU5105;RCS1047;VSTHRD003;VSTHRD103;VSTHRD110</NoWarn>
    <!-- New .NET 8 warnings -->
    <!-- CA1003: Change the event X to replace the type 'System.Action<T, T>?' with a generic EventHandler -->
    <!-- CA1034: Do not nest type X. Alternatively, change its accessibility so that it is not externally visible. -->
    <!-- CA1040: Avoid empty interfaces -->
    <!-- CA1043: Use Integral Or String Argument For Indexers -->
    <!-- CA1051: Do not declare visible instance fields -->
    <!-- CA1056: Change the type of property 'HostInfo.BaseUrl' from 'string' to 'System.Uri' -->
    <!-- CA1063: Provide an overridable implementation of Dispose(bool) on 'CompositeServiceProvider' or mark the type as sealed. -->
    <!-- CA1065: X returns an exception of type Exception -->
    <!-- CA1308: Replace the call to 'ToLowerInvariant' with 'ToUpperInvariant' -->
    <!-- CA1707: Remove the underscores from type name -->
    <!-- CA1819: Properties should not return arrays -->
    <NoWarn>$(NoWarn);CA1003;CA1034;CA1040;CA1043;CA1051;CA1056;CA1063;CA1065;CA1308;CA1707;CA1819</NoWarn>

    <!-- SourceLink props: https://github.com/dotnet/sourcelink/issues/159 -->
    <EnableSourceLink>false</EnableSourceLink>
    <EnableSourceLink Condition="'$(GitCommitId)' != '' and '$(Configuration)' != 'Debug' and '$(DesignTimeBuild)' != 'true' and '$(BuildingForLiveUnitTesting)' != 'true'">true</EnableSourceLink>
    <UseSourceLink>$(EnableSourceLink)</UseSourceLink>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <RepositoryType>git</RepositoryType>
    <PrivateRepositoryUrl>$(RepositoryUrl)</PrivateRepositoryUrl>
    <ScmRepositoryUrl>$(RepositoryUrl)</ScmRepositoryUrl>
    <PackageProjectUrl>$(RepositoryUrl)</PackageProjectUrl>
    <RevisionId>$(GitCommitId)</RevisionId>
    <SourceRevisionId>$(GitCommitId)</SourceRevisionId>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <SourceLinkHasSingleProvider>true</SourceLinkHasSingleProvider>
    <EnableSourceControlManagerQueries>$(EnableSourceLink)</EnableSourceControlManagerQueries>
    <GitVersionBaseDirectory>$(RepoRoot)</GitVersionBaseDirectory>

    <!-- Misc. -->
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <NoLogo>true</NoLogo>
  </PropertyGroup>

  <PropertyGroup Condition="'$(EnableSourceLink)' == 'true'">
    <Deterministic>true</Deterministic>
    <Features>strict;pdb-path-determinism</Features>
    <DeterministicSourcePaths>true</DeterministicSourcePaths>
    <ContinuousIntegrationBuild>false</ContinuousIntegrationBuild>
    <PathMap>'$(RepoRoot)'=/_/</PathMap>
  </PropertyGroup>

  <ItemGroup Condition="'$(DeterministicSourcePaths)' =='true'">
    <SourceRoot Include="$(RepoRoot)" RepositoryUrl="$(RepositoryUrl)" SourceControl="git" RevisionId="$(GitCommitId)"/>
  </ItemGroup>

</Project>
