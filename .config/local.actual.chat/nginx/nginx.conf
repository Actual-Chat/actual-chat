# Detemine the formatting of the log that will be print to the access.log file
log_format testlog '$remote_addr - $remote_user [$time_local] '
               '"$request" $status $bytes_sent '
               '"$http_referer" $http_user_agent $request_body $gzip_ratio '
               '"$request_time $upstream_connect_time $upstream_header_time $upstream_response_time ';

proxy_cache_path /var/cache/nginx/static-cache levels=1:2 keys_zone=static-cache:128m;

# Define the upstreams for image proxy service and actual chat web app
upstream image-proxy {
    server imageproxy:8080;
}

# Determine where to output the log
# access_log /var/log/nginx/access.log;

include snippets/ssl-params.conf;

#Redirect to SSL
server {
    listen 80;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    #listen 80;
    listen 443 ssl;
    server_name local.actual.chat;
    ssl_protocols       TLSv1.2 TLSv1.3;
    client_max_body_size 64M;

    location /sw.js {
        proxy_pass http://local.actual.chat:7080/dist/sw.js;
    }

    location / {
        proxy_pass http://local.actual.chat:7080;

        # additional setting to support Server-Side Blazor
        # https://www.indie-dev.at/2021/07/18/nginx-blazor-server-side/
        proxy_read_timeout 1d;
        proxy_connect_timeout 4;
        proxy_send_timeout 1d;

        include nginx.proxy-headers.conf;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location /boringavatars/ {
        proxy_pass https://source.boringavatars.com/;

        access_log off;

        # set max-age = one week, don't add max-age here, or it will be ignored by spec
        add_header Cache-Control "public";
        expires 30d;
        proxy_cache static-cache;

        # ignore incorrect Kestrel settings :)
        proxy_ignore_headers Set-Cookie;
        proxy_ignore_headers Cache-Control;
        proxy_ignore_headers Expires;
        proxy_hide_header Set-Cookie;
        proxy_hide_header Cache-Control;
        proxy_hide_header Expires;
        proxy_cache_valid 200 300m;
        proxy_cache_valid 404 1m;
        proxy_cache_valid 500 1s;
        proxy_cache_use_stale error timeout updating http_404 http_500 http_502 http_503 http_504;
        proxy_cache_bypass $http_x_purge;
        add_header X-Cache-Status $upstream_cache_status;

        # CORS for static files
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Upgrade-Insecure-Requests,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Encoding,Content-Length,Content-Range' always;

        # Proxy headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }
}

server {
    #listen 80;
    listen 443 ssl;
    server_name cdn.local.actual.chat;
    ssl_protocols       TLSv1.2 TLSv1.3;
    client_max_body_size 64M;

    include nginx.proxy-headers.conf;

    # changed this section to support embedded test page
    location / {
        proxy_pass http://local.actual.chat:7080;

        # additional setting to support Server-Side Blazor
        # https://www.indie-dev.at/2021/07/18/nginx-blazor-server-side/
        proxy_read_timeout 1d;
        proxy_connect_timeout 4;
        proxy_send_timeout 1d;

        include nginx.proxy-headers.conf;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location /media/ {
        proxy_pass http://local.actual.chat:7080/api/content/media/;
    }
}

server {
    #listen 80;
    listen 443 ssl;
    server_name media.local.actual.chat;

    include nginx.proxy-headers.conf;

    location / {
        proxy_pass http://image-proxy;
    }
}
