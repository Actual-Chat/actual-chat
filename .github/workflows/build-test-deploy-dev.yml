name: Build test and deploy
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  create:
  push:
    branches:
      - dev
      - release/v*
    paths-ignore:
      - "**.md"
  pull_request:
    branches: 
      - dev
      - release/v*

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  build:
    name: Build and Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Avoid shallow clone for Nerdbank.GitVersioning
          fetch-depth: 0
          lfs: true

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Replace git+ssh://git@ to https://
        run: sed -i 's/git+ssh:\/\/git@/https:\/\//g' src/nodejs/package-lock.json
      
      - name: Replace npm creds
        run: sed -i -E 's/(_authToken=)(.*)$/\1${{ secrets.NPM_READ_TOKEN }}/g' src/nodejs/.npmrc
      
      - name: Generate Nerdbank.GitVersioning files
        run: dotnet run --project build -- generate-version

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: actual-chat/build:latest
          target: base
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/actual-chat-build.tar

      - name: Upload built image
        uses: actions/upload-artifact@v3
        with:
          name: actual-chat-build
          path: /tmp/actual-chat-build.tar
  
  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Avoid shallow clone for Nerdbank.GitVersioning
          fetch-depth: 0
          lfs: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: actual-chat-build
          path: /tmp
      
      - name: Load Docker image
        run: |
          docker load --input /tmp/actual-chat-build.tar
          docker image ls -a

      - name: Build and Run unit tests
        run: docker-compose -f docker-compose.unit-tests.yml up --abort-on-container-exit --no-log-prefix --exit-code-from tests

      - name: Report test results
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Unit tests results            # Name of the check run which will be created
          path: './artifacts/**/*.trx'   # Path to test results
          reporter: dotnet-trx        # Format of test results

  integration-tests:
    if: |
      github.ref == 'refs/heads/master' ||
      github.ref == 'refs/heads/dev' ||
      startsWith(github.ref, 'refs/remotes/pull/') ||
      startsWith(github.ref, 'refs/heads/release/')

    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Avoid shallow clone for Nerdbank.GitVersioning
          fetch-depth: 0
          lfs: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.7.2
        with:
          token_format: access_token
          workload_identity_provider: projects/1074465586741/locations/global/workloadIdentityPools/actual-identity-pool/providers/github-actual-chat
          service_account: sa-deploy-bot@actual-infrastructure.iam.gserviceaccount.com
      
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: actual-chat-build
          path: /tmp
      
      - name: Load Docker image
        run: |
          docker load --input /tmp/actual-chat-build.tar
          docker image ls -a

      - name: Run integration tests
        run: |-
          export GITHUB_TOKEN="${{secrets.GITHUB_TOKEN}}"
          export NPM_READ_TOKEN="${{secrets.NPM_READ_TOKEN}}"
          export USERSSETTINGS__GOOGLECLIENTID="${{secrets.USERSSETTINGS__GOOGLECLIENTID}}"
          export USERSSETTINGS__GOOGLECLIENTSECRET="${{secrets.USERSSETTINGS__GOOGLECLIENTSECRET}}"
          export USERSSETTINGS__MICROSOFTACCOUNTCLIENTID="${{secrets.USERSSETTINGS__MICROSOFTACCOUNTCLIENTID}}"
          export USERSSETTINGS__MICROSOFTACCOUNTCLIENTSECRET="${{secrets.USERSSETTINGS__MICROSOFTACCOUNTCLIENTSECRET}}"
          export TESTS__USERS__USER1__EMAIL="${{secrets.TESTS__USERS__USER1__EMAIL}}"
          export TESTS__USERS__USER1__PASSWORD="${{secrets.TESTS__USERS__USER1__PASSWORD}}"
          docker-compose -f docker-compose.yml -f docker-compose.integration-tests.yml up --abort-on-container-exit --no-log-prefix --exit-code-from tests

      - name: Report test results
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Integration tests results            # Name of the check run which will be created
          path: './artifacts/**/*.trx'   # Path to test results
          reporter: dotnet-trx        # Format of test results
