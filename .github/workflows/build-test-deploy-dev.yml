name: Build test and deploy
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  create:
  push:
    branches:
      - master
      - dev
      - release/v*
    paths-ignore:
      - "**.md"
  pull_request:
    branches: 
      - master
      - dev
      - release/v*

permissions:
  contents: read
  id-token: write
  packages: write
  issues: read
  checks: write
  statuses: write

jobs:
  build-test:
    name: Build and Run Tests
    runs-on: ubuntu-latest
    outputs:
      semver2: ${{ steps.nbgv.outputs.SemVer2 }}
      version: ${{ steps.nbgv.outputs.Version }}
      simple-version: ${{ steps.nbgv.outputs.SimpleVersion }}
    services:
      redis:
        image: redis:6.2.6-alpine3.14
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
      postgres:
        image: postgres:14.0-alpine3.14
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Avoid shallow clone for Nerdbank.GitVersioning
          fetch-depth: 0
          lfs: true

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Replace git+ssh://git@ to https://
        run: sed -i 's/git+ssh:\/\/git@/https:\/\//g' src/nodejs/package-lock.json
      
      - name: Replace npm creds
        run: sed -i -E 's/(_authToken=)(.*)$/\1${{ secrets.NPM_READ_TOKEN }}/g' src/nodejs/.npmrc

      - name: Generate version variables
        id: nbgv
        uses: dotnet/nbgv@master
        with:
          setAllVars: true

      - name: Restore tools for nbgv
        run: dotnet tool restore
      
      - name: Generate Nerdbank.GitVersioning files
        run: dotnet run --project build -- generate-version

      - name: Build tests
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: actual-chat-app-build:latest
          target: dotnet-build-debug
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run unit tests
        run: >-
          docker run -v $(pwd)/artifacts:/artifacts actual-chat-app-build:latest /bin/bash -c "
            dotnet run --project build --configuration Release --no-build --no-launch-profile -- --configuration Debug unit-tests &&
            cp -R /src/tests/. /artifacts"
        
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.7.2
        with:
          token_format: access_token
          workload_identity_provider: projects/1074465586741/locations/global/workloadIdentityPools/actual-identity-pool/providers/github-actual-chat
          service_account: sa-deploy-bot@actual-infrastructure.iam.gserviceaccount.com

      - name: Run integration tests
        if: |
          github.ref == 'refs/heads/master' ||
          github.ref == 'refs/heads/dev' ||
          startsWith(github.ref, 'refs/remotes/pull/') ||
          startsWith(github.ref, 'refs/heads/release/')
        env:
          Hosting__WebRootPath: /src/src/dotnet/UI.Blazor.Host/wwwroot/
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NPM_READ_TOKEN: ${{secrets.NPM_READ_TOKEN}}
          USERSSETTINGS__GOOGLECLIENTID: ${{secrets.USERSSETTINGS__GOOGLECLIENTID}}
          USERSSETTINGS__GOOGLECLIENTSECRET: ${{secrets.USERSSETTINGS__GOOGLECLIENTSECRET}}
          USERSSETTINGS__MICROSOFTACCOUNTCLIENTID: ${{secrets.USERSSETTINGS__MICROSOFTACCOUNTCLIENTID}}
          USERSSETTINGS__MICROSOFTACCOUNTCLIENTSECRET: ${{secrets.USERSSETTINGS__MICROSOFTACCOUNTCLIENTSECRET}}
          TESTS__USERS__USER1__EMAIL: ${{secrets.TESTS__USERS__USER1__EMAIL}}
          TESTS__USERS__USER1__PASSWORD: ${{secrets.TESTS__USERS__USER1__PASSWORD}}
          RedisSettings__DefaultRedis: redis|test_{instance.}{context}
        run: |-
          docker run -v $(pwd)/artifacts:/artifacts \
            -v "$GOOGLE_APPLICATION_CREDENTIALS:/src/key.json"
            -e GOOGLE_APPLICATION_CREDENTIALS=/src/key.json \
            -e Hosting__WebRootPath \
            -e GITHUB_TOKEN \
            -e NPM_READ_TOKEN \
            -e USERSSETTINGS__GOOGLECLIENTID \
            -e USERSSETTINGS__GOOGLECLIENTSECRET \
            -e USERSSETTINGS__MICROSOFTACCOUNTCLIENTID \
            -e USERSSETTINGS__MICROSOFTACCOUNTCLIENTSECRET \
            -e TESTS__USERS__USER1__EMAIL \
            -e TESTS__USERS__USER1__PASSWORD \
            -e RedisSettings__DefaultRedis \
            actual-chat-app-build:latest /bin/bash -c "dotnet run --project build --configuration Release --no-build --no-launch-profile -- --configuration Debug integration-tests && cp -R /src/tests/. /artifacts"

      - name: Report test results
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Tests results            # Name of the check run which will be created
          path: './artifacts/**/*.trx'   # Path to test results
          reporter: dotnet-trx        # Format of test results

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        if: |
          github.ref == 'refs/heads/master' ||
          github.ref == 'refs/heads/dev' ||
          startsWith(github.ref, 'refs/heads/release/')
        uses: docker/build-push-action@v3
        with:
          context: .
          tags: |
            actual-chat-app:${{ steps.nbgv.outputs.SemVer2 }}
            ghcr.io/actual-chat/actual-chat-app:${{ steps.nbgv.outputs.SemVer2 }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max


  deploy-dev:
    name: Deploy dev
    if: |
      github.ref == 'refs/heads/master' ||
      github.ref == 'refs/heads/dev' ||
      startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    needs: build-test
    environment: dev
    steps:
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.7.2
        with:
          token_format: access_token
          workload_identity_provider: projects/1074465586741/locations/global/workloadIdentityPools/actual-identity-pool/providers/github-actual-chat
          service_account: sa-deploy-bot@actual-infrastructure.iam.gserviceaccount.com

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Deploy dev
        if: |
          github.ref == 'refs/heads/dev' ||
          startsWith(github.ref, 'refs/heads/release/')
        uses: akhilerm/tag-push-action@v2.0.0
        with:
          src: ghcr.io/actual-chat/actual-chat-app:${{needs.build-test.outputs.semver2}}
          dst: |
            us-central1-docker.pkg.dev/actual-chat-dev-330512/dev/actualchat-app:${{needs.build-test.outputs.semver2}}
            us-central1-docker.pkg.dev/actual-infrastructure/docker-dev/actual-chat-app:${{needs.build-test.outputs.semver2}}

  deploy-prod:
    name: Deploy prod
    if: |
      github.ref == 'refs/heads/master' ||
      startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    needs: 
      - build-test
      - deploy-dev
    environment: prod
    steps:
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.7.2
        with:
          token_format: access_token
          workload_identity_provider: projects/1074465586741/locations/global/workloadIdentityPools/actual-identity-pool/providers/github-actual-chat
          service_account: sa-deploy-bot@actual-infrastructure.iam.gserviceaccount.com

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Deploy prod
        uses: akhilerm/tag-push-action@v2.0.0
        with:
          src: ghcr.io/actual-chat/actual-chat-app:${{needs.build-test.outputs.semver2}}
          dst: |
            us-central1-docker.pkg.dev/actual-infrastructure/docker/actual-chat-app:${{needs.build-test.outputs.version}}
