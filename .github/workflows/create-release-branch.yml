name: Create release branch
on: 
  workflow_dispatch:
    ref: dev
    inputs:
      create-rc:
        description: Create release candidate
        required: true
        type: boolean
        default: true

permissions:
  contents: write
  checks: write
  statuses: write

jobs:
  create-release:
    name: Create release branch
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          persist-credentials: false
          # Avoid shallow clone for Nerdbank.GitVersioning
          fetch-depth: 0
          lfs: false

      - name: ‚öôÔ∏è Restore tools for nbgv
        run: dotnet tool restore

      - name: ‚öôÔ∏è Generate version variables
        id: nbgv
        uses: dotnet/nbgv@master
        with:
          setAllVars: true
      
      - run: echo 'Current SemVer2=${{ steps.nbgv.outputs.SemVer2 }}'

      - name: ‚öôÔ∏è Setup CI GIT
        run: |
          git config user.name "actualchat bot"
          git config user.email actualchat.bot@actual.chat

      - name: üõ†Ô∏è Increment version.json on dev + create release branch
        id: versions
        run: |
          nbgv prepare-release ${{ github.event.inputs.create-rc && 'rc' ||  '' }}
          echo "::set-output name=MAIN_VERSION_COMMIT_MESSAGE::$(git log --format=%B -n 1 --skip 1)"
          git checkout release/v$NBGV_MajorMinorVersion
          echo "::set-output name=RELEASE_VERSION_COMMIT_MESSAGE::$(git log --format=%B -n 1)"
          git checkout dev

      - name: ‚è© Push version.json updates to dev
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # doesn't trigger workflow
          branch: dev

      - name: ‚è© Push release branch to origin
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.CREATE_RELEASE_GITHUB_TOKEN }} # trigger workflow on create release branch!
          branch: release/v${{ steps.nbgv.MajorMinorVersion }}

      - run: echo 'Branch release/v${{ steps.nbgv.MajorMinorVersion }} has been created'