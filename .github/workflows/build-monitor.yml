name: Build dotnet monitor docker image
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  workflow_dispatch:
    inputs:
      deployToDev:
        description: Push image to dev GAR
        type: boolean
      deployToProd:
        description: Push image to prod GAR
        type: boolean

permissions:
  contents: read
  id-token: write
  packages: write
  issues: read
  checks: write
  statuses: write

env:
  MONITOR_TAG: "7.1-alpine-amd64"
  GCSFUSE_GIT_TAG: "v0.41.12"
  TARGET_IMAGE_NAME: "dotnet-monitor"

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Avoid shallow clone for Nerdbank.GitVersioning
          fetch-depth: 0
          lfs: true

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image 'dotnet-monitor:${{ env.MONITOR_TAG }}'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: monitor.Dockerfile
          tags: |
            ghcr.io/actual-chat/${{ env.TARGET_IMAGE_NAME }}:${{ env.MONITOR_TAG }}
          push: true
          build-args: |
            MONITOR_TAG=${{ env.MONITOR_TAG }}
            GCSFUSE_GIT_TAG=${{ env.GCSFUSE_GIT_TAG }}

  deploy:
    name: Push image to GAR
    if: ${{ inputs.deployToDev || inputs.deployToProd }}
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0.7.2
        with:
          token_format: access_token
          workload_identity_provider: projects/1074465586741/locations/global/workloadIdentityPools/actual-identity-pool/providers/github-actual-chat
          service_account: sa-deploy-bot@actual-infrastructure.iam.gserviceaccount.com

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Deploy dev
        if: ${{ inputs.deployToDev == 'true' }}
        uses: akhilerm/tag-push-action@v2.0.0
        with:
          src: ghcr.io/actual-chat/${{ env.TARGET_IMAGE_NAME }}:${{ env.MONITOR_TAG }}
          dst: |
            us-central1-docker.pkg.dev/actual-infrastructure/docker-dev/${{ env.TARGET_IMAGE_NAME }}:${{ env.MONITOR_TAG }}

      - name: Deploy prod
        if: ${{ inputs.deployToProd }}
        uses: akhilerm/tag-push-action@v2.0.0
        with:
          src: ghcr.io/actual-chat/${{ env.TARGET_IMAGE_NAME }}:${{ env.MONITOR_TAG }}
          dst: |
            us-central1-docker.pkg.dev/actual-infrastructure/docker/${{ env.TARGET_IMAGE_NAME }}:${{ env.MONITOR_TAG }}
